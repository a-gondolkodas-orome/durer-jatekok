(function(){var e={6203:function(e){var t='<div class="p-4"> <router-view></router-view> </div> ';e.exports=t},8773:function(e){var t="<div class=\"animate-spin h-8 w-8 place-self-center border-t-blue-600 rounded-full border-4\" :style=\"{ 'visibility': isEnemyMoveInProgress ? 'visible' : 'hidden' }\"></div> ";e.exports=t},2448:function(e){var t='<div> <template v-if="game"> <button class="rounded-lg px-4 bg-blue-400 hover:bg-blue-600 js-back-to-overview" @click="goBackToOverview()">&lt; Vissza a listához</button> <h1 class="text-blue-600 text-2xl font-bold pb-4">{{ game.name }}</h1> <hr/> <component :is="gameId"></component> </template> <page-not-found v-if="!game"></page-not-found> </div> ';e.exports=t},5470:function(e){var t='<div> <p class="text-justify"> Ez egy példa játék Az új leosztás gombra kattintva generálhatsz egy felállást. A felállás ismeretében te döntheted el, hogy kezdeni szeretnél-e, vagy második játékos lenni. Sok sikert! :) </p> <div class="flex flex-wrap" id="demonstration"> <div class="game__board"> <button v-if="shouldPlayerMoveNext && isGameInProgress" class="game__cta-button" @click="playerMove({ board: [], isGameEnd: true })">Lépek!</button> </div> <div class="p-1 flex flex-col flex-grow flex-shrink-0 basis-80"> <p class="text-center font-bold text-lg">{{ ctaText }}</p> <enemy-loader/> <p class="italic text-justify">{{ stepDescription }}</p> <button v-if="isGameReadyToStart" class="game__cta-button js-first-player" @click="startGameAsPlayer({ isFirst: true })"> Kezdő leszek </button> <button v-if="isGameReadyToStart" class="game__cta-button js-second-player" @click="startGameAsPlayer({ isFirst: false })"> Második leszek </button> <div class="flex flex-grow items-end"> <button class="game__cta-button mt-4 js-restart-game" @click="initializeGame()"> Új leosztás </button> </div> </div> </div> </div> ';e.exports=t},2944:function(e){var t='<div> <p class="text-justify"> Ez a játék a VIII. Dürer döntőjén szerepelt B kategóriában. A pályán kezdetben 37 korong van, három kupacban. A soron következő játékos először az egyik kupacot teljes egészében kiveszi a játékból; majd egy másik kupacot kettéoszt két kisebb kupacra (mindkettőbe legalább 1 korongnak kerülnie kell). Egy lépést követően tehát újra három kupac marad. Az a játékos veszít, aki nem tud szabályosan lépni (azaz egyik kupacot se tudja szétosztani). Az új leosztás gombra kattintva generálhatsz egy felállást. A felállás ismeretében te döntheted el, hogy kezdeni szeretnél-e, vagy második játékos lenni. Sok sikert! :) </p> <div class="flex flex-wrap" id="heap-splitter"> <div class="game__board"> <div v-for="rowIndex in [0, 1, 2]" class="game__pile" :class="{ \'border-b-black border-b-2\': rowIndex === 2 }"> <template v-for="(_, pieceIndex) in board[rowIndex]"> <span v-if="shouldShowDividerToTheLeft({ rowIndex, pieceIndex })" class="inline-block border-r-black border-r-4 h-16 border-dotted -ml-1"></span> <span :class="{ \'bg-red-600\': rowColor({ rowIndex }) === \'red\', \'bg-blue-600\': rowColor({ rowIndex }) === \'blue\', \'opacity-50\': (!shouldPlayerMoveNext && isGameInProgress) || rowIndex === removedRowIndex }" class="game__piece rounded-full mr-1" :style="{ \'pointer-events\': shouldPlayerMoveNext ? \'auto\' : \'none\', \'cursor\': pieceClickNotAllowed({ rowIndex, pieceIndex }) ? \'not-allowed\' : \'pointer\' }" @click="clickPiece({ rowIndex, pieceIndex })" @mouseover="hoveredPiece = { rowIndex, pieceIndex }" @mouseout="hoveredPiece = null"></span> </template> <span class="inline-block h-16 align-middle px-2 text-xl -mt-4"> {{ currentChoiceDescription(rowIndex) }} </span> </div> </div> <div class="p-1 flex flex-col flex-grow flex-shrink-0 basis-80"> <p class="text-center font-bold text-lg">{{ ctaText }}</p> <enemy-loader/> <p class="italic text-justify">{{ stepDescription }}</p> <button v-if="isGameReadyToStart" class="game__cta-button js-first-player" @click="startGameAsPlayer({ isFirst: true })"> Kezdő leszek </button> <button v-if="isGameReadyToStart" class="game__cta-button js-second-player" @click="startGameAsPlayer({ isFirst: false })"> Második leszek </button> <div class="flex flex-grow items-end"> <button class="game__cta-button mt-4 js-restart-game" @click="initializeGame()"> Új leosztás </button> </div> </div> </div> </div> ';e.exports=t},3814:function(e){var t='<div> <p class="text-justify"> Ez a játék a XIII. Dürer döntőjén szerepelt E+ kategóriában. A pályán kezdetben négy kupac korong van. A soron következő játékos először az egyik kupacot teljes egészében kiveszi a játékból; majd egy másik kupacot kettéoszt két kisebb kupacra (mindkettőbe legalább 1 korongnak kerülnie kell). Egy lépést követően tehát újra 4 kupac marad. Az a játékos veszít, aki nem tud szabályosan lépni (azaz egyik kupacot se tudja szétosztani). Az új leosztás gombra kattintva generálhatsz egy felállást. A felállás ismeretében te döntheted el, hogy kezdeni szeretnél-e, vagy második játékos lenni. Sok sikert! :) </p> <div class="flex flex-wrap" id="heap-splitter"> <div class="game__board"> <div v-for="rowIndex in [0, 1, 2, 3]" class="game__pile" :class="{ \'border-b-black border-b-2\': rowIndex === 3 }"> <template v-for="(_, pieceIndex) in board[rowIndex]"> <span v-if="shouldShowDividerToTheLeft({ rowIndex, pieceIndex })" class="inline-block border-r-black border-r-4 h-16 border-dotted -ml-1"></span> <span :class="{ \'bg-red-600\': rowColor({ rowIndex }) === \'red\', \'bg-blue-600\': rowColor({ rowIndex }) === \'blue\', \'opacity-50\': (!shouldPlayerMoveNext && isGameInProgress) || rowIndex === removedRowIndex }" class="game__piece rounded-full mr-1" :style="{ \'pointer-events\': shouldPlayerMoveNext ? \'auto\' : \'none\', \'cursor\': pieceClickNotAllowed({ rowIndex, pieceIndex }) ? \'not-allowed\' : \'pointer\' }" @click="clickPiece({ rowIndex, pieceIndex })" @mouseover="hoveredPiece = { rowIndex, pieceIndex }" @mouseout="hoveredPiece = null"></span> </template> <span class="inline-block h-16 align-middle px-2 text-xl -mt-4"> {{ currentChoiceDescription(rowIndex) }} </span> </div> </div> <div class="p-1 flex flex-col flex-grow flex-shrink-0 basis-80"> <p class="text-center font-bold text-lg">{{ ctaText }}</p> <enemy-loader/> <p class="italic text-justify">{{ stepDescription }}</p> <button v-if="isGameReadyToStart" class="game__cta-button js-first-player" @click="startGameAsPlayer({ isFirst: true })"> Kezdő leszek </button> <button v-if="isGameReadyToStart" class="game__cta-button js-second-player" @click="startGameAsPlayer({ isFirst: false })"> Második leszek </button> <div class="flex flex-grow items-end"> <button class="game__cta-button mt-4 js-restart-game" @click="initializeGame()"> Új leosztás </button> </div> </div> </div> </div> ';e.exports=t},464:function(e){var t='<div> <p class="text-justify"> A pályán mindig két kupac korong található. A soron következő játékos választ egy kupacot, és azt szétosztja két kisebb kupacra (mindkettőbe legalább 1 korongnak kerülnie kell), a másik kupacot pedig kidobjuk. Az a játékos veszít, aki nem tud szabályosan lépni (azaz egyik kupacot se tudja szétosztani). Az új leosztás gombra kattintva generálhatsz egy felállást. A felállás ismeretében te döntheted el, hogy kezdeni szeretnél-e, vagy második játékos lenni. Sok sikert! :) </p> <div class="flex flex-wrap" id="heap-splitter"> <div class="game__board"> <div v-for="rowIndex in [0, 1]" class="game__pile" :class="{ \'border-b-black border-b-2\': rowIndex === 1 }"> <template v-for="(_, pieceIndex) in board[rowIndex]"> <span v-if="shouldShowDividerToTheLeft({ rowIndex, pieceIndex })" class="inline-block border-r-black border-r-4 h-16 border-dotted -ml-1"></span> <span :class="{ \'opacity-50\': !shouldPlayerMoveNext && isGameInProgress }" class="game__piece bg-blue-600 rounded-full mr-1" :style="{ \'pointer-events\': shouldPlayerMoveNext ? \'auto\' : \'none\', \'cursor\': pieceIndex === 0 ? \'not-allowed\' : \'pointer\' }" @click="clickPiece({ rowIndex, pieceIndex })" @mouseover="hoveredPiece = { rowIndex, pieceIndex }" @mouseout="hoveredPiece = null"></span> </template> <span class="inline-block h-16 align-middle px-2 text-xl -mt-4"> {{ currentChoiceDescription(rowIndex) }} </span> </div> </div> <div class="p-1 flex flex-col flex-grow flex-shrink-0 basis-80"> <p class="text-center font-bold text-lg">{{ ctaText }}</p> <enemy-loader/> <p class="italic text-justify">{{ stepDescription }}</p> <button v-if="isGameReadyToStart" class="game__cta-button js-first-player" @click="startGameAsPlayer({ isFirst: true })"> Kezdő leszek </button> <button v-if="isGameReadyToStart" class="game__cta-button js-second-player" @click="startGameAsPlayer({ isFirst: false })"> Második leszek </button> <div class="flex flex-grow items-end"> <button class="game__cta-button mt-4 js-restart-game" @click="initializeGame()"> Új leosztás </button> </div> </div> </div> </div> ';e.exports=t},2428:function(e,t,r){var a=r(7091),n=r(9259),o=a(n),i='<div> <svg style="display:none"> <symbol id="game-soldier-icon" viewBox="0 0 298.167 298.167"> <g> <polygon points="87.226,49.664 87.226,103.334 141.228,103.334 \t"/> <path d="M57.737,224.637c4.569-0.903,9.541-2.088,14.62-3.407c-1.152-5.343-1.774-10.881-1.774-16.564\n          c0-19.615,7.248-37.558,19.186-51.332h118.631c11.937,13.774,19.185,31.717,19.185,51.332c0,5.683-0.622,11.221-1.774,16.564\n          c5.079,1.319,10.051,2.503,14.62,3.407c1.406-6.438,2.154-13.118,2.154-19.971c0-20.161-6.415-38.852-17.31-54.14\n          c3.8-2.721,6.285-7.162,6.285-12.192c0-8.284-6.716-15-15-15h-5h-124h-6c-8.284,0-15,6.716-15,15c0,5.045,2.498,9.496,6.316,12.216\n          c-10.885,15.284-17.293,33.966-17.293,54.116C55.582,211.519,56.33,218.199,57.737,224.637z"/> <path d="M149.083,283.167c-11.725,0-22.848-2.602-32.849-7.23c-10.838-0.202-20.728-0.808-29.685-1.821\n          c16.578,14.942,38.511,24.052,62.533,24.052c24.023,0,45.955-9.109,62.533-24.051c-8.958,1.013-18.847,1.618-29.685,1.82\n          C171.931,280.565,160.808,283.167,149.083,283.167z"/> <circle cx="183.987" cy="184.168" r="12.465"/> <circle cx="114.18" cy="184.168" r="12.465"/> <path d="M168.083,221.334c-4.304,0-8.276,1.383-11.524,3.712v-25.397c0-4.107-3.165-7.688-7.271-7.811\n          c-4.247-0.127-7.729,3.277-7.729,7.496c0,9.756,0,15.835,0,25.678c-3.239-2.309-7.193-3.678-11.476-3.678\n          c-7.958,0-56.993,11.918-79.534,17.277c-5.048,1.2-5.868,7.975-1.294,10.425c20.996,11.245,59.479,11.982,75.34,11.982\n          c2.388,0,4.263-0.017,5.488-0.017c8.982,0,16.56-5.975,19-14.163c2.44,8.188,10.019,14.163,19,14.163\n          c1.225,0,3.103,0.017,5.488,0.017c15.858,0,54.344-0.735,75.34-11.982c4.574-2.45,3.755-9.225-1.294-10.426\n          C225.078,233.251,176.042,221.334,168.083,221.334z"/> <path d="M210.4,27.163c-2.574-6.903-9.207-11.829-17.008-11.829h-27.1C165.3,6.704,157.98,0,149.083,0s-16.217,6.704-17.209,15.334\n          h-26.148c-8.076,0-14.912,5.273-17.276,12.561l60.609,60.61L210.4,27.163z"/> <polygon points="211.226,103.334 211.226,48.664 156.89,103.334 \t"/> </g> </symbol> </svg> <p class="text-justify"> A török szultán serege megtámadta Hunyadi várát. A várlépcső egyes fokain néhány janicsár áll. Minden reggel a szultán kettéosztja a hadseregét egy piros és egy kék hadtestre. Hunyadi a nap folyamán vagy a piros, vagy a kék sereget megsemmisíti, választása szerint. Éjszaka minden megmaradt janicsár egy lépcsőfokot fellép. Hunyadi nyer, ha a szultán egész seregét megsemmisítette. A szultán nyer, ha lesz olyan janicsár, aki felér a várhoz. Az új játék gombra kattintva generálhatsz egy felállást. A felállás ismeretében te döntheted e, hogy Hunyadiként vagy a török szultánként szeretnél-e játszani. Sok sikert! :) </p> <div class="flex flex-wrap" id="hunyadi-and-the-janissaries"> <div class="game__board"> <img src="'+o+'" style="display:block;margin:auto"> <div v-for="rowIndex in [0, 1, 2, 3, 4]" class="game__pile" :class="{ \'border-b-black border-b-2\': rowIndex === 4 }"> <span v-for="(group, pieceIndex) in board[rowIndex]" class="game__piece mx-1 js-clickable-soldier" @click="toggleGroup(rowIndex, pieceIndex)"> <svg class="game__piece" :class="group === \'blue\' ? \'fill-blue-600\' : \'fill-red-600\'"> <use xlink:href="#game-soldier-icon"/> </svg> </span> </div> </div> <div class="p-1 flex flex-col flex-grow flex-shrink-0 basis-80"> <p class="text-center font-bold text-lg">{{ ctaText }}</p> <enemy-loader/> <p class="italic text-justify">{{ stepDescription }}</p> <template v-if="isGameReadyToStart"> <button class="game__cta-button js-second-player" @click="startGameAsPlayer({ isFirst: false })"> Hunyadi leszek </button> <button class="game__cta-button js-first-player" @click="startGameAsPlayer({ isFirst: true })"> Szultán leszek </button> </template> <template v-if="isGameInProgress"> <button v-if="isPlayerSultan" :class="{ \'opacity-50\': isEnemyMoveInProgress }" class="game__cta-button js-finalize-groups" @click="finalizeSoldierGrouping()"> Lépek </button> <button v-if="!isPlayerSultan" :class="{ \'opacity-50\': isEnemyMoveInProgress }" class="game__cta-button bg-red-400 hover:bg-red-600 js-kill-red" @click="killGroup(\'red\')"> Legyőzöm a pirosakat </button> <button v-if="!isPlayerSultan" :class="{ \'opacity-50\': isEnemyMoveInProgress }" class="game__cta-button bg-blue-400 hover:bg-blue-600" @click="killGroup(\'blue\')"> Legyőzöm a kékeket </button> </template> <div class="flex flex-grow items-end"> <button class="game__cta-button mt-4 js-restart-game" @click="initializeGame()"> Új leosztás </button> </div> </div> </div> </div> ';e.exports=i},975:function(e){var t='<div> <p class="text-justify"> Ez a játék a XIII. Dürer döntőjén szerepelt E kategóriában. Károly és Dezső m-ig szeretnének elszámolni, és közben a következő játékot játsszák: 0-ról kezdenek, a két játékos felváltva adhat hozzá egy 13-nál kisebb pozitív egészet a korábbi számhoz, azonban a babonájuk miatt ha egyikük x-et adott hozzá, akkor másikuk a következő lépésben nem adhat hozzá 13 − x-et. Az veszít, aki eléri (vagy átlépi) m-et. Az új játék gombra kattintva generálhatsz egy felállást. Az m szám ismeretében te döntheteted el, hogy a kezdő vagy a második játékos bőrébe szeretnél e bújni. </p> <div class="flex flex-wrap" id="two_times_two"> <div class="game__board game_board_small"> <table class="game_table"> <tr> <th>Szám</th> <th>Cél</th> <th>Tiltott lépés</th> </tr> <tr> <td>{{ board.current }}</td> <td>{{ board.target }}</td> <td>{{ board.restricted || \'-\' }}</td> </tr> </table> <template v-if="isGameInProgress"> <label for="step"> Következő lépés: </label> <input id="step" type="number" min="1" max="12" v-model="step" class="border-2"> <button class="game__cta-button" @click="attemptStep()" :class="{ \'opacity-50\': isEnemyMoveInProgress }">Lépek</button> </template> </div> <div class="p-1 flex flex-col flex-grow flex-shrink-0 basis-80"> <p class="text-center font-bold text-lg">{{ ctaText }}</p> <enemy-loader/> <p class="italic text-justify">{{ stepDescription }}</p> <button v-if="isGameReadyToStart" class="game__cta-button js-first-player" @click="startGameAsPlayer({ isFirst: true })"> Kezdő leszek </button> <button v-if="isGameReadyToStart" class="game__cta-button js-second-player" @click="startGameAsPlayer({ isFirst: false })"> Második leszek </button> <div class="flex flex-grow items-end"> <button class="game__cta-button mt-4 js-restart-game" @click="initializeGame()"> Új leosztás </button> </div> </div> </div> </div> ';e.exports=t},4433:function(e){var t='<div> <p class="text-justify"> Adott egy 2 × 2-es táblázat, és hozzá mindkét játékosnak van 3 db korongja. A játék során felváltva tesznek le ezekből egyet-egyet a táblázat tetszőleges mezőjére. A második játékos akkor nyer, ha a játék végén minden mezőben különböző számú korong található. (Azaz 0, 1, 2, 3 a kiosztás a végén valamilyen sorrendben). Minden egyéb esetben pedig a kezdő játékos nyer. Te döntheteted el, hogy a kezdő vagy a második játékos bőrébe szeretnél e bújni. Sok sikert! :) </p> <div class="flex flex-wrap" id="two_times_two"> <div class="game__board game_board_small"> <table class="game_table"> <tr> <td id="pile_0" @click="placePiece(0)"> <span v-for="i in board[0]" :key="i" class="game__piece bg-blue-600 rounded-full mr-1"></span> </td> <td id="pile_1" @click="placePiece(1)"> <span v-for="i in board[1]" :key="i" class="game__piece bg-blue-600 rounded-full mr-1"></span> </td> </tr> <tr> <td id="pile_2" @click="placePiece(2)"> <span v-for="i in board[2]" :key="i" class="game__piece bg-blue-600 rounded-full mr-1"></span> </td> <td id="pile_3" @click="placePiece(3)"> <span v-for="i in board[3]" :key="i" class="game__piece bg-blue-600 rounded-full mr-1"></span> </td> </tr> </table> </div> <div class="p-1 flex flex-col flex-grow flex-shrink-0 basis-80"> <p class="text-center font-bold text-lg">{{ ctaText }}</p> <enemy-loader/> <p class="italic text-justify">{{ stepDescription }}</p> <button v-if="isGameReadyToStart" class="game__cta-button js-first-player" @click="startGameAsPlayer({ isFirst: true })"> Kezdő leszek </button> <button v-if="isGameReadyToStart" class="game__cta-button js-second-player" @click="startGameAsPlayer({ isFirst: false })"> Második leszek </button> <div class="flex flex-grow items-end"> <button class="game__cta-button mt-4 js-restart-game" @click="initializeGame()"> Új leosztás </button> </div> </div> </div> </div> ';e.exports=t},411:function(e){var t='<div> <h1 class="text-blue-600 text-2xl font-bold pb-4">Dürer játékok</h1> <table class="w-full border-collapse"> <thead> <tr> <th v-for="header in [\'Év\', \'Forduló\', \'Kategória\', \'Játék\', \'\']" class="bg-gray-500 border-2 border-gray-300 text-center text-white font-bold p-1">{{ header }}</th> </tr> </thead> <tr v-for="game in gamesToShow" class="odd:bg-gray-200"> <td v-for="gameProp in [game.year, game.round, game.category, game.name]" class="border-2 border-gray-300 text-center p-1">{{ gameProp }}</td> <td class="border-2 border-gray-300 text-center p-1"> <button @click="goToGamePage(game.component)" :class="`rounded-lg px-4 bg-blue-400 hover:bg-blue-600 js-select-${game.component}`">Kipróbálom!</button> </td> </tr> </table> </div> ';e.exports=t},8953:function(e){var t='<div> Sajnáljuk, a keresett oldal nem található. Az alábbi gombra kattintva válassz egy játékot. <button class="rounded-lg px-4 bg-blue-400 hover:bg-blue-600 js-back-to-overview" @click="$router.push(\'/\')">A játékok listájához</button> </div> ';e.exports=t},6330:function(e,t,r){"use strict";var a={};r.r(a),r.d(a,{generateNewBoard:function(){return b},getBoardAfterPlayerStep:function(){return y},makeAiMove:function(){return x}});var n={};r.r(n),r.d(n,{generateNewBoard:function(){return T},getBoardAfterKillingGroup:function(){return S},makeAiMove:function(){return G}});var o={};r.r(o),r.d(o,{generateNewBoard:function(){return A},makeAiMove:function(){return R}});var i={};r.r(i),r.d(i,{generateNewBoard:function(){return D},getBoardAfterPlacingOnTile:function(){return O},makeAiMove:function(){return B}});var s={};r.r(s),r.d(s,{generateNewBoard:function(){return L},getBoardAfterStep:function(){return K},makeAiMove:function(){return H}});var l={};r.r(l),r.d(l,{generateNewBoard:function(){return q},getBoardAfterPlayerStep:function(){return Q},makeAiMove:function(){return Y}});var d={};r.r(d),r.d(d,{generateNewBoard:function(){return ae},getBoardAfterPlayerStep:function(){return ne},makeAiMove:function(){return ie}});r(6992),r(8674),r(9601),r(7727);var c=r(4448),u=r(4648),m=r(8637),v=(r(2222),{name:"enemy-loader",template:r(8773),computed:(0,u.Z)({},(0,m.Se)(["isEnemyMoveInProgress"]))}),p=r(2252),h={name:"heap-splitter",template:r(464),components:{EnemyLoader:v},data:function(){return{hoveredPiece:null}},computed:(0,u.Z)((0,u.Z)((0,u.Z)({},(0,m.rn)(["game","board","shouldPlayerMoveNext"])),(0,m.Se)(["ctaText","isEnemyMoveInProgress","isGameInProgress","isGameReadyToStart","isGameFinished"])),{},{stepDescription:function(){return this.isGameInProgress&&this.shouldPlayerMoveNext?"Kattints egy korongra, hogy azzal kettéosztd azt a kupacot. Amelyik korongra kattintasz, az és a tőle jobbra lévők kerülnek az új kupacba.":""}}),methods:(0,u.Z)((0,u.Z)({},(0,m.nv)(["playerMove","startGameAsPlayer","initializeGame"])),{},{clickPiece:function(e){var t=e.rowIndex,r=e.pieceIndex;this.shouldPlayerMoveNext&&0!==r&&(this.playerMove(this.game.strategy.getBoardAfterPlayerStep(this.board,{rowIndex:t,pieceIndex:r})),this.hoveredPiece=null)},shouldShowDividerToTheLeft:function(e){return(0,p.Z)(this.hoveredPiece,e)&&0!==e.pieceIndex},currentChoiceDescription:function(e){if(this.isGameFinished)return"";var t=this.board[e];return!this.isGameReadyToStart&&this.shouldPlayerMoveNext&&this.hoveredPiece?this.hoveredPiece.rowIndex!==e||0===this.hoveredPiece.pieceIndex?t:"".concat(t," --\x3e ").concat(this.hoveredPiece.pieceIndex,", ").concat(t-this.hoveredPiece.pieceIndex):t}}),created:function(){this.initializeGame()}},g=r(7956),f=function(e,t){return 2*(0,g.Z)(Math.ceil(e/2),Math.floor(t/2))},b=function(){return[(0,g.Z)(3,10),(0,g.Z)(3,10)]},y=function(e,t){var r=t.rowIndex,a=t.pieceIndex,n=[a,e[r]-a];return{board:n,isGameEnd:k(n)}},k=function(e){return 1===e[0]&&1===e[1]},x=function(e){var t=(0,g.Z)(0,1),r=e[t]%2===0||1===e[1-t]?t:1-t,a=z(e[r]);return{board:a,isGameEnd:k(a)}},z=function(e){if(2===e)return[1,1];var t=1+f(0,e-2);return[t,e-t]},P={name:"hunyadi-and-the-janissaries",template:r(2428),components:{EnemyLoader:v},computed:(0,u.Z)((0,u.Z)((0,u.Z)((0,u.Z)({},(0,m.rn)({isPlayerSultan:function(e){return e.isPlayerTheFirstToMove}})),(0,m.rn)(["game","board","shouldPlayerMoveNext"])),(0,m.Se)(["ctaText","isEnemyMoveInProgress","isGameInProgress","isGameReadyToStart"])),{},{stepDescription:function(){return this.isGameInProgress&&this.shouldPlayerMoveNext&&this.isPlayerSultan?"Kattints a katonákra és válaszd két részre a seregedet.":""}}),methods:(0,u.Z)((0,u.Z)((0,u.Z)({},(0,m.OI)(["setBoard"])),(0,m.nv)(["playerMove","startGameAsPlayer","initializeGame"])),{},{toggleGroup:function(e,t){if(this.shouldPlayerMoveNext&&this.isPlayerSultan){var r=this.board;r[e][t]="blue"===r[e][t]?"red":"blue",this.setBoard(r)}},finalizeSoldierGrouping:function(){this.playerMove({board:this.board,isGameEnd:!1})},killGroup:function(e){this.playerMove(this.game.strategy.getBoardAfterKillingGroup(this.board,e))}}),created:function(){this.initializeGame()}},w=r(9584),I=r(6347),j=(r(561),r(7327),r(1539),r(7961)),G=function(e,t){if(t){var r=_(e);return S(e,r)}return{board:M(e),isGameEnd:!1}},M=function(e){for(var t={blue:0,red:0},r=1===(0,g.Z)(0,1)?"red":"blue",a="blue"===r?"red":"blue",n=0;n<e.length;n++)for(var o=0;o<e[n].length;o++){var i=t[r]<t[a]?r:a;e[n][o]=i,t[i]+=Math.pow(.5,n)}return e},_=function(e){if(e[0].length>0)return e[0][0];for(var t={blue:0,red:0},r=0;r<e.length;r++){var a,n=(0,I.Z)(e[r]);try{for(n.s();!(a=n.n()).done;){var o=a.value;t[o]+=Math.pow(.5,r)}}catch(i){n.e(i)}finally{n.f()}}return t["blue"]>t["red"]?"blue":"red"},T=function(){for(var e=5,t=[],r=0;r<e-1;r++){var a=[];0===r&&a.push("blue"),1===(0,g.Z)(0,1)&&a.push("blue"),t.push(a)}t.push([]);for(var n=0;n<e-1;n++){var o,i=(0,I.Z)(t[n]);try{for(i.s();!(o=i.n()).done;){var s=o.value;1===(0,g.Z)(0,1)&&(t[n].splice(s,1),t[n+1].push("blue","blue"))}}catch(l){i.e(l)}finally{i.f()}}return t},S=function(e,t){for(var r=!1,a=void 0,n=0;n<e.length;n++){var o,i=e[n].filter((function(e){return e!==t}));if(i.length>0)if(0===n)r=!0,a=!0;else(o=e[n-1]).push.apply(o,(0,w.Z)(i));e[n]=[]}return 0!==(0,j.Z)(e).length||r||(r=!0,a=!1),{board:e,isGameEnd:r,hasFirstPlayerWon:a}},Z={name:"demonstration",template:r(5470),components:{EnemyLoader:v},computed:(0,u.Z)((0,u.Z)((0,u.Z)({},(0,m.rn)(["game","shouldPlayerMoveNext"])),(0,m.Se)(["ctaText","isEnemyMoveInProgress","isGameInProgress","isGameReadyToStart","isGameFinished"])),{},{stepDescription:function(){return this.isGameInProgress&&this.shouldPlayerMoveNext?'Kattints a "Lépek" gombra, hogy lépj.':""}}),methods:(0,u.Z)({},(0,m.nv)(["playerMove","startGameAsPlayer","initializeGame"])),created:function(){this.initializeGame()}},A=function(){return[]},R=function(e){return{board:e,isGameEnd:!0}},E={name:"two-times-two",template:r(4433),components:{EnemyLoader:v},computed:(0,u.Z)((0,u.Z)((0,u.Z)({},(0,m.rn)(["game","board","shouldPlayerMoveNext"])),(0,m.Se)(["ctaText","isEnemyMoveInProgress","isGameInProgress","isGameReadyToStart","isGameFinished"])),{},{stepDescription:function(){return this.isGameInProgress&&this.shouldPlayerMoveNext?"Kattints arra a mezőre, ahova korongot szeretnél lerakni.":""}}),methods:(0,u.Z)((0,u.Z)({},(0,m.nv)(["playerMove","startGameAsPlayer","initializeGame"])),{},{placePiece:function(e){this.shouldPlayerMoveNext&&this.playerMove(this.game.strategy.getBoardAfterPlacingOnTile(this.board,e))}}),created:function(){this.initializeGame()}},N=(r(2707),r(2138)),F=r(9012),D=function(){return[0,0,0,0]},B=function(e){var t=C(e);return O(e,t)},O=function(e,t){var r=(0,N.Z)(e);return r[t]=r[t]+1,{board:r,isGameEnd:(0,F.Z)(r)>=6,hasFirstPlayerWon:!(0,p.Z)((0,w.Z)(r).sort(),[0,1,2,3])}},C=function(e){var t=(0,F.Z)(e);if(t%2===0){if(0===t)return(0,g.Z)(0,3);if(2===t){for(var r=!1,a=0;a<4;a++)2===e[a]&&(r=!0);if(r){var n=0;while(2!==e[n])n++;return n}var o=(0,g.Z)(0,3);while(1===e[o])o=(0,g.Z)(0,3);return o}if(4===t){var i=(0,N.Z)(e);if(i.sort(),i[3]>=3){var s=0;while(e[s]<3)s++;return s}if(0===i[0]){var l=0;while(0!==e[l]&&l<4)l++;return l}return(0,g.Z)(0,3)}}else{if(1===t)return(0,g.Z)(0,3);if(3===t){for(var d=!1,c=0;c<4;c++)3===e[c]&&(d=!0);if(d){var u=(0,g.Z)(0,3);while(0!==e[u])u=(0,g.Z)(0,3);return u}var m=(0,g.Z)(0,3);while(1!==e[m])m=(0,g.Z)(0,3);return m}if(5===t){var v=(0,N.Z)(e);if(v.sort(),3===v[3]){if(2===v[2]){var p=(0,g.Z)(0,3);while(0!==e[p])p=(0,g.Z)(0,3);return p}var h=(0,g.Z)(0,3);while(1!==e[h])h=(0,g.Z)(0,3);return h}if(2===v[3]&&2===v[2]){var f=(0,g.Z)(0,3);while(2!==e[f])f=(0,g.Z)(0,3);return f}return(0,g.Z)(0,3)}}},H=function(e){return K(e,J(e))},L=function(){return{current:0,target:(0,g.Z)(20,100),restricted:null}},K=function(e,t){var r=e.current+t,a=r>=e.target;return{board:{current:r,target:e.target,restricted:13-t},isGameEnd:a,lastToMoveWins:!1}},W=function(e){var t=e;while(t===e)t=(0,g.Z)(1,12);return t},J=function(e){var t=e.current,r=e.target,a=e.restricted;return(r-t)%14===0||(r-t)%14===1||(r-t)%14-1===a?W(a):(r-t)%14-1},$={name:"superstitious-counting",template:r(975),components:{EnemyLoader:v},data:function(){return{step:1}},computed:(0,u.Z)((0,u.Z)((0,u.Z)((0,u.Z)({},(0,m.rn)({isPlayerSultan:function(e){return e.isPlayerTheFirstToMove}})),(0,m.rn)(["game","board","shouldPlayerMoveNext"])),(0,m.Se)(["ctaText","isEnemyMoveInProgress","isGameInProgress","isGameReadyToStart"])),{},{stepDescription:function(){return this.isGameInProgress&&this.shouldPlayerMoveNext?'Írj be egy számot, majd kattints a "Lépek" gombra.':""}}),methods:(0,u.Z)((0,u.Z)((0,u.Z)({},(0,m.OI)(["setBoard"])),(0,m.nv)(["playerMove","startGameAsPlayer","initializeGame"])),{},{attemptStep:function(){this.shouldPlayerMoveNext&&(this.step===this.board.restricted||this.step<=0||this.step>=13?alert("Ez a lépés nem megengedett"):this.playerMove(K(this.board,this.step)))}}),created:function(){this.initializeGame()}},V={name:"heap-splitter-4",template:r(3814),components:{EnemyLoader:v},data:function(){return{removedRowIndex:null,hoveredPiece:null}},computed:(0,u.Z)((0,u.Z)((0,u.Z)({},(0,m.rn)(["game","board","shouldPlayerMoveNext"])),(0,m.Se)(["ctaText","isEnemyMoveInProgress","isGameInProgress","isGameReadyToStart","isGameFinished"])),{},{stepDescription:function(){return this.isGameInProgress&&this.shouldPlayerMoveNext?"Először kattints az eltávolítandó kupacra, majd arra a korongra, ahol ketté akarod vágni a kupacot.":""}}),methods:(0,u.Z)((0,u.Z)({},(0,m.nv)(["playerMove","startGameAsPlayer","initializeGame"])),{},{rowColor:function(e){var t=e.rowIndex;return this.isGameInProgress?t===this.removedRowIndex?null===this.hoveredPiece?"red":this.hoveredPiece.rowIndex===t?"blue":"red":null===this.hoveredPiece?"blue":null===this.removedRowIndex&&this.hoveredPiece.rowIndex===t?"red":"blue":"blue"},pieceClickNotAllowed:function(e){var t=e.rowIndex,r=e.pieceIndex;return null!==this.removedRowIndex&&(this.removedRowIndex!==t&&0===r)},clickPiece:function(e){var t=e.rowIndex,r=e.pieceIndex;this.shouldPlayerMoveNext&&(this.removedRowIndex!==t?null!==this.removedRowIndex?0!==r&&(this.playerMove(this.game.strategy.getBoardAfterPlayerStep(this.board,{removedRowIndex:this.removedRowIndex,splitRowIndex:t,pieceIndex:r})),this.hoveredPiece=null,this.removedRowIndex=null):this.removedRowIndex=t:this.removedRowIndex=null)},shouldShowDividerToTheLeft:function(e){return null!==this.removedRowIndex&&(this.removedRowIndex!==e.rowIndex&&((0,p.Z)(this.hoveredPiece,e)&&0!==e.pieceIndex))},currentChoiceDescription:function(e){if(this.isGameFinished)return"";var t=this.board[e];return this.isGameReadyToStart||!this.shouldPlayerMoveNext?t:e===this.removedRowIndex?this.hoveredPiece&&this.hoveredPiece.rowIndex===e?"Eldobás visszavonása?":"".concat(t," --\x3e 🗑️"):this.hoveredPiece?null===this.removedRowIndex&&this.hoveredPiece.rowIndex===e?"".concat(t," --\x3e 🗑️"):this.hoveredPiece.rowIndex!==e||0===this.hoveredPiece.pieceIndex?t:"".concat(t," --\x3e ").concat(this.hoveredPiece.pieceIndex,", ").concat(t-this.hoveredPiece.pieceIndex):t}}),created:function(){this.initializeGame()}},X=(r(1249),r(7274)),q=function(){return[(0,g.Z)(4,18),(0,g.Z)(4,18),(0,g.Z)(4,18),(0,g.Z)(4,18)]},Q=function(e,t){var r=t.removedRowIndex,a=t.splitRowIndex,n=t.pieceIndex,o=(0,X.Z)([0,1,2,3],[r,a]),i=[e[o[0]],e[o[1]],n,e[a]-n];return{board:i,isGameEnd:U(i)}},U=function(e){return 1===e[0]&&1===e[1]&&1===e[2]&&1===e[3]},Y=function(e){var t=ee(e);return{board:t,isGameEnd:U(t)}},ee=function e(t){var r=(0,g.Z)(0,3),a=0;if(t[0]%2===1&&(a+=1),t[1]%2===1&&(a+=1),t[2]%2===1&&(a+=1),t[3]%2===1&&(a+=1),4===a){var n=r;while(1===t[n])n+=1,n%=4;return te(t,n,(n+1)%4)}if(3===a){var o=r;while(t[o]%2===1)o+=1,o%=4;return te(t,o,(o+1)%4)}if(2===a){var i=r;while(t[i]%2===1)i+=1,i%=4;var s=(i+1)%4;while(t[s]%2===1)s+=1,s%=4;return te(t,i,s)}if(1===a){var l=0;while(t[l]%2===0)l+=1,l%=4;if(1===t[l]&&2===t[(l+1)%4]&&2===t[(l+2)%4]&&2===t[(l+3)%4])return te(t,(l+1)%4,(l+2)%4);var d=t;return d[l]+=1,d=e(d),d[l]-=1,d}if(0===a)return 2===t[0]&&2===t[1]&&2===t[2]&&2===t[3]?te(t,r,(r+1)%4):e(t.map((function(e){return e/2}))).map((function(e){return 2*e}))},te=function(e,t,r){var a=e[t],n=e;if(2===a)return n[t]=1,n[r]=1,n;var o=1+2*Math.ceil(Math.random()*Math.floor((a-2)/2));return n[t]=o,n[r]=a-o,n},re={name:"heap-splitter-3",template:r(2944),components:{EnemyLoader:v},data:function(){return{removedRowIndex:null,hoveredPiece:null}},computed:(0,u.Z)((0,u.Z)((0,u.Z)({},(0,m.rn)(["game","board","shouldPlayerMoveNext"])),(0,m.Se)(["ctaText","isEnemyMoveInProgress","isGameInProgress","isGameReadyToStart","isGameFinished"])),{},{stepDescription:function(){return this.isGameInProgress&&this.shouldPlayerMoveNext?"Először kattints az eltávolítandó kupacra, majd arra a korongra, ahol ketté akarod vágni a kupacot.":""}}),methods:(0,u.Z)((0,u.Z)({},(0,m.nv)(["playerMove","startGameAsPlayer","initializeGame"])),{},{rowColor:function(e){var t=e.rowIndex;return this.isGameInProgress?t===this.removedRowIndex?null===this.hoveredPiece?"red":this.hoveredPiece.rowIndex===t?"blue":"red":null===this.hoveredPiece?"blue":null===this.removedRowIndex&&this.hoveredPiece.rowIndex===t?"red":"blue":"blue"},pieceClickNotAllowed:function(e){var t=e.rowIndex,r=e.pieceIndex;return null!==this.removedRowIndex&&(this.removedRowIndex!==t&&0===r)},clickPiece:function(e){var t=e.rowIndex,r=e.pieceIndex;this.shouldPlayerMoveNext&&(this.removedRowIndex!==t?null!==this.removedRowIndex?0!==r&&(this.playerMove(this.game.strategy.getBoardAfterPlayerStep(this.board,{removedRowIndex:this.removedRowIndex,splitRowIndex:t,pieceIndex:r})),this.hoveredPiece=null,this.removedRowIndex=null):this.removedRowIndex=t:this.removedRowIndex=null)},shouldShowDividerToTheLeft:function(e){return null!==this.removedRowIndex&&(this.removedRowIndex!==e.rowIndex&&((0,p.Z)(this.hoveredPiece,e)&&0!==e.pieceIndex))},currentChoiceDescription:function(e){if(this.isGameFinished)return"";var t=this.board[e];return this.isGameReadyToStart||!this.shouldPlayerMoveNext?t:e===this.removedRowIndex?this.hoveredPiece&&this.hoveredPiece.rowIndex===e?"Eldobás visszavonása?":"".concat(t," --\x3e 🗑️"):this.hoveredPiece?null===this.removedRowIndex&&this.hoveredPiece.rowIndex===e?"".concat(t," --\x3e 🗑️"):this.hoveredPiece.rowIndex!==e||0===this.hoveredPiece.pieceIndex?t:"".concat(t," --\x3e ").concat(this.hoveredPiece.pieceIndex,", ").concat(t-this.hoveredPiece.pieceIndex):t}}),created:function(){this.initializeGame()}},ae=function(){var e=(0,g.Z)(4,20),t=(0,g.Z)(Math.max(4,17-e),Math.min(20,33-e));return[e,t,37-e-t]},ne=function(e,t){var r=t.removedRowIndex,a=t.splitRowIndex,n=t.pieceIndex,o=(0,X.Z)([0,1,2],[r,a]),i=[e[o[0]],n,e[a]-n];return{board:i,isGameEnd:oe(i)}},oe=function(e){return 1===e[0]&&1===e[1]&&1===e[2]},ie=function(e){var t=se(e);return{board:t,isGameEnd:oe(t)}},se=function e(t){var r=(0,g.Z)(0,2);return t[0]%2===1||t[1]%2===1||t[2]%2===1?t[r]%2===0?t[(r+1)%3]%2===0?le(t,r,(r+1)%3):le(t,r,(r+2)%3):t[(r+1)%3]%2===0?le(t,(r+1)%3,(r+2)%3):t[(r+2)%3]%2===0?le(t,(r+2)%3,(r+1)%3):1!==t[r]?le(t,r,(r+1)%3):1!==t[(r+1)%3]?le(t,(r+1)%3,(r+2)%3):le(t,(r+2)%3,r):2===t[0]&&2===t[1]&&2===t[2]?le(t,r,(r+1)%3):e(t.map((function(e){return e/2}))).map((function(e){return 2*e}))},le=function(e,t,r){var a=e[t],n=e;if(2===a)return n[t]=1,n[r]=1,n;var o=1+2*Math.ceil(Math.random()*Math.floor((a-2)/2));return n[t]=o,n[r]=a-o,n},de={HeapSplitter:h,HunyadiAndTheJanissaries:P,Demonstration:Z,TwoTimesTwo:E,SuperstitiousCounting:$,HeapSplitter4:V,HeapSplitter3:re},ce={HunyadiAndTheJanissaries:{year:6,round:"döntő",category:"D",component:"HunyadiAndTheJanissaries",name:"Hunyadi és a janicsárok",strategy:n},HeapSplitter:{year:8,round:"döntő",category:"A",component:"HeapSplitter",name:"Kupac kettéosztó",strategy:a},HeapSplitter3:{year:8,round:"döntő",category:"B",name:"Kupac kettéosztó 3 kupaccal",component:"HeapSplitter3",strategy:d},Demonstration:{name:"Demonstráló játék",component:"Demonstration",strategy:o,isHiddenFromOverview:!0},TwoTimesTwo:{year:13,round:"döntő",category:"A",name:"2x2-es játék",component:"TwoTimesTwo",strategy:i},SuperstitiousCounting:{year:13,round:"döntő",category:"E",name:"Babonás számoló",component:"SuperstitiousCounting",strategy:s},HeapSplitter4:{year:13,round:"döntő",category:"E+",name:"Kupac kettéosztó 4 kupaccal",component:"HeapSplitter4",strategy:l}},ue={name:"page-not-found",template:r(8953)},me={name:"game",template:r(2448),components:(0,u.Z)((0,u.Z)({},de),{},{PageNotFound:ue}),props:{gameId:String},computed:(0,u.Z)({},(0,m.rn)(["game"])),methods:(0,u.Z)((0,u.Z)({},(0,m.OI)(["setGame","setGameStatus"])),{},{goBackToOverview:function(){this.setGame(null),this.setGameStatus(null),this.$router.push("/")},setGameBasedOnRoute:function(){this.setGame(ce[this.gameId]||null)}}),mounted:function(){this.setGameBasedOnRoute()},watch:{gameId:function(){this.setGameBasedOnRoute()}}},ve=(r(2479),{name:"overview",template:r(411),data:function(){return{gamesToShow:Object.values(ce).filter((function(e){return!e.isHiddenFromOverview}))}},methods:{goToGamePage:function(e){this.$router.push("/game/".concat(e))}}}),pe={name:"app",template:r(6203),components:{Game:me,Overview:ve},created:function(){document.title="Dürer játékok"}},he=r(8534),ge=(r(5666),function(){return(0,m.MT)({state:{game:null,board:null,gameStatus:null,isPlayerTheFirstToMove:null,shouldPlayerMoveNext:null,isPlayerWinner:null,enemyMoveTimeoutHandle:null,isEnemyMoveInProgress:null},getters:{isGameInProgress:function(e){return"inProgress"===e.gameStatus},isGameReadyToStart:function(e){return"readyToStart"===e.gameStatus},isGameFinished:function(e){return"finished"===e.gameStatus},isEnemyMoveInProgress:function(e){return e.isEnemyMoveInProgress&&null!==e.enemyMoveTimeoutHandle},ctaText:function(e,t){return t.isGameInProgress?e.shouldPlayerMoveNext?"Te jössz.":"Mi jövünk.":t.isGameFinished?e.isPlayerWinner?"Nyertél. Gratulálunk! :)":"Sajnos, most nem nyertél, de ne add fel.":"A gombra kattintva tudod elindítani a játékot."}},mutations:{setGame:function(e,t){e.game=t},setGameStatus:function(e,t){e.gameStatus=t},startGameAsPlayer:function(e,t){var r=t.isFirst;e.isPlayerTheFirstToMove=r,e.shouldPlayerMoveNext=r,e.gameStatus="inProgress"},setBoard:function(e,t){e.board=t}},actions:{startGameAsPlayer:function(e,t){var r=e.commit,a=e.dispatch,n=t.isFirst,o=void 0===n||n;r("startGameAsPlayer",{isFirst:o}),o||a("aiMove")},applyMove:function(e,t){var r=e.state,a=e.commit,n=t.board,o=t.isGameEnd,i=t.hasFirstPlayerWon,s=t.lastToMoveWins,l=void 0===s||s;a("setBoard",n),r.shouldPlayerMoveNext=!r.shouldPlayerMoveNext,o&&(clearTimeout(r.enemyMoveTimeoutHandle),r.gameStatus="finished",r.isPlayerWinner=void 0===i?l?!r.shouldPlayerMoveNext:r.shouldPlayerMoveNext:r.isPlayerTheFirstToMove===i)},initializeGame:function(e){var t=e.state,r=e.commit;clearTimeout(t.enemyMoveTimeoutHandle),t.isEnemyMoveInProgress=!1,t.shouldPlayerMoveNext=null,t.isPlayerWinner=null,t.isPlayerTheFirstToMove=null,t.board=t.game.strategy.generateNewBoard(),r("setGameStatus","readyToStart")},aiMove:function(){var e=(0,he.Z)(regeneratorRuntime.mark((function e(t){var r,a,n;return regeneratorRuntime.wrap((function(e){while(1)switch(e.prev=e.next){case 0:r=t.state,a=t.dispatch,r.isEnemyMoveInProgress=!0,n=Math.floor(750*Math.random()+750),r.enemyMoveTimeoutHandle=setTimeout((function(){a("applyMove",r.game.strategy.makeAiMove(r.board,r.isPlayerTheFirstToMove)),r.isEnemyMoveInProgress=!1}),n);case 4:case"end":return e.stop()}}),e)})));function t(t){return e.apply(this,arguments)}return t}(),playerMove:function(e,t){var r=e.dispatch,a=t.board,n=t.isGameEnd,o=t.hasFirstPlayerWon,i=t.lastToMoveWins;r("applyMove",{board:a,isGameEnd:n,hasFirstPlayerWon:o,lastToMoveWins:i}),n||r("aiMove")}}})}),fe=r(2119),be=[{path:"/",component:ve},{path:"/game/:gameId/",component:me,props:!0},{path:"/:path(.*)*",component:ue}],ye=function(){return(0,fe.p7)({history:(0,fe.r5)(),routes:be})},ke=(0,c.ri)(pe);ke.use(ge()),ke.use(ye()),ke.mount("#app")},9259:function(e,t,r){"use strict";e.exports=r.p+"img/hunyadi-and-the-janissaries-castle.jpg"}},t={};function r(a){var n=t[a];if(void 0!==n)return n.exports;var o=t[a]={exports:{}};return e[a](o,o.exports,r),o.exports}r.m=e,function(){var e=[];r.O=function(t,a,n,o){if(!a){var i=1/0;for(c=0;c<e.length;c++){a=e[c][0],n=e[c][1],o=e[c][2];for(var s=!0,l=0;l<a.length;l++)(!1&o||i>=o)&&Object.keys(r.O).every((function(e){return r.O[e](a[l])}))?a.splice(l--,1):(s=!1,o<i&&(i=o));if(s){e.splice(c--,1);var d=n();void 0!==d&&(t=d)}}return t}o=o||0;for(var c=e.length;c>0&&e[c-1][2]>o;c--)e[c]=e[c-1];e[c]=[a,n,o]}}(),function(){r.d=function(e,t){for(var a in t)r.o(t,a)&&!r.o(e,a)&&Object.defineProperty(e,a,{enumerable:!0,get:t[a]})}}(),function(){r.g=function(){if("object"===typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(e){if("object"===typeof window)return window}}()}(),function(){r.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)}}(),function(){r.r=function(e){"undefined"!==typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})}}(),function(){r.p="/durer-jatekok/"}(),function(){var e={143:0};r.O.j=function(t){return 0===e[t]};var t=function(t,a){var n,o,i=a[0],s=a[1],l=a[2],d=0;if(i.some((function(t){return 0!==e[t]}))){for(n in s)r.o(s,n)&&(r.m[n]=s[n]);if(l)var c=l(r)}for(t&&t(a);d<i.length;d++)o=i[d],r.o(e,o)&&e[o]&&e[o][0](),e[o]=0;return r.O(c)},a=self["webpackChunkdurer_jatekok"]=self["webpackChunkdurer_jatekok"]||[];a.forEach(t.bind(null,0)),a.push=t.bind(null,a.push.bind(a))}();var a=r.O(void 0,[998],(function(){return r(6330)}));a=r.O(a)})();
//# sourceMappingURL=app-legacy.js.map