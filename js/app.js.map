{"version":3,"file":"js/app.js","mappings":"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","sources":["webpack://durer-jatekok/./src/components/app/app.html","webpack://durer-jatekok/./src/components/common/enemy-loader/enemy-loader.html","webpack://durer-jatekok/./src/components/common/game-sidebar/game-sidebar.html","webpack://durer-jatekok/./src/components/games/chess-bishops/chess-bishop-svg/chess-bishop-svg.html","webpack://durer-jatekok/./src/components/games/chess-bishops/chess-bishops.html","webpack://durer-jatekok/./src/components/games/chess-rook/chess-rook-svg/chess-rook-svg.html","webpack://durer-jatekok/./src/components/games/chess-rook/chess-rook.html","webpack://durer-jatekok/./src/components/games/coin123/coin123.html","webpack://durer-jatekok/./src/components/games/coin357/coin357.html","webpack://durer-jatekok/./src/components/games/cube-coloring/cube-coloring.html","webpack://durer-jatekok/./src/components/games/demonstration/demonstration.html","webpack://durer-jatekok/./src/components/games/five-squares/five-squares.html","webpack://durer-jatekok/./src/components/games/hunyadi-and-the-janissaries/hunyadi-and-the-janissaries.html","webpack://durer-jatekok/./src/components/games/hunyadi-and-the-janissaries/soldier-svg/soldier-svg.html","webpack://durer-jatekok/./src/components/games/pile-splitting-games/pile-splitter-3/pile-splitter-3.html","webpack://durer-jatekok/./src/components/games/pile-splitting-games/pile-splitter-4/pile-splitter-4.html","webpack://durer-jatekok/./src/components/games/pile-splitting-games/pile-splitter/pile-splitter.html","webpack://durer-jatekok/./src/components/games/superstitious-counting/superstitious-counting.html","webpack://durer-jatekok/./src/components/games/tictactoe-alikes/anti-tictactoe/anti-tictactoe.html","webpack://durer-jatekok/./src/components/games/tictactoe-alikes/tictactoe-doublestart/tictactoe-doublestart.html","webpack://durer-jatekok/./src/components/games/tictactoe-alikes/tictactoe/tictactoe.html","webpack://durer-jatekok/./src/components/games/two-times-two/two-times-two.html","webpack://durer-jatekok/./src/components/overview/overview.html","webpack://durer-jatekok/./src/components/page-not-found/page-not-found.html","webpack://durer-jatekok/./src/components/strategy-game/strategy-game.html","webpack://durer-jatekok/./src/components/common/enemy-loader/enemy-loader.js","webpack://durer-jatekok/./src/components/common/game-sidebar/game-sidebar.js","webpack://durer-jatekok/./src/components/games/demonstration/demonstration.js","webpack://durer-jatekok/./src/components/games/demonstration/strategy/strategy.js","webpack://durer-jatekok/./src/components/games/hunyadi-and-the-janissaries/soldier-svg/soldier-svg.js","webpack://durer-jatekok/./src/components/games/hunyadi-and-the-janissaries/strategy/strategy.js","webpack://durer-jatekok/./src/components/games/hunyadi-and-the-janissaries/hunyadi-and-the-janissaries.js","webpack://durer-jatekok/./src/components/games/two-times-two/strategy/strategy.js","webpack://durer-jatekok/./src/components/games/two-times-two/two-times-two.js","webpack://durer-jatekok/./src/components/games/five-squares/strategy/strategy.js","webpack://durer-jatekok/./src/components/games/five-squares/five-squares.js","webpack://durer-jatekok/./src/components/games/superstitious-counting/strategy/strategy.js","webpack://durer-jatekok/./src/components/games/superstitious-counting/superstitious-counting.js","webpack://durer-jatekok/./src/lib/generate-random.js","webpack://durer-jatekok/./src/components/games/pile-splitting-games/pile-splitter/strategy/strategy.js","webpack://durer-jatekok/./src/components/games/pile-splitting-games/pile-splitter/pile-splitter.js","webpack://durer-jatekok/./src/components/games/pile-splitting-games/pile-splitter-3/strategy/strategy.js","webpack://durer-jatekok/./src/components/games/pile-splitting-games/pile-splitter-3/pile-splitter-3.js","webpack://durer-jatekok/./src/components/games/pile-splitting-games/pile-splitter-4/strategy/strategy.js","webpack://durer-jatekok/./src/components/games/pile-splitting-games/pile-splitter-4/pile-splitter-4.js","webpack://durer-jatekok/./src/components/games/cube-coloring/strategy/strategy.js","webpack://durer-jatekok/./src/components/games/cube-coloring/cube-coloring.js","webpack://durer-jatekok/./src/components/games/coin123/strategy/strategy.js","webpack://durer-jatekok/./src/components/games/coin123/coin123.js","webpack://durer-jatekok/./src/components/games/coin357/strategy/strategy.js","webpack://durer-jatekok/./src/components/games/coin357/coin357.js","webpack://durer-jatekok/./src/components/games/tictactoe-alikes/helpers.js","webpack://durer-jatekok/./src/components/games/tictactoe-alikes/tictactoe/strategy/strategy.js","webpack://durer-jatekok/./src/components/games/tictactoe-alikes/tictactoe/tictactoe.js","webpack://durer-jatekok/./src/components/games/tictactoe-alikes/tictactoe-doublestart/strategy/strategy.js","webpack://durer-jatekok/./src/components/games/tictactoe-alikes/tictactoe-doublestart/tictactoe-doublestart.js","webpack://durer-jatekok/./src/components/games/tictactoe-alikes/anti-tictactoe/strategy/strategy.js","webpack://durer-jatekok/./src/components/games/tictactoe-alikes/anti-tictactoe/anti-tictactoe.js","webpack://durer-jatekok/./src/components/games/chess-rook/chess-rook-svg/chess-rook-svg.js","webpack://durer-jatekok/./src/components/games/chess-rook/strategy/strategy.js","webpack://durer-jatekok/./src/components/games/chess-rook/chess-rook.js","webpack://durer-jatekok/./src/components/games/chess-bishops/chess-bishop-svg/chess-bishop-svg.js","webpack://durer-jatekok/./src/components/games/chess-bishops/strategy/strategy.js","webpack://durer-jatekok/./src/components/games/chess-bishops/chess-bishops.js","webpack://durer-jatekok/./src/components/games/games.js","webpack://durer-jatekok/./src/components/page-not-found/page-not-found.js","webpack://durer-jatekok/./src/components/strategy-game/strategy-game.js","webpack://durer-jatekok/./src/components/overview/overview.js","webpack://durer-jatekok/./src/components/app/app.js","webpack://durer-jatekok/./src/store/store.js","webpack://durer-jatekok/./src/router.js","webpack://durer-jatekok/./src/main.js","webpack://durer-jatekok/webpack/bootstrap","webpack://durer-jatekok/webpack/runtime/chunk loaded","webpack://durer-jatekok/webpack/runtime/define property getters","webpack://durer-jatekok/webpack/runtime/global","webpack://durer-jatekok/webpack/runtime/hasOwnProperty shorthand","webpack://durer-jatekok/webpack/runtime/make namespace object","webpack://durer-jatekok/webpack/runtime/publicPath","webpack://durer-jatekok/webpack/runtime/jsonp chunk loading","webpack://durer-jatekok/webpack/startup"],"sourcesContent":["// Module\nvar code = \"<div class=\\\"p-4\\\"> <router-view></router-view> </div> \";\n// Exports\nmodule.exports = code;","// Module\nvar code = \"<div v-show=\\\"isEnemyMoveInProgress\\\" class=\\\"animate-spin h-8 w-8 place-self-center border-t-blue-600 rounded-full border-4\\\"></div> \";\n// Exports\nmodule.exports = code;","// Module\nvar code = \"<div class=\\\"p-2 flex flex-col grow shrink-0 basis-64\\\"> <p class=\\\"text-center font-bold text-lg\\\">{{ ctaText }}</p> <enemy-loader/> <p v-if=\\\"shouldPlayerMoveNext\\\" class=\\\"italic text-justify\\\">{{ stepDescription }}</p> <button v-if=\\\"isGameReadyToStart\\\" class=\\\"cta-button js-first-player\\\" @click=\\\"startGameWithRoleSelection({ isFirst: true })\\\"> Kezdő leszek </button> <button v-if=\\\"isGameReadyToStart\\\" class=\\\"cta-button js-second-player\\\" @click=\\\"startGameWithRoleSelection({ isFirst: false })\\\"> Második leszek </button> <div class=\\\"flex flex-grow items-end\\\"> <button class=\\\"cta-button mt-4 js-restart-game\\\" @click=\\\"restartGame()\\\"> Új játék </button> </div> </div> \";\n// Exports\nmodule.exports = code;","// Module\nvar code = \"<svg style=\\\"display:none\\\"> <symbol id=\\\"game-chess-bishop\\\" viewBox=\\\"-96 0 512 512\\\"> <path d=\\\"M8 287.88c0 51.64 22.14 73.83 56 84.6V416h192v-43.52c33.86-10.77 56-33 56-84.6 0-30.61-10.73-67.1-26.69-102.56L185 285.65a8 8 0 0 1-11.31 0l-11.31-11.31a8 8 0 0 1 0-11.31L270.27 155.1c-20.8-37.91-46.47-72.1-70.87-92.59C213.4 59.09 224 47.05 224 32a32 32 0 0 0-32-32h-64a32 32 0 0 0-32 32c0 15 10.6 27.09 24.6 30.51C67.81 106.8 8 214.5 8 287.88zM304 448H16a16 16 0 0 0-16 16v32a16 16 0 0 0 16 16h288a16 16 0 0 0 16-16v-32a16 16 0 0 0-16-16z\\\"/> </symbol> </svg> \";\n// Exports\nmodule.exports = code;","// Module\nvar code = \"<div class=\\\"flex justify-center\\\"> <chess-bishop-svg></chess-bishop-svg> <div class=\\\"max-w-[100ch]\\\"> <div class=\\\"flex justify-center mb-4 mt-1\\\"> <p class=\\\"text-justify\\\"> Két játékos felváltva tesz le (a kezdetben üres) sakktáblára futókat. Egy új futót mindig csak olyan mezőre tehetünk, amin még nem áll futó, és azt a mezőt nem is támadja futó. Az veszít, aki nem tud lerakni futót. (Futó támad egy mezőt: ha a sakk szabályai szerint a futóval arra a mezőre tudnánk lépni, azaz a futóhoz képest átlósan helyezkedik el.) Te döntheted el, hogy kezdeni szeretnél-e, vagy második játékos lenni. Sok sikert! :) </p> </div> <div class=\\\"flex flex-wrap\\\"> <div class=\\\"p-2 shrink-0 grow basis-2/3\\\"> <table class=\\\"m-2 w-full border-collapse table-fixed\\\"> <tr v-for=\\\"row in [0, 1, 2, 3, 4, 5, 6, 7]\\\" :key=\\\"row\\\"> <td v-for=\\\"col in [0, 1, 2, 3, 4, 5, 6, 7]\\\" :key=\\\"col\\\" @click=\\\"clickField({ row, col })\\\" class=\\\"border-4\\\" :class=\\\"{ 'bg-slate-400': isForbidden({ row, col }), 'bg-slate-200': wouldBeForbidden({ row, col }), 'cursor-not-allowed': isForbidden({ row, col }) }\\\" @mouseover=\\\"hoveredField = { row, col }\\\" @mouseout=\\\"hoveredField = null\\\"> <div class=\\\"aspect-square p-[5%]\\\"> <span v-show=\\\"isBishop({ row, col })\\\"> <svg class=\\\"inline-block w-full aspect-square\\\"> <use xlink:href=\\\"#game-chess-bishop\\\"/> </svg> </span> <span v-show=\\\"isPotentialNextStep({ row, col })\\\"> <svg class=\\\"inline-block w-full aspect-square opacity-50\\\"> <use xlink:href=\\\"#game-chess-bishop\\\"/> </svg> </span> </div> </td> </tr> </table> </div> <game-sidebar step-description=\\\"Kattints egy mezőre, amit nem üt egyik futó sem.\\\"/> </div> </div> </div> \";\n// Exports\nmodule.exports = code;","// Module\nvar code = \"<svg style=\\\"display:none\\\"> <symbol id=\\\"game-chess-rook\\\" viewBox=\\\"0 0 504 504\\\"> <g id=\\\"layer1\\\" transform=\\\"translate(-523.71 -225.65)\\\"> <path id=\\\"path2406\\\" style=\\\"fill:#000000\\\" d=\\\"m90 422.5v-18.5h12.5 12.5v-21.35-21.36l21-22.36 21-22.36v-74.56-74.56l-24.44-18.47-24.45-18.48-0.05-33.75-0.06-33.75h28.5 28.5v15 15h26 26v-15-15h35 35v15 15h26 26v-15-15h28.5 28.5l-0.05 33.75-0.05 33.75-24.45 18.5-24.45 18.5v74.7 74.69l20.97 22.31 20.97 22.3 0.03 21.25 0.03 21.25h12.5 12.5v18.5 18.5h-162-162v-18.5z\\\" transform=\\\"translate(523.71 225.65)\\\"/> <path id=\\\"path2392\\\" style=\\\"fill:#ffffff\\\" d=\\\"m387.55 134.55c1.35-1.35 2.45-3.62 2.45-5.05 0-1.42-1.1-3.7-2.45-5.05l-2.46-2.45h-133.09-133.09l-2.46 2.45c-1.35 1.35-2.45 3.63-2.45 5.05s1.1 3.7 2.45 5.05l2.46 2.45h133.09 133.09l2.46-2.45z\\\" transform=\\\"translate(523.71 225.65)\\\"/> <path id=\\\"path2390\\\" style=\\\"fill:#ffffff\\\" d=\\\"m337.55 172.55c1.35-1.35 2.45-3.62 2.45-5.05 0-1.42-1.1-3.7-2.45-5.05l-2.46-2.45h-83.09-83.09l-2.46 2.45c-1.35 1.35-2.45 3.63-2.45 5.05s1.1 3.7 2.45 5.05l2.46 2.45h83.09 83.09l2.46-2.45z\\\" transform=\\\"translate(523.71 225.65)\\\"/> <path id=\\\"path2388\\\" style=\\\"fill:#ffffff\\\" d=\\\"m337.55 321.55c1.35-1.35 2.45-3.62 2.45-5.05 0-1.42-1.1-3.7-2.45-5.05l-2.46-2.45h-83.09-83.09l-2.46 2.45c-1.35 1.35-2.45 3.63-2.45 5.05 0 1.43 1.1 3.7 2.45 5.05l2.46 2.45h83.09 83.09l2.46-2.45z\\\" transform=\\\"translate(523.71 225.65)\\\"/> <path id=\\\"path2386\\\" style=\\\"fill:#ffffff\\\" d=\\\"m379.09 367.72c4.34-3.34 4.6-8.07 0.64-11.75-2.07-1.94-4.21-1.97-127.73-1.97s-125.66 0.03-127.73 1.97c-3.96 3.68-3.7 8.41 0.64 11.75 2.31 1.77 251.87 1.77 254.18 0z\\\" transform=\\\"translate(523.71 225.65)\\\"/> <path id=\\\"path2384\\\" style=\\\"fill:#ffffff\\\" d=\\\"m379.09 409.72c4.34-3.34 4.6-8.07 0.64-11.75-2.07-1.94-4.21-1.97-127.73-1.97s-125.66 0.03-127.73 1.97c-3.96 3.68-3.7 8.41 0.64 11.75 2.31 1.77 251.87 1.77 254.18 0z\\\" transform=\\\"translate(523.71 225.65)\\\"/> </g> </symbol> </svg>\";\n// Exports\nmodule.exports = code;","// Module\nvar code = \"<div class=\\\"flex justify-center\\\"> <chess-rook-svg></chess-rook-svg> <div class=\\\"max-w-[100ch]\\\"> <div class=\\\"flex justify-center mb-4 mt-1\\\"> <p class=\\\"text-justify\\\"> A játékosok felváltva lépnek egy bástyával, amely a sakktábla bal felső sarkából indul. A bástya vízszintesen vagy függőlegesen bármennyit (legalább egyet) léphet, de egyszerre csak az egyik irányba. Azokat a mezőket amikre a bástya lép, illetve a lépés közben áthalad, megjelöljük, ezekre a mezőkre már nem léphetünk (át sem haladhatunk felettük). Az a játékos veszít, aki nem tud lépni. Te döntheted el, hogy kezdeni szeretnél-e, vagy második játékos lenni. Sok sikert! :) </p> </div> <div class=\\\"flex flex-wrap\\\"> <div class=\\\"p-2 shrink-0 grow basis-2/3\\\"> <table class=\\\"m-2 border-collapse w-full table-fixed\\\"> <tr v-for=\\\"row in [0, 1, 2, 3, 4, 5, 6, 7]\\\" :key=\\\"row\\\"> <td v-for=\\\"col in [0, 1, 2, 3, 4, 5, 6, 7]\\\" :key=\\\"col\\\" @click=\\\"clickField({ row, col })\\\" class=\\\"border-4\\\" :class=\\\"{ 'bg-slate-300': board.chessBoard[row][col] === 'visited' }\\\"> <div class=\\\"aspect-square p-[5%] text-center\\\"> <span v-if=\\\"isAllowedMove({ row, col })\\\"> <svg class=\\\"w-full aspect-square opacity-25 inline-block\\\"> <use xlink:href=\\\"#game-chess-rook\\\"/> </svg> </span> <span v-if=\\\"board.chessBoard[row][col] === 'rook'\\\"> <svg class=\\\"w-full aspect-square inline-block\\\"> <use xlink:href=\\\"#game-chess-rook\\\"/> </svg> </span> </div> </td> </tr> </table> </div> <game-sidebar step-description=\\\"Kattints egy szabad mezőre a bástyával egy sorban vagy oszlopban, ahova a bástyával mozogni szeretnél.\\\"/> </div> </div> </div> \";\n// Exports\nmodule.exports = code;","// Module\nvar code = \"<div class=\\\"flex justify-center\\\"> <div class=\\\"max-w-[100ch]\\\"> <div class=\\\"flex justify-center mb-4 mt-1\\\"> <p class=\\\"text-justify\\\"> Van egy kupacban néhány érme, mindegyik 1, 2 vagy 3 pengős. Egy lépésben az éppen soron lévő játékos elvesz egy érmét a kupacból, és helyette berakhat egy darab kisebb értékű érmét, vagy dönthet úgy, hogy nem tesz be semmit. Az nyer, aki elveszi az utolsó érmét a kupacból. Az új játék gombra kattintva generálhatsz egy új kezdőállást. A kezdőállás ismeretében te döntheted el, hogy kezdeni szeretnél-e, vagy második játékos lenni. Sok sikert! :) </p> </div> <div class=\\\"flex flex-wrap\\\"> <div class=\\\"p-2 shrink-0 grow basis-2/3\\\"> <table class=\\\"m-2 border-collapse table-fixed w-full\\\"> <tr> <th>1-es</th> <th>2-es</th> <th>3-as</th> </tr> <tr> <td v-for=\\\"coinValue in [0, 1, 2]\\\" :key=\\\"coinValue\\\" @click=\\\"clickPile(coinValue)\\\" class=\\\"text-center border-4\\\" :class=\\\"{ 'bg-gray-300': isCoinActionInvalid(coinValue), 'cursor-not-allowed': isCoinActionInvalid(coinValue) }\\\" @mouseover=\\\"hoveredPile=coinValue\\\" @mouseout=\\\"hoveredPile=null\\\"> <div class=\\\"min-h-[25vh] p-[5%]\\\"> <span v-for=\\\"i in board[coinValue]\\\" :key=\\\"i\\\" class=\\\"w-[30%] aspect-square inline-block rounded-full mr-0.5\\\" :class=\\\"{ [getCoinColor(coinValue)]: true, 'opacity-50': shouldShowCoinToBeRemoved(coinValue) && i === 1 }\\\"></span> <span v-show=\\\"shouldShowCoinToBeAdded(coinValue)\\\" class=\\\"w-[30%] aspect-square inline-block rounded-full mr-0.5 opacity-50\\\" :class=\\\"getCoinColor(coinValue)\\\"></span> </div> </td> </tr> </table> <button v-if=\\\"valueOfRemovedCoin\\\" class=\\\"cta-button\\\" @click=\\\"endTurn()\\\"> Semmit se rakok be </button> </div> <game-sidebar :step-description=\\\"stepDescription\\\" @restart=\\\"resetTurnState()\\\"/> </div> </div> </div> \";\n// Exports\nmodule.exports = code;","// Module\nvar code = \"<div class=\\\"flex justify-center\\\"> <div class=\\\"max-w-[100ch]\\\"> <div class=\\\"flex justify-center mb-4 mt-1\\\"> <p class=\\\"text-justify\\\"> Egy kupacban 3 darab 1, 5 darab 2 és 7 darab 3 pengős érme van. Egy lépésben az éppen soron lévő játékos elvesz egy érmét a kupacból, és helyette berakhat egy darab kisebb értékű érmét, vagy dönthet úgy, hogy nem tesz be semmit. Az nyer, aki elveszi az utolsó érmét a kupacból. Te döntheted el, hogy kezdeni szeretnél-e, vagy második játékos lenni. Sok sikert! :) </p> </div> <div class=\\\"flex flex-wrap\\\"> <div class=\\\"p-2 shrink-0 grow basis-8/12\\\"> <table class=\\\"m-2 border-collapse table-fixed w-full\\\"> <tr> <th>1-es</th> <th>2-es</th> <th>3-as</th> </tr> <tr> <td v-for=\\\"coinValue in [0, 1, 2]\\\" :key=\\\"coinValue\\\" @click=\\\"clickPile(coinValue)\\\" class=\\\"text-center border-4\\\" :class=\\\"{ 'bg-gray-300': isCoinActionInvalid(coinValue), 'cursor-not-allowed': isCoinActionInvalid(coinValue) }\\\" @mouseover=\\\"hoveredPile=coinValue\\\" @mouseout=\\\"hoveredPile=null\\\"> <div class=\\\"min-h-[25vh] p-[5%]\\\"> <span v-for=\\\"i in board[coinValue]\\\" :key=\\\"i\\\" class=\\\"w-[30%] aspect-square inline-block rounded-full mr-0.5\\\" :class=\\\"{ [getCoinColor(coinValue)]: true, 'opacity-50': shouldShowCoinToBeRemoved(coinValue) && i === 1 }\\\"></span> <span v-show=\\\"shouldShowCoinToBeAdded(coinValue)\\\" class=\\\"w-[30%] aspect-square inline-block rounded-full mr-0.5 opacity-50\\\" :class=\\\"getCoinColor(coinValue)\\\"></span> </div> </td> </tr> </table> <button v-if=\\\"valueOfRemovedCoin\\\" class=\\\"cta-button\\\" @click=\\\"endTurn()\\\"> Semmit se rakok be </button> </div> <game-sidebar :step-description=\\\"stepDescription\\\" @restart=\\\"resetTurnState()\\\"/> </div> </div> </div> \";\n// Exports\nmodule.exports = code;","// Module\nvar code = \"<div class=\\\"flex justify-center\\\"> <div class=\\\"max-w-[100ch]\\\"> <div class=\\\"flex justify-center mb-4 mt-1\\\"> <p class=\\\"text-justify\\\"> Adott egy téglatest rácsa, aminek be van húzva az egyik testátlója. Egy lépésben az éppen soron lévő játékos megszínezi valamelyik még színezetlen csúcsot három szín valamelyikével (azaz piros, sárga vagy kék korongot tesz rá) úgy, hogy ne keletkezzen két szomszédos csúcs, amik azonos színűek. Ha valamelyik játékos nem tud lépni, akkor véget ér a játék. A kezdő játékos nyer, ha minden csúcs meg lett színezve, míg a második akkor nyer, ha van olyan csúcs ami nem lett kiszínezve. Te döntheted el, hogy kezdeni szeretnél-e, vagy második játékos lenni. Sok sikert! :) </p> </div> <div class=\\\"flex flex-wrap\\\" id=\\\"cube-coloring\\\"> <div class=\\\"p-2 shrink-0 grow basis-2/3\\\"> <button class=\\\"w-[30%] mx-[1%] rounded h-8 mb-1 bg-red-600\\\" @click=\\\"pick('red')\\\">Piros</button> <button class=\\\"w-[30%] mx-[1%] rounded h-8 mb-1 bg-green-600\\\" @click=\\\"pick('green')\\\">Zöld</button> <button class=\\\"w-[30%] mx-[1%] rounded h-8 mb-1 bg-blue-600\\\" @click=\\\"pick('blue')\\\">Kék</button> <svg @mousemove=\\\"drawPickedColor\\\" class=\\\"aspect-square stroke-black stroke-[3]\\\"> <rect x=\\\"8%\\\" y=\\\"25%\\\" width=\\\"66%\\\" height=\\\"66%\\\" class=\\\"fill-transparent\\\"/> <rect x=\\\"25%\\\" y=\\\"8%\\\" width=\\\"66%\\\" height=\\\"66%\\\" class=\\\"fill-transparent\\\"/> <line x1=\\\"8%\\\" y1=\\\"25%\\\" x2=\\\"25%\\\" y2=\\\"8%\\\"/> <line x1=\\\"74%\\\" y1=\\\"25%\\\" x2=\\\"91%\\\" y2=\\\"8%\\\"/> <line x1=\\\"74%\\\" y1=\\\"91%\\\" x2=\\\"91%\\\" y2=\\\"74%\\\"/> <line x1=\\\"8%\\\" y1=\\\"91%\\\" x2=\\\"25%\\\" y2=\\\"74%\\\"/> <line x1=\\\"74%\\\" y1=\\\"91%\\\" x2=\\\"25%\\\" y2=\\\"8%\\\"/> <circle cx=\\\"8%\\\" cy=\\\"25%\\\" r=\\\"4%\\\" @click=\\\"setColor(0)\\\" :fill=\\\"board[0] || 'white'\\\"/> <circle cx=\\\"74%\\\" cy=\\\"25%\\\" r=\\\"4%\\\" @click=\\\"setColor(1)\\\" :fill=\\\"board[1] || 'white'\\\"/> <circle cx=\\\"74%\\\" cy=\\\"91%\\\" r=\\\"4%\\\" @click=\\\"setColor(2)\\\" :fill=\\\"board[2] || 'white'\\\"/> <circle cx=\\\"8%\\\" cy=\\\"91%\\\" r=\\\"4%\\\" @click=\\\"setColor(3)\\\" :fill=\\\"board[3] || 'white'\\\"/> <circle cx=\\\"25%\\\" cy=\\\"8%\\\" r=\\\"4%\\\" @click=\\\"setColor(4)\\\" :fill=\\\"board[4] || 'white'\\\"/> <circle cx=\\\"91%\\\" cy=\\\"8%\\\" r=\\\"4%\\\" @click=\\\"setColor(5)\\\" :fill=\\\"board[5] || 'white'\\\"/> <circle cx=\\\"91%\\\" cy=\\\"74%\\\" r=\\\"4%\\\" @click=\\\"setColor(6)\\\" :fill=\\\"board[6] || 'white'\\\"/> <circle cx=\\\"25%\\\" cy=\\\"74%\\\" r=\\\"4%\\\" @click=\\\"setColor(7)\\\" :fill=\\\"board[7] || 'white'\\\"/> <circle v-if=\\\"show\\\" :cx=\\\"x\\\" :cy=\\\"y\\\" r=\\\"4%\\\" :fill=\\\"color\\\" class=\\\"pointer-events-none opacity-50 stroke-0\\\"/> </svg> </div> <game-sidebar step-description=\\\"Válassz színt, majd színezz meg egy csúcsot!\\\" @restart=\\\"resetTurnState()\\\"/> </div> </div> </div> \";\n// Exports\nmodule.exports = code;","// Module\nvar code = \"<div class=\\\"flex justify-center\\\"> <div class=\\\"max-w-[100ch]\\\"> <div class=\\\"flex justify-center mb-4 mt-1\\\"> <p class=\\\"text-justify\\\"> Ez egy példa játék. A kezdőállás ismeretében te döntheted el, hogy kezdeni szeretnél-e, vagy második játékos lenni. Sok sikert! :) </p> </div> <div class=\\\"flex flex-wrap\\\"> <div class=\\\"p-2 shrink-0 grow basis-2/3\\\"> <button v-if=\\\"shouldPlayerMoveNext\\\" class=\\\"cta-button\\\" @click=\\\"endPlayerTurn({ board: [], isGameEnd: true })\\\">Lépek!</button> </div> <game-sidebar step-description=\\\"Kattints a 'Lépek' gombra, hogy lépj.\\\"/> </div> </div> </div> \";\n// Exports\nmodule.exports = code;","// Module\nvar code = \"<div class=\\\"flex justify-center\\\"> <div class=\\\"max-w-[100ch]\\\"> <div class=\\\"flex justify-center mb-4 mt-1\\\"> <p class=\\\"text-justify\\\"> A játék során egy öt mezőből álló táblára fogunk elhelyezni tíz korongot. A játék elején a szervező egy korongot felhelyez az egyik mezőre, és ezután kezdődik a játék. Minden körben a kezdőjátékos egy korongot helyez a táblára, majd ezután a második játékos tesz le két korongot. (A két korongot lehet azonos, illetve különböző mezőkre is tenni.) A játék akkor ér véget, amikor a 10. korong felkerül a táblára. A második játékos akkor nyer, ha a játék végén minden mezőn különböző számú korong áll. A kezdő pedig akkor nyer, ha van két olyan mező, amelyen azonos számú korong áll. Te döntheteted el, hogy a kezdő vagy a második játékos bőrébe szeretnél e bújni. Sok sikert! :) </p> </div> <div class=\\\"flex flex-wrap\\\"> <div class=\\\"p-2 shrink-0 grow basis-2/3\\\"> <div class=\\\"grid grid-cols-3 gap-0 border-t-4 border-l-4\\\"> <div v-for=\\\"id in [0, 1, 2, 3, 4]\\\" :key=\\\"id\\\" @click=\\\"placePiece(id)\\\" class=\\\"aspect-square border-r-4 border-b-4 p-[3%]\\\"> <span v-for=\\\"i in board[id]\\\" :key=\\\"i\\\" class=\\\"m-[2%] aspect-square inline-block bg-blue-600 rounded-full\\\" :class=\\\"{ 'w-[37%]': board[id] <= 4, 'w-[28%]': board[id] == 5 || board[id] == 6, 'w-[20%]': board[id] > 6 }\\\"> </span> </div> </div> </div> <game-sidebar step-description=\\\"Kattints arra a mezőre, ahova korongot szeretnél lerakni.\\\"/> </div> </div> </div> \";\n// Exports\nmodule.exports = code;","// Imports\nvar ___HTML_LOADER_GET_SOURCE_FROM_IMPORT___ = require(\"../../../../node_modules/html-loader/dist/runtime/getUrl.js\");\nvar ___HTML_LOADER_IMPORT_0___ = require(\"../../../assets/hunyadi-and-the-janissaries-castle.jpg\");\n// Module\nvar ___HTML_LOADER_REPLACEMENT_0___ = ___HTML_LOADER_GET_SOURCE_FROM_IMPORT___(___HTML_LOADER_IMPORT_0___);\nvar code = \"<div class=\\\"flex justify-center\\\"> <soldier-svg/> <div class=\\\"max-w-[100ch]\\\"> <div class=\\\"flex justify-center mb-4 mt-1\\\"> <p class=\\\"text-justify\\\"> A török szultán serege megtámadta Hunyadi várát. A várlépcső egyes fokain néhány janicsár áll. Minden reggel a szultán kettéosztja a hadseregét egy piros és egy kék hadtestre. Hunyadi a nap folyamán vagy a piros, vagy a kék sereget megsemmisíti, választása szerint. Éjszaka minden megmaradt janicsár egy lépcsőfokot fellép. Hunyadi nyer, ha a szultán egész seregét megsemmisítette. A szultán nyer, ha lesz olyan janicsár, aki felér a várhoz. A kezdőállás ismeretében te döntheted e, hogy Hunyadiként vagy a török szultánként szeretnél-e játszani. Sok sikert! :) </p> </div> <div class=\\\"flex flex-wrap js-hunyadi-and-the-janissaries\\\"> <div class=\\\"p-2 shrink-0 grow basis-2/3\\\"> <img src=\\\"\" + ___HTML_LOADER_REPLACEMENT_0___ + \"\\\" class=\\\"block m-auto w-[40%]\\\"> <div v-for=\\\"rowIndex in [0, 1, 2, 3, 4, 5]\\\" :key=\\\"rowIndex\\\" :style=\\\"{ 'aspect-ratio': 8, 'margin-left': (5-rowIndex) + 'rem', 'margin-right': (5-rowIndex) + 'rem' }\\\" class=\\\"border-t-black border-t-2 p-0.5 text-center whitespace-nowrap\\\"> <span v-for=\\\"(group, pieceIndex) in board[rowIndex]\\\" class=\\\"aspect-square w-[10%] inline-block mx-1 js-clickable-soldier\\\" @click=\\\"clickOnSoldier(rowIndex, pieceIndex)\\\" @mouseover=\\\"hoveredPiece = { rowIndex, pieceIndex }\\\" @mouseout=\\\"hoveredPiece = null\\\"> <svg class=\\\"w-full aspect-square inline-block border-dashed border-black\\\" :class=\\\"{ 'outline-dashed': showToBeKilled(group), 'opacity-50': showToBeKilled(group), 'fill-blue-600': group === 'blue', 'fill-red-600': group === 'red' }\\\"> <use xlink:href=\\\"#game-soldier-icon\\\"/> </svg> </span> </div> </div> <div class=\\\"p-2 flex flex-col grow shrink-0 basis-64\\\"> <p class=\\\"text-center font-bold text-lg\\\">{{ ctaText }}</p> <enemy-loader/> <p class=\\\"italic text-justify\\\">{{ stepDescription }}</p> <template v-if=\\\"isGameReadyToStart\\\"> <button class=\\\"cta-button js-second-player\\\" @click=\\\"startGameWithRoleSelection({ isFirst: false })\\\"> Hunyadi leszek </button> <button class=\\\"cta-button js-first-player\\\" @click=\\\"startGameWithRoleSelection({ isFirst: true })\\\"> Szultán leszek </button> </template> <template v-if=\\\"isGameInProgress\\\"> <button v-if=\\\"isPlayerSultan\\\" :class=\\\"{ 'opacity-50': isEnemyMoveInProgress }\\\" class=\\\"cta-button js-finalize-groups\\\" @click=\\\"finalizeSoldierGrouping()\\\"> Befejezem a kettéosztást </button> <button v-if=\\\"!isPlayerSultan\\\" :class=\\\"{ 'opacity-50': isEnemyMoveInProgress }\\\" class=\\\"cta-button bg-red-400 hover:bg-red-600 js-kill-red\\\" @click=\\\"killGroup('red')\\\"> Legyőzöm a pirosakat </button> <button v-if=\\\"!isPlayerSultan\\\" :class=\\\"{ 'opacity-50': isEnemyMoveInProgress }\\\" class=\\\"cta-button bg-blue-400 hover:bg-blue-600\\\" @click=\\\"killGroup('blue')\\\"> Legyőzöm a kékeket </button> </template> <div class=\\\"flex flex-grow items-end\\\"> <button class=\\\"cta-button mt-4 js-restart-game\\\" @click=\\\"restartGame()\\\"> Új játék </button> </div> </div> </div> </div> </div> \";\n// Exports\nmodule.exports = code;","// Module\nvar code = \"<svg style=\\\"display:none\\\"> <symbol id=\\\"game-soldier-icon\\\" viewBox=\\\"0 0 298.167 298.167\\\"> <g> <polygon points=\\\"87.226,49.664 87.226,103.334 141.228,103.334 \\t\\\"/> <path d=\\\"M57.737,224.637c4.569-0.903,9.541-2.088,14.62-3.407c-1.152-5.343-1.774-10.881-1.774-16.564\\n        c0-19.615,7.248-37.558,19.186-51.332h118.631c11.937,13.774,19.185,31.717,19.185,51.332c0,5.683-0.622,11.221-1.774,16.564\\n        c5.079,1.319,10.051,2.503,14.62,3.407c1.406-6.438,2.154-13.118,2.154-19.971c0-20.161-6.415-38.852-17.31-54.14\\n        c3.8-2.721,6.285-7.162,6.285-12.192c0-8.284-6.716-15-15-15h-5h-124h-6c-8.284,0-15,6.716-15,15c0,5.045,2.498,9.496,6.316,12.216\\n        c-10.885,15.284-17.293,33.966-17.293,54.116C55.582,211.519,56.33,218.199,57.737,224.637z\\\"/> <path d=\\\"M149.083,283.167c-11.725,0-22.848-2.602-32.849-7.23c-10.838-0.202-20.728-0.808-29.685-1.821\\n        c16.578,14.942,38.511,24.052,62.533,24.052c24.023,0,45.955-9.109,62.533-24.051c-8.958,1.013-18.847,1.618-29.685,1.82\\n        C171.931,280.565,160.808,283.167,149.083,283.167z\\\"/> <circle cx=\\\"183.987\\\" cy=\\\"184.168\\\" r=\\\"12.465\\\"/> <circle cx=\\\"114.18\\\" cy=\\\"184.168\\\" r=\\\"12.465\\\"/> <path d=\\\"M168.083,221.334c-4.304,0-8.276,1.383-11.524,3.712v-25.397c0-4.107-3.165-7.688-7.271-7.811\\n        c-4.247-0.127-7.729,3.277-7.729,7.496c0,9.756,0,15.835,0,25.678c-3.239-2.309-7.193-3.678-11.476-3.678\\n        c-7.958,0-56.993,11.918-79.534,17.277c-5.048,1.2-5.868,7.975-1.294,10.425c20.996,11.245,59.479,11.982,75.34,11.982\\n        c2.388,0,4.263-0.017,5.488-0.017c8.982,0,16.56-5.975,19-14.163c2.44,8.188,10.019,14.163,19,14.163\\n        c1.225,0,3.103,0.017,5.488,0.017c15.858,0,54.344-0.735,75.34-11.982c4.574-2.45,3.755-9.225-1.294-10.426\\n        C225.078,233.251,176.042,221.334,168.083,221.334z\\\"/> <path d=\\\"M210.4,27.163c-2.574-6.903-9.207-11.829-17.008-11.829h-27.1C165.3,6.704,157.98,0,149.083,0s-16.217,6.704-17.209,15.334\\n        h-26.148c-8.076,0-14.912,5.273-17.276,12.561l60.609,60.61L210.4,27.163z\\\"/> <polygon points=\\\"211.226,103.334 211.226,48.664 156.89,103.334 \\t\\\"/> </g> </symbol> </svg> \";\n// Exports\nmodule.exports = code;","// Module\nvar code = \"<div class=\\\"flex justify-center\\\"> <div class=\\\"max-w-[100ch]\\\"> <div class=\\\"flex justify-center mb-4 mt-1\\\"> <p class=\\\"text-justify\\\"> A pályán kezdetben 37 korong van, három kupacban. A soron következő játékos először az egyik kupacot teljes egészében kiveszi a játékból; majd egy másik kupacot kettéoszt két kisebb kupacra (mindkettőbe legalább 1 korongnak kerülnie kell). Egy lépést követően tehát újra három kupac marad. Az a játékos veszít, aki nem tud szabályosan lépni (azaz egyik kupacot se tudja szétosztani). A kezdőállás ismeretében te döntheted el, hogy kezdeni szeretnél-e, vagy második játékos lenni. Sok sikert! :) </p> </div> <div class=\\\"flex flex-wrap\\\"> <div class=\\\"p-2 shrink-0 grow basis-2/3\\\"> <div v-for=\\\"pileId in [0, 1, 2]\\\" :key=\\\"pileId\\\" class=\\\"js-pile w-[50%] pl-1 inline-block text-center py-2\\\" :class=\\\"{ 'border-t-2': pileId < 2, 'border-r-2': pileId === 0 && board[0] >= board[1], 'border-l-2': pileId === 1 && board[0] < board[1] }\\\" style=\\\"transform:scaleY(-1)\\\"> <div class=\\\"text-xl\\\" :class=\\\"{ 'text-red-600': isBannedHover() }\\\" style=\\\"transform:scaleY(-1)\\\"> {{ currentChoiceDescription(pileId) }} </div> <span v-for=\\\"(_, pieceId) in board[pileId]\\\" :key=\\\"pieceId\\\" :class=\\\"{ 'bg-red-600': rowColor({ pileId }) === 'red', 'bg-blue-600': rowColor({ pileId }) === 'blue', 'opacity-50': pileId === removedPileId, 'outline-dashed': toBeLeft({ pileId, pieceId }) }\\\" class=\\\"js-pebble inline-block bg-blue-600 w-[20%] aspect-square rounded-full mx-0.5\\\" :style=\\\"{ 'pointer-events': shouldPlayerMoveNext ? 'auto' : 'none', 'cursor': pieceClickNotAllowed({ pileId, pieceId }) ? 'not-allowed' : 'pointer' }\\\" @click=\\\"clickPiece({ pileId, pieceId })\\\" @mouseover=\\\"hoveredPiece = { pileId, pieceId }\\\" @mouseout=\\\"hoveredPiece = null\\\"></span> </div> </div> <game-sidebar step-description=\\\"Először kattints az eltávolítandó kupacra, majd arra a korongra, ahol ketté akarod vágni a kupacot.\\\" @restart=\\\"resetTurnState()\\\"/> </div> </div> </div> \";\n// Exports\nmodule.exports = code;","// Module\nvar code = \"<div class=\\\"flex justify-center\\\"> <div class=\\\"max-w-[100ch]\\\"> <div class=\\\"flex justify-center mb-4 mt-1\\\"> <p class=\\\"text-justify\\\"> A pályán kezdetben négy kupac korong van. A soron következő játékos először az egyik kupacot teljes egészében kiveszi a játékból; majd egy másik kupacot kettéoszt két kisebb kupacra (mindkettőbe legalább 1 korongnak kerülnie kell). Egy lépést követően tehát újra 4 kupac marad. Az a játékos veszít, aki nem tud szabályosan lépni (azaz egyik kupacot se tudja szétosztani). A kezdőállás ismeretében te döntheted el, hogy kezdeni szeretnél-e, vagy második játékos lenni. Sok sikert! :) </p> </div> <div class=\\\"flex flex-wrap\\\"> <div class=\\\"p-2 shrink-0 grow basis-2/3\\\"> <div v-for=\\\"pileId in [0, 1, 2, 3]\\\" :key=\\\"pileId\\\" class=\\\"js-pile w-[50%] pl-1 inline-block text-center py-2\\\" :class=\\\"{ 'border-t-2': pileId < 2 }\\\" style=\\\"transform:scaleY(-1)\\\"> <div class=\\\"text-xl\\\" :class=\\\"{ 'text-red-600': isBannedHover() }\\\" style=\\\"transform:scaleY(-1)\\\"> {{ currentChoiceDescription(pileId) }} </div> <span v-for=\\\"(_, pieceId) in board[pileId]\\\" :key=\\\"pieceId\\\" :class=\\\"{ 'bg-red-600': rowColor({ pileId }) === 'red', 'bg-blue-600': rowColor({ pileId }) === 'blue', 'opacity-50': pileId === removedPileId, 'outline-dashed': toBeLeft({ pileId, pieceId }) }\\\" class=\\\"js-pebble inline-block bg-blue-600 w-[20%] aspect-square rounded-full mx-0.5\\\" :style=\\\"{ 'pointer-events': shouldPlayerMoveNext ? 'auto' : 'none', 'cursor': pieceClickNotAllowed({ pileId, pieceId }) ? 'not-allowed' : 'pointer' }\\\" @click=\\\"clickPiece({ pileId, pieceId })\\\" @mouseover=\\\"hoveredPiece = { pileId, pieceId }\\\" @mouseout=\\\"hoveredPiece = null\\\"></span> </div> </div> <game-sidebar step-description=\\\"Először kattints az eltávolítandó kupacra, majd arra a korongra, ahol ketté akarod vágni a kupacot.\\\" @restart=\\\"resetTurnState()\\\"/> </div> </div> </div> \";\n// Exports\nmodule.exports = code;","// Module\nvar code = \"<div class=\\\"flex justify-center\\\"> <div class=\\\"max-w-[100ch]\\\"> <div class=\\\"flex justify-center mb-4 mt-1\\\"> <p class=\\\"text-justify\\\"> A pályán mindig két kupac korong található. A soron következő játékos választ egy kupacot, és azt szétosztja két kisebb kupacra (mindkettőbe legalább 1 korongnak kerülnie kell), a másik kupacot pedig kidobjuk. Az a játékos veszít, aki nem tud szabályosan lépni (azaz egyik kupacot se tudja szétosztani). A kezdőállás ismeretében te döntheted el, hogy kezdeni szeretnél-e, vagy második játékos lenni. Sok sikert! :) </p> </div> <div class=\\\"flex flex-wrap js-pile-splitter\\\"> <div class=\\\"p-2 shrink-0 grow basis-2/3\\\"> <div v-for=\\\"pileId in [0, 1]\\\" :key=\\\"pileId\\\" class=\\\"js-pile w-[50%] pl-1 inline-block text-center\\\" :class=\\\"{ 'border-r-2': pileId === 0 && board[0] >= board[1], 'border-l-2': pileId === 1 && board[0] < board[1] }\\\" style=\\\"transform:scaleY(-1)\\\"> <div class=\\\"text-xl\\\" :class=\\\"{ 'text-red-600': isBannedHover() }\\\" style=\\\"transform:scaleY(-1)\\\"> {{ currentChoiceDescription(pileId) }} </div> <span v-for=\\\"(_, pieceId) in board[pileId]\\\" :key=\\\"pieceId\\\" class=\\\"js-pebble inline-block bg-blue-600 w-[20%] aspect-square rounded-full mx-0.5\\\" :class=\\\"{ 'outline-dashed': toBeLeft({ pileId, pieceId }), 'opacity-50': toBeRemoved({ pileId }) }\\\" :style=\\\"{ 'pointer-events': shouldPlayerMoveNext ? 'auto' : 'none', 'cursor': pieceId === board[pileId] - 1 ? 'not-allowed' : 'pointer' }\\\" @click=\\\"clickPiece({ pileId, pieceId })\\\" @mouseover=\\\"hoveredPiece = { pileId, pieceId }\\\" @mouseout=\\\"hoveredPiece = null\\\"> </span> </div> </div> <game-sidebar step-description=\\\"Kattints egy korongra, hogy azzal kettéosztd azt a kupacot.\\\"/> </div> </div> </div> \";\n// Exports\nmodule.exports = code;","// Module\nvar code = \"<div class=\\\"flex justify-center\\\"> <div class=\\\"max-w-[100ch]\\\"> <div class=\\\"flex justify-center mb-4 mt-1\\\"> <p class=\\\"text-justify\\\"> Károly és Dezső <pre class=\\\"inline\\\">m</pre>-ig szeretnének elszámolni, és közben a következő játékot játsszák: 0-ról kezdenek, a két játékos felváltva adhat hozzá egy 13-nál kisebb pozitív egészet a korábbi számhoz, azonban a babonájuk miatt ha egyikük x-et adott hozzá, akkor másikuk a következő lépésben nem adhat hozzá <pre class=\\\"inline\\\">13-x</pre>-et. Az veszít, aki eléri (vagy átlépi) <pre class=\\\"inline\\\">m</pre>-et. Az <pre class=\\\"inline\\\">m</pre> szám ismeretében te döntheteted el, hogy a kezdő vagy a második játékos bőrébe szeretnél e bújni. Sok sikert! :) </p> </div> <div class=\\\"flex flex-wrap\\\"> <div class=\\\"p-2 shrink-0 grow basis-2/3\\\"> <table class=\\\"border-collapse table-fixed w-full\\\"> <tr> <th>Szám</th> <th>Cél</th> <th>Tiltott lépés</th> </tr> <tr> <td class=\\\"text-center border-4 align-middle text-6xl py-4\\\">{{ board.current }}</td> <td class=\\\"text-center border-4 align-middle text-6xl py-4\\\">{{ board.target }}</td> <td class=\\\"text-center border-4 align-middle text-6xl py-4\\\">{{ board.restricted || '-' }}</td> </tr> </table> <div v-if=\\\"!shouldPlayerMoveNext\\\" class=\\\"mt-4\\\"> <label for=\\\"step\\\" class=\\\"mr-2 text-lg\\\"> Következő lépés: </label> <input id=\\\"step\\\" type=\\\"number\\\" min=\\\"1\\\" max=\\\"12\\\" v-model=\\\"step\\\" class=\\\"border-2 rounded pl-1 text-lg\\\" v-on:keyup.enter=\\\"attemptStep()\\\"> </div> </div> <game-sidebar step-description=\\\"Írj be egy számot, majd nyomj Enter-t.\\\" @restart=\\\"resetTurnState()\\\"/> </div> </div> </div> \";\n// Exports\nmodule.exports = code;","// Module\nvar code = \"<div class=\\\"flex justify-center\\\"> <div class=\\\"max-w-[100ch]\\\"> <div class=\\\"flex justify-center mb-4 mt-1\\\"> <p class=\\\"text-justify\\\"> A 3×3-as antiamőba játékban a kezdő piros, a második kék korongokat rak le. Felváltva lépnek, és az veszít, akinek először lesz a saját színéből három korongja egy sorban, oszlopban vagy átlóban. Ha mind a kilenc mező foglalt és nincs ilyen koronghármas, akkor a kezdő nyer. Te döntheted el, hogy kezdeni szeretnél-e, vagy második játékos lenni. Sok sikert! :) </p> </div> <div class=\\\"flex flex-wrap\\\"> <div class=\\\"p-2 shrink-0 grow basis-2/3\\\"> <div class=\\\"grid grid-cols-3 gap-0 border-2\\\"> <div v-for=\\\"id in [0, 1, 2, 3, 4, 5, 6, 7, 8]\\\" :key=\\\"id\\\" @click=\\\"clickField(id)\\\" class=\\\"aspect-square p-[25%] border-2\\\"> <span v-if=\\\"board[id]\\\" class=\\\"w-full aspect-square inline-block rounded-full mb-[-0.5rem]\\\" :class=\\\"pieceColor(id)\\\"></span> </div> </div> </div> <game-sidebar step-description=\\\"Helyezz le egy korongot egy üres mezőre kattintással.\\\"/> </div> </div> </div> \";\n// Exports\nmodule.exports = code;","// Module\nvar code = \"<div class=\\\"flex justify-center\\\"> <div class=\\\"max-w-[100ch]\\\"> <div class=\\\"flex justify-center mb-4 mt-1\\\"> <p class=\\\"text-justify\\\"> A 3 × 3-as duplánkezdő amőba játékban először a kezdő tesz le két piros korongot, majd a második egy kék korongot és innentől felváltva egy-egy korongot tesznek le a saját színükből, amíg be nem telik a tábla. A kezdő nyer, ha a játék végén van valahol három piros egy sorban, oszlopban vagy átlóban, de sehol sincs három kék egy sorban, oszlopban vagy átlóban; egyébként a második nyer. Te döntheted el, hogy kezdeni szeretnél-e, vagy második játékos lenni. Sok sikert! :) </p> </div> <div class=\\\"flex flex-wrap\\\"> <div class=\\\"p-2 shrink-0 grow basis-2/3\\\"> <div class=\\\"grid grid-cols-3 gap-0 border-2\\\"> <div v-for=\\\"id in [0, 1, 2, 3, 4, 5, 6, 7, 8]\\\" :key=\\\"id\\\" @click=\\\"clickField(id)\\\" class=\\\"aspect-square p-[25%] border-2\\\"> <span v-if=\\\"board[id]\\\" class=\\\"w-full aspect-square inline-block rounded-full mb-[-0.5rem]\\\" :class=\\\"pieceColor(id)\\\"></span> </div> </div> </div> <game-sidebar :step-description=\\\"isDuringFirstMove ? 'Helyezz le két korongot (kattints a mezőkre)' : 'Helyezz le egy korongot egy üres mezőre kattintással.'\\\"/> </div> </div> </div> \";\n// Exports\nmodule.exports = code;","// Module\nvar code = \"<div class=\\\"flex justify-center\\\"> <div class=\\\"max-w-[100ch]\\\"> <div class=\\\"flex justify-center mb-4 mt-1\\\"> <p class=\\\"text-justify\\\"> Két játékos játszik egy 3 × 3-as táblán kék és piros korongokkal a szokásos amőba szabályai szerint, tehát felváltva tesznek le korongokat, és ha egy sorban, oszlopban vagy átlóban összegyűlik három azonos színű korong, az adott játékos nyer. Ha az első 9 korong lehelyezése után döntetlen az állás (azaz egyik játékos sem nyert), akkor tovább folytatják a játékot, a soron következő játékos az ellenfél egy már lehelyezett korongját fehérre színezheti. Ezek után az nyer, aki először hoz létre három fehér korongot egy sorban, oszlopban vagy átlóban. Te döntheted el, hogy kezdeni szeretnél-e, vagy második játékos lenni. Sok sikert! :) </p> </div> <div class=\\\"flex flex-wrap\\\"> <div class=\\\"p-2 shrink-0 grow basis-2/3\\\"> <div class=\\\"grid grid-cols-3 gap-0 border-2\\\"> <div v-for=\\\"id in [0, 1, 2, 3, 4, 5, 6, 7, 8]\\\" :key=\\\"id\\\" @click=\\\"clickField(id)\\\" class=\\\"aspect-square p-[25%] border-2\\\" :class=\\\"{ 'cursor-not-allowed': !isMoveAllowed(id) && shouldPlayerMoveNext, 'bg-green-100': !inPlacingPhase && isMoveAllowed(id) }\\\"> <span v-if=\\\"board[id]\\\" class=\\\"w-full aspect-square inline-block rounded-full mb-[-0.5rem]\\\" :class=\\\"{ [pieceColor(id)]: true, 'border-4': pieceColor(id) === 'bg-white', 'border-slate-600': pieceColor(id) === 'bg-white' }\\\"></span> </div> </div> </div> <game-sidebar :step-description=\\\"inPlacingPhase ? 'Kattints egy üres mezőre.' : 'Kattints egy piros korongra.'\\\"/> </div> </div> </div> \";\n// Exports\nmodule.exports = code;","// Module\nvar code = \"<div class=\\\"flex justify-center\\\"> <div class=\\\"max-w-[100ch]\\\"> <div class=\\\"flex justify-center mb-4 mt-1\\\"> <p class=\\\"text-justify\\\"> Adott egy 2 × 2-es táblázat, és hozzá mindkét játékosnak van 3 db korongja. A játék során felváltva tesznek le ezekből egyet-egyet a táblázat tetszőleges mezőjére. A második játékos akkor nyer, ha a játék végén minden mezőben különböző számú korong található. (Azaz 0, 1, 2, 3 a kiosztás a végén valamilyen sorrendben). Minden egyéb esetben pedig a kezdő játékos nyer. Te döntheteted el, hogy a kezdő vagy a második játékos bőrébe szeretnél e bújni. Sok sikert! :) </p> </div> <div class=\\\"flex flex-wrap\\\"> <div class=\\\"p-2 shrink-0 grow basis-2/3\\\"> <div class=\\\"grid grid-cols-2 gap-0 border-2\\\"> <div v-for=\\\"id in [0, 1, 2, 3]\\\" :key=\\\"id\\\" @click=\\\"placePiece(id)\\\" class=\\\"aspect-square border-2 p-[4%]\\\"> <span v-for=\\\"i in board[id]\\\" :key=\\\"i\\\" class=\\\"m-[3%] aspect-square inline-block bg-blue-600 rounded-full\\\" :class=\\\"{ 'w-[40%]': board[id] <= 4, 'w-[25%]': board[id] > 4 }\\\"> </span> </div> </div> </div> <game-sidebar step-description=\\\"Kattints arra a mezőre, ahova korongot szeretnél lerakni.\\\"/> </div> </div> </div> \";\n// Exports\nmodule.exports = code;","// Module\nvar code = \"<div> <h1 class=\\\"text-blue-600 text-2xl font-bold pb-4\\\">Dürer játékok</h1> <table class=\\\"w-full border-collapse\\\"> <thead> <tr> <th v-for=\\\"header in ['Év', 'Forduló', 'Kategória', 'Játék', '']\\\" class=\\\"bg-gray-500 border-2 border-gray-300 text-center text-white font-bold p-1\\\">{{ header }}</th> </tr> </thead> <tr v-for=\\\"game in gamesToShow\\\" class=\\\"odd:bg-gray-200\\\"> <td v-for=\\\"gameProp in [game.year, game.round, game.category, game.name]\\\" class=\\\"border-2 border-gray-300 text-center p-1\\\">{{ gameProp }}</td> <td class=\\\"border-2 border-gray-300 text-center p-1\\\"> <button @click=\\\"goToGamePage(game.component)\\\" :class=\\\"`rounded-lg px-4 bg-blue-400 hover:bg-blue-600 js-select-${game.component}`\\\">Kipróbálom!</button> </td> </tr> </table> </div> \";\n// Exports\nmodule.exports = code;","// Module\nvar code = \"<div> Sajnáljuk, a keresett oldal nem található. Az alábbi gombra kattintva válassz egy játékot. <button class=\\\"rounded-lg px-4 bg-blue-400 hover:bg-blue-600 js-back-to-overview\\\" @click=\\\"$router.push('/')\\\">A játékok listájához</button> </div> \";\n// Exports\nmodule.exports = code;","// Module\nvar code = \"<div> <template v-if=\\\"gameDefinition\\\"> <button class=\\\"rounded-lg px-4 bg-blue-400 hover:bg-blue-600 js-back-to-overview\\\" @click=\\\"goBackToOverview()\\\">← Vissza a listához</button> <h1 class=\\\"text-blue-600 text-2xl font-bold pb-4\\\">{{ gameDefinition.name }}</h1> <hr/> <component :is=\\\"gameId\\\"></component> </template> <page-not-found v-if=\\\"!gameDefinition\\\"></page-not-found> </div> \";\n// Exports\nmodule.exports = code;","import { mapGetters } from 'vuex';\n\nexport default {\n  template: require('./enemy-loader.html'),\n  computed: {\n    ...mapGetters(['isEnemyMoveInProgress'])\n  }\n};\n","import { mapGetters, mapActions, mapState } from 'vuex';\nimport EnemyLoader from '../enemy-loader/enemy-loader';\n\nexport default {\n  name: 'game-sidebar',\n  template: require('./game-sidebar.html'),\n  props: { stepDescription: String },\n  components: { EnemyLoader },\n  computed: {\n    ...mapState(['shouldPlayerMoveNext']),\n    ...mapGetters([\n      'ctaText',\n      'isGameReadyToStart'\n    ])\n  },\n  methods: {\n    ...mapActions(['startGameWithRoleSelection', 'initializeGame']),\n    restartGame() {\n      this.$emit('restart');\n      this.initializeGame();\n    }\n  },\n  created() {\n    this.initializeGame();\n  }\n};\n","import { mapActions, mapState } from 'vuex';\nimport GameSidebar from '../../common/game-sidebar/game-sidebar';\n\nexport default {\n  template: require('./demonstration.html'),\n  components: { GameSidebar },\n  computed: {\n    ...mapState(['shouldPlayerMoveNext'])\n  },\n  methods: {\n    ...mapActions(['endPlayerTurn', 'initializeGame'])\n  },\n  created() {\n    this.initializeGame();\n  }\n};\n","'use strict';\n\nexport const generateNewBoard = () => ([]);\n\nexport const getGameStateAfterAiMove = (board) => {\n  return { board, isGameEnd: true };\n};\n\nexport const isTheLastMoverTheWinner = true;\n","export default {\n  template: require('./soldier-svg.html')\n};\n","'use strict';\n\nimport { random, flatten } from 'lodash-es';\n\nexport const getGameStateAfterAiMove = (board, isPlayerTheFirstToMove) => {\n  if (isPlayerTheFirstToMove) {\n    const optimalGroupToKill = getOptimalGroupToKill(board);\n    return getGameStateAfterKillingGroup(board, optimalGroupToKill);\n  } else {\n    return { board: colorBoardOptimally(board), isGameEnd: false };\n  }\n};\n\nexport const isTheLastMoverTheWinner = null;\n\nexport const generateNewBoard = () => {\n  const rowCount = 5;\n  let board = [];\n  for (let i = 0; i < (rowCount - 1); i++) {\n    const row = [];\n    if (i === 0) row.push('blue');\n    if (random(0, 1) === 1) row.push('blue');\n    board.push(row);\n  }\n  board.push([]);\n\n  for (let i = 0; i < (rowCount - 1); i++) {\n    for (let j of board[i]) {\n      if (random(0, 1) === 1) {\n        board[i].splice(j, 1);\n        board[i + 1].push('blue', 'blue');\n      }\n    }\n  }\n\n  return board;\n};\n\nexport const getGameStateAfterKillingGroup = (board, group) => {\n  let isGameEnd = false;\n  let hasFirstPlayerWon = undefined;\n\n  for (let i = 0; i < board.length; i++) {\n    const remainingSoldiersInRow = board[i].filter((soldier) => soldier !== group);\n    if (remainingSoldiersInRow.length > 0) {\n      if (i === 0) {\n        isGameEnd = true;\n        hasFirstPlayerWon = true;\n      } else {\n        board[i - 1].push(...remainingSoldiersInRow);\n      }\n    }\n    board[i] = [];\n  }\n\n  if (flatten(board).length === 0 && !isGameEnd) {\n    isGameEnd = true;\n    hasFirstPlayerWon = false;\n  }\n  return { board, isGameEnd, hasFirstPlayerWon };\n};\n\nconst colorBoardOptimally = (board) => {\n  const groupScores = { blue: 0, red: 0 };\n  const firstColor = random(0, 1) === 1 ? 'red' : 'blue';\n  const secondColor = firstColor === 'blue' ? 'red' : 'blue';\n\n  for (let i = 0; i < board.length; i++) {\n    for (let j = 0; j < board[i].length; j++) {\n      const nextGroup = groupScores[firstColor] < groupScores[secondColor] ? firstColor : secondColor;\n      board[i][j] = nextGroup;\n      groupScores[nextGroup] += (1 / 2) ** i;\n    }\n  }\n\n  return board;\n};\n\nconst getOptimalGroupToKill = (board) => {\n  if (board[0].length > 0) {\n    return board[0][0];\n  }\n\n  const groupScores = { blue: 0, red: 0 };\n  for (let i = 0; i < board.length; i++) {\n    for (const soldier of board[i]) {\n      groupScores[soldier] += (1 / 2) ** i;\n    }\n  }\n\n  return groupScores['blue'] > groupScores['red'] ? 'blue' : 'red';\n};\n","import { mapGetters, mapActions, mapState } from 'vuex';\nimport EnemyLoader from '../../common/enemy-loader/enemy-loader';\nimport SoldierSvg from './soldier-svg/soldier-svg';\nimport { getGameStateAfterKillingGroup } from './strategy/strategy';\n\nexport default {\n  template: require('./hunyadi-and-the-janissaries.html'),\n  components: { EnemyLoader, SoldierSvg },\n  data: () => ({\n    hoveredPiece: null\n  }),\n  computed: {\n    ...mapState({ isPlayerSultan: (state) => state.isPlayerTheFirstToMove }),\n    ...mapState(['board', 'shouldPlayerMoveNext']),\n    ...mapGetters([\n      'ctaText',\n      'isEnemyMoveInProgress',\n      'isGameInProgress',\n      'isGameReadyToStart'\n    ]),\n    stepDescription() {\n      if (!this.shouldPlayerMoveNext) return '';\n      return this.isPlayerSultan\n        ? 'Kattints a katonákra és válaszd két részre a seregedet.'\n        : 'Kattints egy katonára vagy az alábbi gombok valamelyikére, hogy megsemmisítsd a vele azonos színű sereget.';\n    },\n    groupOfHoveredPiece() {\n      if (!this.hoveredPiece) return null;\n      return this.board[this.hoveredPiece.rowIndex][this.hoveredPiece.pieceIndex];\n    }\n  },\n  methods: {\n    ...mapActions(['endPlayerTurn', 'startGameWithRoleSelection', 'initializeGame']),\n    clickOnSoldier(rowIndex, pieceIndex) {\n      if (!this.shouldPlayerMoveNext) return;\n      if (this.isPlayerSultan) {\n        this.toggleGroup(rowIndex, pieceIndex);\n        return;\n      } else {\n        this.killGroup(this.board[rowIndex][pieceIndex]);\n      }\n    },\n    showToBeKilled(group) {\n      if (!this.shouldPlayerMoveNext || this.isPlayerSultan) return false;\n      if (!this.hoveredPiece) return false;\n      return group === this.groupOfHoveredPiece;\n    },\n    toggleGroup(rowIndex, pieceIndex) {\n      if (!this.shouldPlayerMoveNext || !this.isPlayerSultan) return;\n      this.board[rowIndex][pieceIndex] = this.board[rowIndex][pieceIndex] === 'blue' ? 'red' : 'blue';\n    },\n    finalizeSoldierGrouping() {\n      this.endPlayerTurn({ board: this.board, isGameEnd: false });\n    },\n    killGroup(group) {\n      this.endPlayerTurn(getGameStateAfterKillingGroup(this.board, group));\n    },\n    resetTurnState() {\n      this.hoveredPiece = null;\n    },\n    restartGame() {\n      this.resetTurnState();\n      this.initializeGame();\n    }\n  },\n  created() {\n    this.initializeGame();\n  }\n};\n","'use strict';\n\nimport { sum, isEqual, cloneDeep, random } from 'lodash-es';\n\nexport const generateNewBoard = () => [0, 0, 0, 0];\n\nexport const getGameStateAfterAiMove = (board) => {\n  const tileIndex = getOptimalTileIndex(board);\n  return getGameStateAfterMove(board, tileIndex);\n};\n\nexport const getGameStateAfterMove = (board, tileIndex) => {\n  const boardForStep = cloneDeep(board);\n  boardForStep[tileIndex] = boardForStep[tileIndex] + 1;\n  return {\n    board: boardForStep,\n    isGameEnd: sum(boardForStep) >= 6,\n    hasFirstPlayerWon: !isEqual([...boardForStep].sort(), [0, 1, 2, 3])\n  };\n};\n\nexport const isTheLastMoverTheWinner = null;\n\nconst getOptimalTileIndex = (board) => {\n  const pieces = sum(board);\n\n  if (pieces % 2 === 0) { //following the strategy\n    if (pieces === 0) return random(0, 3);\n    if (pieces === 2) { // 0,0,0,2 or 0,0,1,1\n      let stack = false;\n      for (let i = 0; i < 4; i++) {\n        if (board[i] === 2) stack = true;\n      }\n      if (stack) {\n        let i = 0;\n        while (board[i] !== 2) i++;\n        return i;\n      } else {\n        let ret = random(0, 3);\n        while (board[ret] === 1) ret = random(0, 3);\n        return ret;\n      }\n    }\n    if (pieces === 4) { // 0,0,0,4 or 0,0,1,3 or 0,1,1,2 or 1,1,1,1 (or 0,0,2,2)\n      let board2 = cloneDeep(board);\n      board2.sort();\n      if (board2[3] >= 3) {\n        let i = 0;\n        while (board[i] < 3) i++;\n        return i;\n      } else if (board2[0] === 0) {\n        let i = 0;\n        while (board[i] !== 0 && i < 4) i++;\n        return i;\n      } else return random(0, 3);\n    }\n  } else { //trying to win if the player makes a mistake\n    if (pieces === 1) { // 0,0,0,1\n      return random(0, 3);\n    }\n    if (pieces === 3) { // 0,0,0,3 or 0,0,1,2 or 0,1,1,1\n      let stack = false;\n      for (let i = 0; i < 4; i++) {\n        if (board[i] === 3) stack = true;\n      }\n      if (stack) {\n        let ret = random(0, 3);\n        while (board[ret] !== 0) ret = random(0, 3);\n        return ret;\n      } else {\n        let ret = random(0, 3);\n        while (board[ret] !== 1) ret = random(0, 3);\n        return ret;\n      }\n    }\n    if (pieces === 5) { // 0,0,2,3 or 0,1,1,3 or 0,1,2,2 (or 0,0,0,5 or 0,0,1,4 or 1,1,1,2)\n      let board2 = cloneDeep(board);\n      board2.sort();\n      if (board2[3] === 3) {\n        if (board2[2] === 2) { // 0,0,2,3\n          let ret = random(0, 3);\n          while (board[ret] !== 0) ret = random(0, 3);\n          return ret;\n        } else { // 0,1,1,3\n          let ret = random(0, 3);\n          while (board[ret] !== 1) ret = random(0, 3);\n          return ret;\n        }\n      } else if (board2[3] === 2 && board2[2] === 2) { // 0,1,2,2\n        let ret = random(0, 3);\n        while (board[ret] !== 2) ret = random(0, 3);\n        return ret;\n      } else return random(0, 3);\n    }\n  }\n};\n","import { mapActions, mapState } from 'vuex';\nimport GameSidebar from '../../common/game-sidebar/game-sidebar';\nimport { getGameStateAfterMove } from './strategy/strategy';\n\nexport default {\n  template: require('./two-times-two.html'),\n  components: { GameSidebar },\n  computed: {\n    ...mapState(['board', 'shouldPlayerMoveNext'])\n  },\n  methods: {\n    ...mapActions(['endPlayerTurn', 'initializeGame']),\n    placePiece(tileIndex) {\n      if (!this.shouldPlayerMoveNext) return;\n      this.endPlayerTurn(getGameStateAfterMove(this.board, tileIndex));\n    }\n  },\n  created() {\n    this.initializeGame();\n  }\n};\n","'use strict';\n\nimport { sum, isEqual, random, cloneDeep } from 'lodash-es';\n\nexport const generateNewBoard = () => {\n  const board = Array(5).fill(0);\n  const x = random(4);\n  board[x] += 1;\n  return board;\n};\n\nexport const getGameStateAfterAiMove = (board, isPlayerTheFirstToMove) => {\n  if(isPlayerTheFirstToMove){\n    const tileIndices = getOptimalTileIndices(board);\n    board[tileIndices[0]] += 1;\n    board[tileIndices[1]] += 1;\n    return getGameStateAfterMove(board);\n  } else {\n    const tileIndex = getOptimalTileIndex(board);\n    board[tileIndex] += 1;\n    return getGameStateAfterMove(board);\n  }\n};\n\nexport const getGameStateAfterMove = (board) => {\n  return {\n    board: board,\n    isGameEnd: sum(board) >= 10,\n    hasFirstPlayerWon: !isEqual([...board].sort(), [0, 1, 2, 3, 4])\n  };\n};\n\nexport const isTheLastMoverTheWinner = null;\n\n//following the strategy\nconst getOptimalTileIndices = (board) => {\n  const pieces = sum(board);\n  let board2 = cloneDeep(board);\n  board2.sort();\n\n  if(pieces === 2){ // 0,0,0,1,1 or 0,0,0,0,2\n    if(board2[4] === 2){\n      const i = findSquare(board,0);\n      return [i,i];\n    }\n    else{\n      return findSquares(board,1,1);\n    }\n  }\n  else if(pieces === 5){ // 0,0,1,2,2 or 0,0,0,2,3\n    if(random(1) === 0){ // make 0,0,1,3,3\n      if(board2[4] === 2){\n        return findSquares(board,2,2);\n      }\n      else{\n        return [findSquare(board,0),findSquare(board,2)];\n      }\n    }\n    else{ // make 0,0,2,2,3\n      if(board2[4] === 2){\n        return [findSquare(board,1),findSquare(board,2)];\n      }\n      else{\n        const i = findSquare(board,0);\n        return [i,i];\n      }\n    }\n  }\n  else if(pieces === 8){ // 0,1,2,2,3 or 0,1,1,3,3 or 0,0,2,3,3 or 0,0,2,2,4 or 0,0,1,3,4\n    if(board2[4] === 4){\n      if(board2[3] === 3){ // 0,0,1,3,4\n        const i = findSquare(board,0);\n        return [i,i];\n      }\n      else{ // 0,0,2,2,4\n        return [findSquare(board,0),findSquare(board,2)];\n      }\n    }\n    else if(board2[3] === 3){\n      if(board2[2] === 2){ // 0,0,2,3,3\n        return [findSquare(board,0),findSquare(board,3)];\n      }\n      else{ // 0,1,1,3,3\n        return [findSquare(board,1),findSquare(board,3)];\n      }\n    }\n    else{ // 0,1,2,2,3\n      const i = findSquare(board,2);\n      return [i,i];\n    }\n  }\n  else alert(\"illegal state\");\n};\n\n//trying to win if the player makes a mistake\nconst getOptimalTileIndex = (board) => {\n  const pieces = sum(board);\n  let board2 = cloneDeep(board);\n  board2.sort();\n\n  if(pieces === 1){ // (0,0,0,0,1)\n    return random(4);\n  }\n  else if(pieces === 4){ // (0,1,1,1,1) or 0,0,1,1,2 or (0,0,0,2,2) or 0,0,0,1,3 or (0,0,0,0,4)\n    if(board2[4] === 3){\n      return findSquare(board,3);\n    }\n    else if(board2[4] === 2 && board2[3] === 1){\n      return findSquare(board,0);\n    }\n    else{\n      return random(4);\n    }\n  }\n  else if(pieces === 7){ // (1,1,1,2,2) or 0,1,2,2,2 or (1,1,1,1,3) or 0,1,1,2,3 or (0,0,2,2,3) or (0,0,1,3,3) or 0,1,1,1,4 or 0,0,1,2,4 or 0,0,0,3,4 or (0,0,1,1,5) or (0,0,0,2,5) or (0,0,0,1,6) or (0,0,0,0,7)\n    if(board2[4] === 4){\n      return findSquare(board,4);\n    }\n    else if(board2[0] === 0 && board2[1] !== 0){\n      return findSquare(board,0);\n    }\n    else{\n      return random(4);\n    }\n  }\n  else alert(\"illegal state\");\n};\n\n// finds a square with n pieces randomly\nconst findSquare = (board,n) => {\n  let ret = random(4);\n  while (board[ret] !== n) ret = random(4);\n  return ret;\n};\n\n// finds the squares with values n and k\n// n and k does not need to be different but there must be exactly 2 such squares\nconst findSquares = (board,n,k) => {\n  let i1 = 0;\n  while (board[i1] !== n || board[i1] !== k) i1++;\n  let i2 = i1+1;\n  while (board[i2] !== n || board[i2] !== k) i2++;\n  return [i1,i2];\n};\n","import { mapActions, mapState } from 'vuex';\nimport GameSidebar from '../../common/game-sidebar/game-sidebar';\nimport { getGameStateAfterMove } from './strategy/strategy';\n\nexport default {\n  template: require('./five-squares.html'),\n  components: { GameSidebar },\n  data: () => ({\n    oneMoveDone: false\n  }),\n  computed: {\n    ...mapState(['board', 'shouldPlayerMoveNext', 'isPlayerTheFirstToMove'])\n  },\n  methods: {\n    ...mapActions(['endPlayerTurn', 'initializeGame']),\n    placePiece(tileIndex) {\n      if (!this.shouldPlayerMoveNext) return;\n\n      this.board[tileIndex] += 1;\n      if (!this.isPlayerTheFirstToMove && !this.oneMoveDone){\n        this.oneMoveDone = true;\n      } else {\n        this.oneMoveDone = false;\n        this.endPlayerTurn(getGameStateAfterMove(this.board));\n      }\n    }\n  },\n  created() {\n    this.initializeGame();\n  }\n};\n","'use strict';\n\nimport { random } from 'lodash-es';\n\nexport const getGameStateAfterAiMove = (board) => {\n  return getGameStateAfterMove(board, getAiStep(board));\n};\n\nexport const generateNewBoard = () => {\n  return { current: 0, target: random(20, 100), restricted: null };\n};\n\nexport const isTheLastMoverTheWinner = false;\n\nexport const getGameStateAfterMove = (board, step) => {\n  const numberAfterStep = board.current + step;\n  const isGameEnd = numberAfterStep >= board.target;\n  return {\n    board: { current: numberAfterStep, target: board.target, restricted: 13 - step },\n    isGameEnd\n  };\n};\n\nconst getAiStep = ({ current, target, restricted }) => {\n  if ((target - current) % 14 === 0) { //any step wins\n    return randomStep(restricted);\n  }\n  if ((target - current) % 14 === 1) { //any step looses\n    return randomStep(restricted);\n  }\n  //only one winning step\n  if ((target - current) % 14 - 1 === restricted) return randomStep(restricted);\n  else return (target - current) % 14 - 1;\n};\n\nconst randomStep = (restricted) => {\n  let step = restricted;\n  while(step === restricted){\n    step = random(1, 12);\n  }\n  return step;\n};\n","import { mapActions, mapState } from 'vuex';\nimport GameSidebar from '../../common/game-sidebar/game-sidebar';\nimport { getGameStateAfterMove } from './strategy/strategy';\n\nexport default {\n  template: require('./superstitious-counting.html'),\n  components: { GameSidebar },\n  data: () => ({ step: 1 }),\n  computed: {\n    ...mapState(['board', 'shouldPlayerMoveNext'])\n  },\n  methods: {\n    ...mapActions(['endPlayerTurn', 'initializeGame']),\n    attemptStep() {\n      if (!this.shouldPlayerMoveNext) return;\n      if(this.step === this.board.restricted || this.step <= 0 || this.step >= 13) {\n        alert(\"Ez a lépés nem megengedett\");\n        return;\n      }\n      this.endPlayerTurn(getGameStateAfterMove(this.board, this.step));\n    },\n    resetTurnState() {\n      this.step = 1;\n    }\n  },\n  created() {\n    this.initializeGame();\n  }\n};\n","'use strict';\n\nimport { random } from 'lodash-es';\n\nexport const generateRandomEvenBetween = (low, high) => {\n  return 2 * random(Math.ceil(low / 2), Math.floor(high / 2));\n};\n","'use strict';\n\nimport { random, isEqual } from 'lodash-es';\nimport { generateRandomEvenBetween } from '../../../../../lib/generate-random';\n\nexport const generateNewBoard = () => ([random(3, 10), random(3, 10)]);\n\nexport const isTheLastMoverTheWinner = true;\n\nexport const getGameStateAfterAiMove = (board) => {\n  return getGameStateAfterMove(board, getAiStep(board));\n};\n\nexport const getGameStateAfterMove = (board, { pileId, pieceId }) => {\n  const newBoard = [pieceId + 1, board[pileId] - pieceId - 1];\n  return { board: newBoard, isGameEnd: isEqual(newBoard, [1, 1]) };\n};\n\nconst getAiStep = (board) => {\n  const randomPileIndex = random(0, 1);\n\n  const PileIndexToSplit = (board[randomPileIndex] % 2 === 0 || board[1 - randomPileIndex] === 1)\n    ? randomPileIndex\n    : 1 - randomPileIndex;\n\n  const pieceId = getOptimalDivision(board[PileIndexToSplit]);\n  return { pileId: PileIndexToSplit, pieceId };\n};\n\nconst getOptimalDivision = (pieceCountInPile) => {\n  if (pieceCountInPile === 2) return 0;\n\n  return generateRandomEvenBetween(0, pieceCountInPile - 2);\n};\n","import { mapGetters, mapActions, mapState } from 'vuex';\nimport GameSidebar from '../../../common/game-sidebar/game-sidebar';\nimport { getGameStateAfterMove } from './strategy/strategy';\n\nexport default {\n  template: require('./pile-splitter.html'),\n  components: { GameSidebar },\n  data: () => ({\n    hoveredPiece: null\n  }),\n  computed: {\n    ...mapState(['board', 'shouldPlayerMoveNext']),\n    ...mapGetters(['isGameReadyToStart', 'isGameFinished'])\n  },\n  methods: {\n    ...mapActions(['endPlayerTurn', 'initializeGame']),\n    clickPiece({ pileId, pieceId }) {\n      if (!this.shouldPlayerMoveNext || pieceId === this.board[pileId] - 1) return;\n      this.endPlayerTurn(getGameStateAfterMove(this.board, { pileId, pieceId }));\n      this.hoveredPiece = null;\n    },\n    toBeLeft({ pileId, pieceId }) {\n      if (this.hoveredPiece === null) return false;\n      if (pileId !== this.hoveredPiece.pileId) return false;\n      if (this.hoveredPiece.pieceId === this.board[pileId] - 1) return false;\n      if (pieceId > this.hoveredPiece.pieceId) return false;\n      return true;\n    },\n    isBannedHover() {\n      if (this.hoveredPiece === null) return false;\n      return this.hoveredPiece.pieceId === this.board[this.hoveredPiece.pileId] - 1;\n    },\n    toBeRemoved({ pileId }) {\n      if (this.hoveredPiece === null) return false;\n      return this.hoveredPiece.pileId !== pileId;\n    },\n    currentChoiceDescription(pileId) {\n      if (this.isGameFinished) return '';\n\n      const pieceCountInPile = this.board[pileId];\n\n      if (this.isGameReadyToStart || !this.shouldPlayerMoveNext || !this.hoveredPiece) return pieceCountInPile;\n      if (this.hoveredPiece.pileId !== pileId) return `${pieceCountInPile} → 🗑️`;\n\n      return `${pieceCountInPile} → ${this.hoveredPiece.pieceId + 1}, ${pieceCountInPile - this.hoveredPiece.pieceId - 1}`;\n    }\n  },\n  created() {\n    this.initializeGame();\n  }\n};\n","'use strict';\n\nimport { random, isEqual } from 'lodash-es';\n\nexport const generateNewBoard = () => {\n  const x = random(4, 20);\n  const y = random(Math.max(4, 17 - x), Math.min(20, 33 - x));\n  return [x, y, 37 - x - y];\n};\n\nexport const getGameStateAfterMove = (board, { removedPileId, splitPileId, pieceId }) => {\n  if (removedPileId < splitPileId) {\n    board[removedPileId] = pieceId + 1;\n    board[splitPileId] = board[splitPileId] - pieceId - 1;\n  } else {\n    board[removedPileId] = board[splitPileId] - pieceId - 1;\n    board[splitPileId] = pieceId + 1;\n  }\n  return { board, isGameEnd: isGameEnd(board) };\n};\n\nexport const isTheLastMoverTheWinner = true;\n\nexport const getGameStateAfterAiMove = (board) => {\n  const newBoard = getBoardAfterAiStep(board);\n  return { board: newBoard, isGameEnd: isGameEnd(newBoard) };\n};\n\nconst isGameEnd = (board) => isEqual(board, [1, 1, 1]);\n\nconst getBoardAfterAiStep = function (board) {\n  const start = random(0, 2);\n\n  if (board[0] % 2 === 1 || board[1] % 2 === 1 || board[2] % 2 === 1) {\n    if (board[start] % 2 === 0) {\n      if (board[(start + 1) % 3] % 2 === 0) return getOptimalDivision(board, start, (start + 1) % 3);\n      else return getOptimalDivision(board, start, (start + 2) % 3);\n    } else if (board[(start + 1) % 3] % 2 === 0) {\n      return getOptimalDivision(board, (start + 1) % 3, (start + 2) % 3);\n    } else if (board[(start + 2) % 3] % 2 === 0) {\n      return getOptimalDivision(board, (start + 2) % 3, (start + 1) % 3);\n    } else {\n      if (board[start] !== 1) return getOptimalDivision(board, start, (start + 1) % 3);\n      else if (board[(start + 1) % 3] !== 1) return getOptimalDivision(board, (start + 1) % 3, (start + 2) % 3);\n      else return getOptimalDivision(board, (start + 2) % 3, start);\n    }\n  } else if (board[0] === 2 && board[1] === 2 && board[2] === 2) {\n    return getOptimalDivision(board, start, (start + 1) % 3);\n  } else {\n    //this is the case where all piles have even number of pieces\n    //should not occur in an optimal game with 37 pieces\n    //with this the enemy also has a strategy when the game starts with 36 pieces\n    return getBoardAfterAiStep(board.map((x) => x / 2)).map((x) => x * 2);\n  }\n};\n\nconst getOptimalDivision = function (board, first, second) {\n  const sum = board[first];\n\n  let move = board;\n\n  if (sum === 2) {\n    move[first] = 1;\n    move[second] = 1;\n    return move;\n  }\n\n  const firstPile = 1 + 2 * Math.ceil(Math.random() * Math.floor((sum - 2) / 2));\n  move[first] = firstPile;\n  move[second] = sum - firstPile;\n\n  return move;\n};\n","import { mapGetters, mapActions, mapState } from 'vuex';\nimport GameSidebar from '../../../common/game-sidebar/game-sidebar';\nimport { getGameStateAfterMove } from './strategy/strategy';\n\nexport default {\n  template: require('./pile-splitter-3.html'),\n  components: { GameSidebar },\n  data: () => ({\n    removedPileId: null,\n    hoveredPiece: null\n  }),\n  computed: {\n    ...mapState(['board', 'shouldPlayerMoveNext']),\n    ...mapGetters(['isGameInProgress', 'isGameFinished'])\n  },\n  methods: {\n    ...mapActions(['endPlayerTurn', 'initializeGame']),\n    rowColor({ pileId }) {\n      if (!this.isGameInProgress) return 'blue';\n\n      if (pileId === this.removedPileId) {\n        if (this.hoveredPiece === null) return 'red';\n        if (this.hoveredPiece.pileId === pileId) return 'blue';\n        return 'red';\n      }\n      if (this.hoveredPiece === null) return 'blue';\n      if (this.removedPileId === null && this.hoveredPiece.pileId === pileId) return 'red';\n      return 'blue';\n    },\n    pieceClickNotAllowed({ pileId, pieceId }) {\n      if (this.removedPileId === null) return false;\n      if (this.removedPileId === pileId) return false;\n      return pieceId === this.board[pileId] - 1;\n    },\n    clickPiece({ pileId, pieceId }) {\n      if (!this.shouldPlayerMoveNext) return;\n\n      if (this.removedPileId === pileId) {\n        this.removedPileId = null;\n        return;\n      }\n      if (this.removedPileId === null) {\n        this.removedPileId = pileId;\n        return;\n      }\n      if (pieceId === this.board[pileId] - 1) return;\n      this.endPlayerTurn(getGameStateAfterMove(this.board, {\n        removedPileId: this.removedPileId,\n        splitPileId: pileId,\n        pieceId\n      }));\n      this.resetTurnState();\n    },\n    toBeLeft({ pileId, pieceId }) {\n      if (this.hoveredPiece === null) return false;\n      if (this.removedPileId === null) return false;\n      if (this.removedPileId === pileId) return false;\n      if (pileId !== this.hoveredPiece.pileId) return false;\n      if (this.hoveredPiece.pieceId === this.board[pileId] - 1) return false;\n      if (pieceId > this.hoveredPiece.pieceId) return false;\n      return true;\n    },\n    isBannedHover() {\n      if (this.hoveredPiece === null) return false;\n      return this.hoveredPiece.pieceId === this.board[this.hoveredPiece.pileId] - 1;\n    },\n    currentChoiceDescription(pileId) {\n      if (this.isGameFinished) return '';\n\n      const pieceCountInPile = this.board[pileId];\n\n      if (!this.shouldPlayerMoveNext) return pieceCountInPile;\n      if (pileId === this.removedPileId) {\n        if (this.hoveredPiece && this.hoveredPiece.pileId === pileId) {\n          return 'Mégse?';\n        }\n        return `${pieceCountInPile} → 🗑️`;\n      }\n      if (!this.hoveredPiece) return pieceCountInPile;\n      if (this.removedPileId === null && this.hoveredPiece.pileId === pileId) {\n        return `${pieceCountInPile} → 🗑️`;\n      }\n      if (this.hoveredPiece.pileId !== pileId) return pieceCountInPile;\n\n      return `${pieceCountInPile} → ${this.hoveredPiece.pieceId + 1}, ${pieceCountInPile - this.hoveredPiece.pieceId - 1}`;\n    },\n    resetTurnState() {\n      this.hoveredPiece = null;\n      this.removedPileId = null;\n    }\n  },\n  created() {\n    this.initializeGame();\n  }\n};\n","'use strict';\n\nimport { random, isEqual, range, sample } from 'lodash-es';\n\nexport const generateNewBoard = () => ([random(4, 18), random(4, 18), random(4, 18), random(4, 18)]);\n\nexport const getGameStateAfterMove = (board, { removedPileId, splitPileId, pieceId }) => {\n  if (removedPileId < splitPileId) {\n    board[removedPileId] = pieceId + 1;\n    board[splitPileId] = board[splitPileId] - pieceId - 1;\n  } else {\n    board[removedPileId] = board[splitPileId] - pieceId - 1;\n    board[splitPileId] = pieceId + 1;\n  }\n  return { board, isGameEnd: isGameEnd(board) };\n};\n\nexport const isTheLastMoverTheWinner = true;\n\nconst isGameEnd = (board) => isEqual(board, [1, 1, 1, 1]);\n\nexport const getGameStateAfterAiMove = (board) => {\n  const newBoard = getBoardAfterAiStep(board);\n  return { board: newBoard, isGameEnd: isGameEnd(newBoard) };\n};\n\nconst getBoardAfterAiStep = (board) => {\n  const start = random(0, 3);\n\n  const odds = board.filter(p => p % 2 === 1).length;\n\n  if (odds === 4) {\n    const notSinglePileIndices = range(0, 3).filter(i => board[i] !== 1);\n    const first = sample(notSinglePileIndices);\n    return getOptimalDivision(board, first, (first + 1) % 4);\n  }\n\n  if (odds === 3) {\n    const evenPileIndex = range(0, 3).find(i => board[i] % 2 === 0);\n    return getOptimalDivision(board, evenPileIndex, (evenPileIndex + 1) % 4);\n  }\n\n  if (odds === 2) {\n    const evenPileIndices = range(0, 3).filter(i => board[i] % 2 === 0);\n    return getOptimalDivision(board, evenPileIndices[0], evenPileIndices[1]);\n  }\n\n  if (odds === 1) {\n    const oddPile = range(0, 3).find(i => board[i] % 2 === 1);\n    if (\n      board[oddPile] === 1 && board[(oddPile + 1) % 4] === 2 &&\n      board[(oddPile + 2) % 4] === 2 && board[(oddPile + 3) % 4] === 2\n    ) {\n      return getOptimalDivision(board, (oddPile + 1) % 4, (oddPile + 2) % 4);\n    } else {\n      let modifiedBoard = board;\n      modifiedBoard[oddPile] += 1;\n      modifiedBoard = getBoardAfterAiStep(modifiedBoard);\n      modifiedBoard[oddPile] -= 1;\n      return modifiedBoard;\n    }\n  }\n\n  if (odds === 0) {\n    if (board[0] === 2 && board[1] === 2 && board[2] === 2 && board[3] === 2) {\n      return getOptimalDivision(board, start, (start + 1) % 4);\n    } else {\n      return getBoardAfterAiStep(board.map((x) => x / 2)).map((x) => x * 2);\n    }\n  }\n};\n\nconst getOptimalDivision = function (board, first, second) {\n  const sum = board[first];\n  let move = board;\n\n  if (sum === 2) {\n    move[first] = 1;\n    move[second] = 1;\n    return move;\n  }\n\n  const firstPile = 1 + 2 * Math.ceil(Math.random() * Math.floor((sum - 2) / 2));\n  move[first] = firstPile;\n  move[second] = sum - firstPile;\n\n  return move;\n};\n","import { mapGetters, mapActions, mapState } from 'vuex';\nimport GameSidebar from '../../../common/game-sidebar/game-sidebar';\nimport { getGameStateAfterMove } from './strategy/strategy';\n\nexport default {\n  template: require('./pile-splitter-4.html'),\n  components: { GameSidebar },\n  data: () => ({\n    removedPileId: null,\n    hoveredPiece: null\n  }),\n  computed: {\n    ...mapState(['board', 'shouldPlayerMoveNext']),\n    ...mapGetters([\n      'isGameInProgress',\n      'isGameReadyToStart',\n      'isGameFinished'\n    ])\n  },\n  methods: {\n    ...mapActions(['endPlayerTurn', 'initializeGame']),\n    rowColor({ pileId }) {\n      if (!this.isGameInProgress) return 'blue';\n      if (pileId === this.removedPileId) {\n        if (this.hoveredPiece === null) return 'red';\n        if (this.hoveredPiece.pileId === pileId) return 'blue';\n        return 'red';\n      }\n      if (this.hoveredPiece === null) return 'blue';\n      if (this.removedPileId === null && this.hoveredPiece.pileId === pileId) return 'red';\n      return 'blue';\n    },\n    pieceClickNotAllowed({ pileId, pieceId }) {\n      if (this.removedPileId === null) return false;\n      if (this.removedPileId === pileId) return false;\n      return pieceId === this.board[pileId] - 1;\n    },\n    clickPiece({ pileId, pieceId }) {\n      if (!this.shouldPlayerMoveNext) return;\n      if (this.removedPileId === pileId) {\n        this.removedPileId = null;\n        return;\n      }\n      if (this.removedPileId === null) {\n        this.removedPileId = pileId;\n        return;\n      }\n      if (pieceId === this.board[pileId] - 1) return;\n      this.endPlayerTurn(getGameStateAfterMove(this.board, {\n        removedPileId: this.removedPileId,\n        splitPileId: pileId,\n        pieceId\n      }));\n      this.resetTurnState();\n    },\n    toBeLeft({ pileId, pieceId }) {\n      if (this.hoveredPiece === null) return false;\n      if (this.removedPileId === null) return false;\n      if (this.removedPileId === pileId) return false;\n      if (pileId !== this.hoveredPiece.pileId) return false;\n      if (this.hoveredPiece.pieceId === this.board[pileId] - 1) return false;\n      if (pieceId > this.hoveredPiece.pieceId) return false;\n      return true;\n    },\n    isBannedHover() {\n      if (this.hoveredPiece === null) return false;\n      return this.hoveredPiece.pieceId === this.board[this.hoveredPiece.pileId] - 1;\n    },\n    currentChoiceDescription(pileId) {\n      if (this.isGameFinished) return '';\n\n      const pieceCountInPile = this.board[pileId];\n\n      if (this.isGameReadyToStart || !this.shouldPlayerMoveNext) return pieceCountInPile;\n      if (pileId === this.removedPileId) {\n        if (this.hoveredPiece && this.hoveredPiece.pileId === pileId) {\n          return 'Mégse?';\n        }\n        return `${pieceCountInPile} → 🗑️`;\n      }\n      if (!this.hoveredPiece) return pieceCountInPile;\n      if (this.removedPileId === null && this.hoveredPiece.pileId === pileId) {\n        return `${pieceCountInPile} → 🗑️`;\n      }\n      if (this.hoveredPiece.pileId !== pileId) return pieceCountInPile;\n\n      return `${pieceCountInPile} → ${this.hoveredPiece.pieceId + 1}, ${pieceCountInPile - this.hoveredPiece.pieceId - 1}`;\n    },\n    resetTurnState() {\n      this.hoveredPiece = null;\n      this.removedPileId = null;\n    }\n  },\n  created() {\n    this.initializeGame();\n  }\n};\n","'use strict';\n\nimport { isNull, every, some, difference, range, shuffle, sample } from 'lodash-es';\n\nexport const generateNewBoard = () => Array(8).fill(null);\n\nexport const allColors = [\"red\", \"green\", \"blue\"];\n\nexport const getGameStateAfterAiMove = (board, isPlayerTheFirstToMove) => {\n  board = isPlayerTheFirstToMove ? makeOptimalStepAsSecond(board) : makeOptimalStepAsFirst(board);\n  return getGameStateAfterMove(board);\n};\n\nexport const getGameStateAfterMove = (board) => {\n  return {\n    board,\n    isGameEnd: isGameEnd(board),\n    hasFirstPlayerWon: hasFirstPlayerWon(board)\n  };\n};\n\nexport const isTheLastMoverTheWinner = null;\n\nexport const isAllowedStep = (board, vertex, color) => {\n  if (!isNull(board[vertex])) return false;\n  return every(neighbours[vertex], i => isNull(board[i]) || board[i] !== color);\n};\n\nconst neighbours = {\n  0: [1, 3, 4],\n  1: [0, 2, 5],\n  2: [1, 3, 4, 6],\n  3: [0, 2, 7],\n  4: [0, 2, 5, 7],\n  5: [1, 4, 6],\n  6: [2, 5, 7],\n  7: [3, 4, 6]\n};\n\nconst isGameEnd = board => {\n  const canUseColor = color => some(range(0, 8), v => isAllowedStep(board, v, color));\n  return every(allColors, color => !canUseColor(color));\n};\n\nconst hasFirstPlayerWon = board => every(board, v => !isNull(v));\n\nconst makeOptimalStepAsFirst = (board) => {\n  const mainDiagonal = shuffle([2, 4]);\n  const otherVertices = shuffle([0, 1, 3, 5, 6, 7]);\n  const vertexToColor = [...mainDiagonal, ...otherVertices].find(v => isNull(board[v]));\n  const colors = allColors.filter(c => isAllowedStep(board, vertexToColor, c));\n  board[vertexToColor] = sample(colors);\n  return board;\n};\n\nconst makeOptimalStepAsSecond = (board) => {\n  const emptyVertices = shuffle(range(0, 8)).filter(v => isNull(board[v]));\n\n  // try to immediately make a vertex uncolorable\n  for (const vertex of emptyVertices) {\n    const missingColors = getMissingColors(board, vertex);\n    if (missingColors.length === 1) {\n      for (const v of getEmptyNeighbours(board, vertex)) {\n        if (isAllowedStep(board, v, missingColors[0])) {\n          board[v] = missingColors[0];\n          return board;\n        }\n      }\n    }\n  }\n\n  // if player does not start on main diagonal, color opposing node with same color\n  const pairs = shuffle([[0, 6], [6, 0], [1, 7], [7, 1], [3, 5], [5, 3]]);\n  for (const p of pairs) {\n    if (!isNull(board[p[0]]) && isAllowedStep(board, p[1], board[p[0]])) {\n      board[p[1]] = board[p[0]];\n      return board;\n    }\n  }\n\n  // make a non-neighboring step if possible\n  for (const vertex of emptyVertices) {\n    const missingColors = getMissingColors(board, vertex);\n    if (missingColors.length === 2) {\n      for (const v of getEmptyNeighbours(board, vertex)) {\n        if (isAllowedStep(board, v, missingColors[0])) {\n          board[v] = missingColors[0];\n          return board;\n        }\n      }\n    }\n  }\n  // every vertex is either banned or has no colored neighbor\n  for (const vertex of emptyVertices) {\n    for (const color of shuffle(allColors)) {\n      if (isAllowedStep(board, vertex, color)) {\n        board[vertex] = color;\n        return board;\n      }\n    }\n  }\n  // if all vertices are banned we should have a game end\n  console.error(\"This state should not happen\");\n};\n\nconst getMissingColors = (board, vertex) => {\n  const nbColors = neighbours[vertex].map(v => board[v]);\n  return difference(allColors, nbColors);\n};\n\nconst getEmptyNeighbours = (board, vertex) => {\n  return neighbours[vertex].filter(i => isNull(board[i]));\n};\n","import { mapActions, mapState } from 'vuex';\nimport GameSidebar from '../../common/game-sidebar/game-sidebar';\nimport { getGameStateAfterMove, isAllowedStep, allColors } from './strategy/strategy';\n\nexport default {\n  name: 'cube-coloring',\n  template: require('./cube-coloring.html'),\n  components: { GameSidebar },\n  computed: {\n    ...mapState(['board', 'shouldPlayerMoveNext']),\n    allColors: () => allColors\n  },\n  data() {\n    return {\n      color: \"\",\n      show: false,\n      x: 0,\n      y: 0\n    };\n  },\n  methods: {\n    ...mapActions(['endPlayerTurn', 'initializeGame']),\n    pick(color) {\n      if (!this.shouldPlayerMoveNext) return;\n      if (this.color === color) {\n        this.show = !this.show;\n      } else {\n        this.show = true;\n        this.color = color;\n      }\n    },\n    drawPickedColor(event) {\n      this.x = event.offsetX;\n      this.y = event.offsetY;\n    },\n    setColor(vertex) {\n      if (!this.shouldPlayerMoveNext) return;\n      if (this.show && isAllowedStep(this.board, vertex, this.color)) {\n        this.board[vertex] = this.color;\n        this.show = false;\n        this.endPlayerTurn(getGameStateAfterMove(this.board));\n      }\n    },\n    resetTurnState() {\n      this.color = \"\";\n      this.show = false;\n    }\n  },\n  created() {\n    this.initializeGame();\n  }\n};\n","import { findIndex, random } from 'lodash-es';\n\nexport const generateNewBoard = () => {\n  const board = [random(0, 6), random(0, 6), random(0, 6)];\n  if (board[1] !== 0 || board[2] !== 0) return board;\n  return generateNewBoard();\n};\n\nexport const isTheLastMoverTheWinner = true;\n\nexport const getGameStateAfterAiMove = (board) => {\n  const oddPiles = [0, 1, 2].filter(i => board[i] % 2 === 1);\n\n  if (oddPiles.length === 3 || oddPiles.length === 0) {\n    board[findIndex(board, i => i > 0)] -= 1;\n  }\n  if (oddPiles.length === 2) {\n    board[oddPiles[1]] -= 1;\n    board[oddPiles[0]] += 1;\n  }\n  if (oddPiles.length === 1) {\n    board[oddPiles[0]] -= 1;\n  }\n  return getGameStateAfterMove(board);\n};\n\nexport const getGameStateAfterMove = (board) => {\n  return { board, isGameEnd: isGameEnd(board) };\n};\n\nconst isGameEnd = (board) => board[0] === 0 && board[1] === 0 && board[2] === 0;\n","import { mapActions, mapState } from 'vuex';\nimport GameSidebar from '../../common/game-sidebar/game-sidebar';\nimport { getGameStateAfterMove } from './strategy/strategy';\n\nexport default {\n  template: require('./coin123.html'),\n  components: { GameSidebar },\n  data: () => ({\n    valueOfRemovedCoin: null,\n    hoveredPile: null\n  }),\n  computed: {\n    ...mapState(['board', 'shouldPlayerMoveNext']),\n    wasCoinAlreadyRemovedInTurn() {\n      return this.valueOfRemovedCoin !== null;\n    },\n    stepDescription() {\n      return this.wasCoinAlreadyRemovedInTurn\n        ? 'Kattints egy mezőre, hogy visszatégy egy olyan pénzérmét'\n        : 'Kattints egy mezőre, hogy elvegyél egy olyan pénzérmét';\n    }\n  },\n  methods: {\n    ...mapActions(['endPlayerTurn', 'initializeGame']),\n    clickPile(coinValue) {\n      if (!this.shouldPlayerMoveNext) return;\n      if (this.isCoinActionInvalid(coinValue)) return;\n\n      if (!this.wasCoinAlreadyRemovedInTurn) {\n        this.valueOfRemovedCoin = coinValue;\n        this.board[coinValue] -= 1;\n        if (coinValue === 0) this.endTurn();\n      } else {\n        this.board[coinValue] += 1;\n        this.endTurn();\n      }\n    },\n    resetTurnState() {\n      this.hoveredPile = null;\n      this.valueOfRemovedCoin = null;\n    },\n    endTurn() {\n      this.endPlayerTurn(getGameStateAfterMove(this.board));\n      this.resetTurnState();\n    },\n    getCoinColor(coinValue) {\n      if (coinValue === 0) return 'bg-yellow-700';\n      if (coinValue === 1) return 'bg-slate-700';\n      return 'bg-yellow-400';\n    },\n    shouldShowCoinToBeRemoved(coinValue) {\n      if (!this.shouldPlayerMoveNext) return false;\n      if (this.wasCoinAlreadyRemovedInTurn) return false;\n      return coinValue === this.hoveredPile && this.board[coinValue] !== 0;\n    },\n    shouldShowCoinToBeAdded(coinValue) {\n      if (!this.wasCoinAlreadyRemovedInTurn) return false;\n      return this.valueOfRemovedCoin > coinValue && coinValue === this.hoveredPile;\n    },\n    isCoinActionInvalid(coinValue) {\n      if (this.wasCoinAlreadyRemovedInTurn) {\n        return this.valueOfRemovedCoin <= coinValue;\n      }\n      return this.board[coinValue] === 0;\n    }\n  },\n  created() {\n    this.initializeGame();\n  }\n};\n","import { findIndex } from 'lodash-es';\n\nexport const generateNewBoard = () => ([3, 5, 7]);\n\nexport const isTheLastMoverTheWinner = true;\n\nexport const getGameStateAfterAiMove = (board) => {\n  const oddPiles = [0, 1, 2].filter(i => board[i] % 2 === 1);\n\n  if (oddPiles.length === 3 || oddPiles.length === 0) {\n    board[findIndex(board, i => i > 0)] -= 1;\n  }\n  if (oddPiles.length === 2) {\n    board[oddPiles[1]] -= 1;\n    board[oddPiles[0]] += 1;\n  }\n  if (oddPiles.length === 1) {\n    board[oddPiles[0]] -= 1;\n  }\n  return getGameStateAfterMove(board);\n};\n\nexport const getGameStateAfterMove = (board) => {\n  return { board, isGameEnd: isGameEnd(board) };\n};\n\nconst isGameEnd = (board) => board[0] === 0 && board[1] === 0 && board[2] === 0;\n","import { mapActions, mapState } from 'vuex';\nimport GameSidebar from '../../common/game-sidebar/game-sidebar';\nimport { getGameStateAfterMove } from './strategy/strategy';\n\nexport default {\n  template: require('./coin357.html'),\n  components: { GameSidebar },\n  data: () => ({\n    valueOfRemovedCoin: null,\n    hoveredPile: null\n  }),\n  computed: {\n    ...mapState(['board', 'shouldPlayerMoveNext']),\n    wasCoinAlreadyRemovedInTurn() {\n      return this.valueOfRemovedCoin !== null;\n    },\n    stepDescription() {\n      return this.wasCoinAlreadyRemovedInTurn\n        ? 'Kattints egy mezőre, hogy visszatégy egy olyan pénzérmét'\n        : 'Kattints egy mezőre, hogy elvegyél egy olyan pénzérmét';\n    }\n  },\n  methods: {\n    ...mapActions(['endPlayerTurn', 'initializeGame']),\n    clickPile(coinValue) {\n      if (!this.shouldPlayerMoveNext) return;\n      if (this.isCoinActionInvalid(coinValue)) return;\n\n      if (!this.wasCoinAlreadyRemovedInTurn) {\n        this.valueOfRemovedCoin = coinValue;\n        this.board[coinValue] -= 1;\n        if (coinValue === 0) this.endTurn();\n      } else {\n        this.board[coinValue] += 1;\n        this.endTurn();\n      }\n    },\n    resetTurnState() {\n      this.hoveredPile = null;\n      this.valueOfRemovedCoin = null;\n    },\n    endTurn() {\n      this.endPlayerTurn(getGameStateAfterMove(this.board));\n      this.resetTurnState();\n    },\n    getCoinColor(coinValue) {\n      if (coinValue === 0) return 'bg-yellow-700';\n      if (coinValue === 1) return 'bg-slate-700';\n      return 'bg-yellow-400';\n    },\n    shouldShowCoinToBeRemoved(coinValue) {\n      if (!this.shouldPlayerMoveNext) return false;\n      if (this.wasCoinAlreadyRemovedInTurn) return false;\n      return coinValue === this.hoveredPile && this.board[coinValue] !== 0;\n    },\n    shouldShowCoinToBeAdded(coinValue) {\n      if (!this.wasCoinAlreadyRemovedInTurn) return false;\n      return this.valueOfRemovedCoin > coinValue && coinValue === this.hoveredPile;\n    },\n    isCoinActionInvalid(coinValue) {\n      if (this.wasCoinAlreadyRemovedInTurn) {\n        return this.valueOfRemovedCoin <= coinValue;\n      }\n      return this.board[coinValue] === 0;\n    }\n  },\n  created() {\n    this.initializeGame();\n  }\n};\n","import { some, difference } from 'lodash-es';\n\n/*\nboard indices topography\n[0, 1, 2,\n 3, 4, 5,\n 6, 7, 8]\n*/\n\nexport const generateEmptyTicTacToeBoard = () => Array(9).fill(null);\n\nexport const hasWinningSubset = (indices) => {\n  const winningIndexSets = [\n    [0, 1, 2], [3, 4, 5], [6, 7, 8],\n    [0, 3, 6], [1, 4, 7], [2, 5, 8],\n    [0, 4, 8], [2, 4, 6]\n  ];\n  const isSubsetOfIndices = s => difference(s, indices).length === 0;\n  return some(winningIndexSets, isSubsetOfIndices);\n};\n","'use strict';\n\nimport { isNull, some, groupBy, range, cloneDeep, sample } from 'lodash-es';\nimport { generateEmptyTicTacToeBoard, hasWinningSubset } from '../../helpers';\n\nexport const generateNewBoard = generateEmptyTicTacToeBoard;\n\nexport const getGameStateAfterAiMove = (board) => {\n  const aiPosition = getOptimalAiPosition(board);\n  board[aiPosition] = getNextColor(board, false);\n  return getGameStateAfterMove(board);\n};\n\nexport const pColor = 'blue';\nexport const aiColor = 'red';\n\nexport const getGameStateAfterMove = (board) => {\n  return { board, isGameEnd: isGameEnd(board) };\n};\n\nexport const isTheLastMoverTheWinner = true;\n\nexport const inPlacingPhase = (board) => board.find(isNull) !== undefined;\n\nconst getOptimalAiPosition = (board) => {\n  if (inPlacingPhase(board)) return getOptimalAiPlacingPosition(board);\n  return getOptimalAiFlippingPosition(board);\n};\n\nconst getOptimalAiPlacingPosition = (board) => {\n  const allowedPlaces = getAllowedPlaces(board, false);\n\n  if (allowedPlaces.length === 9) return(sample([0, 2, 4, 6, 8]));\n\n  const instantWinningPlace = allowedPlaces.find((i) => {\n    const localBoard = cloneDeep(board);\n    localBoard[i] = aiColor;\n    return isGameEnd(localBoard);\n  });\n  if (instantWinningPlace !== undefined) return instantWinningPlace;\n\n  const instantDefendingPlace = allowedPlaces.find((i) => {\n    const localBoard = cloneDeep(board);\n    localBoard[i] = pColor;\n    return isGameEnd(localBoard);\n  });\n  if (instantDefendingPlace !== undefined) return instantDefendingPlace;\n\n  const optimalPlaces = allowedPlaces.filter(i => {\n    const boardCopy = cloneDeep(board);\n    boardCopy[i] = aiColor;\n    return isWinningState(boardCopy, false);\n  });\n\n  if (optimalPlaces.length > 0) return sample(optimalPlaces);\n\n  return sample(allowedPlaces);\n};\n\nconst getOptimalAiFlippingPosition = (board) => {\n  const allowedPlaces = getAllowedPlaces(board, false);\n\n  const optimalPlaces = allowedPlaces.filter(i => {\n    const boardCopy = cloneDeep(board);\n    boardCopy[i] = 'white';\n    return isWinningState(boardCopy, false);\n  });\n\n  // if you can win symmetrically, try to do so (only for beauty)\n  if (optimalPlaces.find(i => i === 4) !== undefined) return 4;\n  if (optimalPlaces.length > 0) return sample(optimalPlaces);\n\n  return sample(allowedPlaces);\n};\n\n// given board *after* your step, are you set up to win the game for sure?\nconst isWinningState = (board, amIPlayer) => {\n  if (isGameEnd(board)) {\n    return true;\n  }\n\n  const allowedPlacesForOther = getAllowedPlaces(board, !amIPlayer);\n  const colorForOther = getNextColor(board, !amIPlayer);\n\n  const optimalPlaceForOther = allowedPlacesForOther.find(i => {\n    const boardCopy = cloneDeep(board);\n    boardCopy[i] = colorForOther;\n    return isWinningState(boardCopy, !amIPlayer);\n  });\n  return optimalPlaceForOther === undefined;\n};\n\nconst getAllowedPlaces = (board, amIPlayer) => {\n  if (inPlacingPhase(board)) {\n    return range(0, 9).filter(i => isNull(board[i]));\n  }\n  const enemyColor = amIPlayer ? aiColor : pColor;\n  return range(0, 9).filter(i => board[i] === enemyColor);\n};\n\nconst getNextColor = (board, amIPlayer) => {\n  if (inPlacingPhase(board)) {\n    return amIPlayer ? pColor : aiColor;\n  }\n  return 'white';\n};\n\nconst isGameEnd = (board) => {\n  const occupiedPlaces = range(0, 9).filter((i) => board[i]);\n  const boardIndicesByPieceColor = groupBy(occupiedPlaces, (i) => board[i]);\n  return some(boardIndicesByPieceColor, hasWinningSubset);\n};\n","import { mapActions, mapState } from 'vuex';\nimport GameSidebar from '../../../common/game-sidebar/game-sidebar';\nimport { getGameStateAfterMove, inPlacingPhase, pColor, aiColor } from './strategy/strategy';\n\nexport default {\n  template: require('./tictactoe.html'),\n  components: { GameSidebar },\n  computed: {\n    ...mapState(['board', 'shouldPlayerMoveNext']),\n    inPlacingPhase() {\n      return inPlacingPhase(this.board);\n    }\n  },\n  methods: {\n    ...mapActions(['endPlayerTurn', 'initializeGame']),\n    clickField(id) {\n      if (!this.isMoveAllowed(id)) return;\n\n      this.board[id] = this.inPlacingPhase ? pColor : 'white';\n      this.endPlayerTurn(getGameStateAfterMove(this.board));\n    },\n    isMoveAllowed(id) {\n      if (!this.shouldPlayerMoveNext) return false;\n      if (this.inPlacingPhase) {\n        return this.board[id] === null;\n      } else {\n        return this.board[id] === aiColor;\n      }\n    },\n    pieceColor(id) {\n      const colorCode = this.board[id];\n      if (colorCode === 'red') return 'bg-red-600';\n      if (colorCode === 'white') return 'bg-white';\n      return 'bg-blue-600';\n    }\n  },\n  created() {\n    this.initializeGame();\n  }\n};\n","'use strict';\n\nimport { isNull, range, sample, cloneDeep } from 'lodash-es';\nimport { generateEmptyTicTacToeBoard, hasWinningSubset } from '../../helpers';\n\nexport const generateNewBoard = generateEmptyTicTacToeBoard;\n\nconst roleColors = ['red', 'blue'];\n\nexport const playerColor = isPlayerTheFirstToMove => isPlayerTheFirstToMove ? roleColors[0] : roleColors[1];\nconst aiColor = isPlayerTheFirstToMove => isPlayerTheFirstToMove ? roleColors[1] : roleColors[0];\n\n\nexport const getGameStateAfterAiMove = (board, isPlayerTheFirstToMove) => {\n  if (board.filter(c => c).length === 0) {\n    // choose two neighboring corners randomly\n    const firstStep = sample([[0, 2], [2, 8], [6, 8], [0, 6]]);\n    board[firstStep[0]] = roleColors[0];\n    board[firstStep[1]] = roleColors[0];\n  } else {\n    board[getOptimalAiPlacingPosition(board, isPlayerTheFirstToMove)] = aiColor(isPlayerTheFirstToMove);\n  }\n  return getGameStateAfterMove(board);\n};\n\nexport const getGameStateAfterMove = (board) => {\n  return { board, isGameEnd: isGameEnd(board), hasFirstPlayerWon: hasFirstPlayerWon(board) };\n};\n\nexport const isTheLastMoverTheWinner = null;\n\nconst hasFirstPlayerWon = (board) => {\n  if (!isGameEnd(board)) return undefined;\n\n  return hasWinningSubsetForPlayer(board, 0) && !hasWinningSubsetForPlayer(board, 1);\n};\n\nconst isGameEnd = (board) => board.filter(c => c).length === 9 || hasWinningSubsetForPlayer(board, 1);\nconst hasWinningSubsetForPlayer = (board, roleIndex) =>\n  hasWinningSubset(range(0, 9).filter(i => board[i] === roleColors[roleIndex]));\n\nexport const getOptimalAiPlacingPosition = (board, isPlayerTheFirstToMove) => {\n  const allowedPlaces = range(0, 9).filter(i => isNull(board[i]));\n\n  const optimalPlaces = allowedPlaces.filter(i => {\n    const boardCopy = cloneDeep(board);\n    boardCopy[i] = aiColor(isPlayerTheFirstToMove);\n    return isWinningState(boardCopy, !isPlayerTheFirstToMove);\n  });\n\n  if (optimalPlaces.length > 0) return sample(optimalPlaces);\n\n  // even if we are gonna lose, try to prolong it\n  const playerPieces = range(0, 9).filter(i => board[i] === playerColor(isPlayerTheFirstToMove));\n  const defendingPlaces = allowedPlaces.filter(i => hasWinningSubset([...playerPieces, i]));\n  if (defendingPlaces.length > 0) return sample(defendingPlaces);\n\n  return sample(allowedPlaces);\n};\n\n// given board *after* your step, are you set up to win the game for sure?\nconst isWinningState = (board, amIFirst) => {\n  if (isGameEnd(board)) {\n    return amIFirst === hasFirstPlayerWon(board);\n  }\n  const allowedPlaces = range(0, 9).filter(i => isNull(board[i]));\n  const optimalPlaceForOther = allowedPlaces.find(i => {\n    const boardCopy = cloneDeep(board);\n    boardCopy[i] = roleColors[amIFirst ? 1 : 0];\n    return isWinningState(boardCopy, !amIFirst);\n  });\n  return optimalPlaceForOther === undefined;\n};\n","import { mapActions, mapState } from 'vuex';\nimport GameSidebar from '../../../common/game-sidebar/game-sidebar';\nimport { getGameStateAfterMove, playerColor } from './strategy/strategy';\n\nexport default {\n  template: require('./tictactoe-doublestart.html'),\n  components: { GameSidebar },\n  computed: {\n    ...mapState(['board', 'shouldPlayerMoveNext', 'isPlayerTheFirstToMove']),\n    isDuringFirstMove() {\n      return this.board.filter(c => c).length <= 1;\n    }\n  },\n  methods: {\n    ...mapActions(['endPlayerTurn', 'initializeGame']),\n    clickField(id) {\n      if (!this.shouldPlayerMoveNext) return;\n      if (this.board[id]) return;\n\n      this.board[id] = playerColor(this.isPlayerTheFirstToMove);\n      if (this.isDuringFirstMove) return;\n      this.endPlayerTurn(getGameStateAfterMove(this.board));\n    },\n    pieceColor(id) {\n      const colorCode = this.board[id];\n      if (colorCode === 'red') return 'bg-red-600';\n      return 'bg-blue-600';\n    }\n  },\n  created() {\n    this.initializeGame();\n  }\n};\n","'use strict';\n\nimport { isNull, some, range, groupBy, sample, cloneDeep } from 'lodash-es';\nimport { hasWinningSubset, generateEmptyTicTacToeBoard } from '../../helpers';\n\nexport const generateNewBoard = generateEmptyTicTacToeBoard;\n\nconst roleColors = ['red', 'blue'];\n\nexport const playerColor = isPlayerTheFirstToMove => isPlayerTheFirstToMove ? roleColors[0] : roleColors[1];\nconst aiColor = isPlayerTheFirstToMove => isPlayerTheFirstToMove ? roleColors[1] : roleColors[0];\n\nexport const getGameStateAfterAiMove = (board, isPlayerTheFirstToMove) => {\n  board[getOptimalAiPlacingPosition(board, isPlayerTheFirstToMove)] = aiColor(isPlayerTheFirstToMove);\n  return getGameStateAfterMove(board);\n};\n\nexport const getGameStateAfterMove = (board) => {\n  return { board, isGameEnd: isGameEnd(board), hasFirstPlayerWon: hasFirstPlayerWon(board) };\n};\n\nexport const isTheLastMoverTheWinner = null;\n\nconst isGameEnd = (board) => {\n  if (board.filter(c => c).length === 9) return true;\n  const occupiedPlaces = range(0, 9).filter((i) => board[i]);\n  const boardIndicesByPieceColor = groupBy(occupiedPlaces, (i) => board[i]);\n  return some(boardIndicesByPieceColor, hasWinningSubset);\n};\n\nconst hasFirstPlayerWon = (board) => {\n  if (!isGameEnd(board)) return undefined;\n  if (board.filter(c => c).length === 9) {\n    return !hasWinningSubset(range(0, 9).filter(i => board[i] === roleColors[0]));\n  }\n  return board.filter(c => c).length % 2 === 0;\n};\n\nexport const getOptimalAiPlacingPosition = (board, isPlayerTheFirstToMove) => {\n  const allowedPlaces = range(0, 9).filter(i => isNull(board[i]));\n\n  // start with middle place as a first step\n  if (allowedPlaces.length === 9) return 4;\n\n  // as a first player, proceed with placing at an empty place symmetrical to player's piece\n  if (!isPlayerTheFirstToMove) {\n    // pairs symmetric to middle place\n    const pairs = [[0, 8], [1, 7], [2, 6], [3, 5], [5, 3], [6, 2],  [7, 1] [8, 0]];\n    for (const p of pairs) {\n      // first is occupied, second is not from given pair\n      if (!isNull(board[p[0]]) && isNull(board[p[1]])) {\n        return p[1];\n      }\n    }\n  }\n\n  // as a second player still try to win if first player may not play optimally\n  const optimalPlaces = allowedPlaces.filter(i => {\n    const boardCopy = cloneDeep(board);\n    boardCopy[i] = aiColor(isPlayerTheFirstToMove);\n    return isWinningState(boardCopy, !isPlayerTheFirstToMove);\n  });\n\n  if (optimalPlaces.length > 0) return sample(optimalPlaces);\n\n  // even if we are gonna lose, try to prolong it\n  const aiPieces = range(0, 9).filter(i => board[i] === aiColor(isPlayerTheFirstToMove));\n  const notInstantLosingPlaces = allowedPlaces.filter(i => !hasWinningSubset([...aiPieces, i]));\n  if (notInstantLosingPlaces.length > 0) return sample(notInstantLosingPlaces);\n\n  return sample(allowedPlaces);\n};\n\n// given board *after* your step, are you set up to win the game for sure?\nconst isWinningState = (board, amIFirst) => {\n  if (isGameEnd(board)) {\n    return amIFirst === hasFirstPlayerWon(board);\n  }\n  const allowedPlaces = range(0, 9).filter(i => isNull(board[i]));\n  const optimalPlaceForOther = allowedPlaces.find(i => {\n    const boardCopy = cloneDeep(board);\n    boardCopy[i] = roleColors[amIFirst ? 1 : 0];\n    return isWinningState(boardCopy, !amIFirst);\n  });\n  return optimalPlaceForOther === undefined;\n};\n","import { mapActions, mapState } from 'vuex';\nimport GameSidebar from '../../../common/game-sidebar/game-sidebar';\nimport { getGameStateAfterMove, playerColor } from './strategy/strategy';\n\nexport default {\n  template: require('./anti-tictactoe.html'),\n  components: { GameSidebar },\n  computed: {\n    ...mapState(['board', 'shouldPlayerMoveNext', 'isPlayerTheFirstToMove'])\n  },\n  methods: {\n    ...mapActions(['endPlayerTurn', 'initializeGame']),\n    clickField(id) {\n      if (!this.shouldPlayerMoveNext) return;\n      if (this.board[id]) return;\n\n      this.board[id] = playerColor(this.isPlayerTheFirstToMove);\n      this.endPlayerTurn(getGameStateAfterMove(this.board));\n    },\n    pieceColor(id) {\n      const colorCode = this.board[id];\n      if (colorCode === 'red') return 'bg-red-600';\n      return 'bg-blue-600';\n    }\n  },\n  created() {\n    this.initializeGame();\n  }\n};\n","export default {\n  template: require('./chess-rook-svg.html')\n};\n","'use strict';\n\nimport { last, range, random } from 'lodash-es';\n\nexport const generateNewBoard = () => {\n  const board = range(0, 8).map(() => range(0, 8).map(() => null));\n  board[0][0] = 'rook';\n  return {\n    chessBoard: board,\n    rookPosition: { row: 0, col: 0 }\n  };\n};\n\nexport const isTheLastMoverTheWinner = true;\n\nexport const getGameStateAfterAiMove = (board) => {\n  const aiMove = getOptimalAiMove(board);\n  return getGameStateAfterMove(board, aiMove);\n};\n\nexport const getGameStateAfterMove = (board, { row, col }) => {\n  markVisitedFields(board, board.rookPosition, { row, col });\n\n  board.chessBoard[row][col] = 'rook';\n  board.rookPosition = { row, col };\n\n  return { board, isGameEnd: getAllowedMoves(board).length === 0 };\n};\n\nconst getOptimalAiMove = (board) => {\n  const { row, col } = board.rookPosition;\n\n  const allowedHorizontalMoves = [];\n  let i = 1;\n  while (col - i >= 0 && board.chessBoard[row ][col - i] === null) {\n    allowedHorizontalMoves.push({ row, col: col - i });\n    i += 1;\n  }\n  i = 1;\n  while (col + i <= 7 && board.chessBoard[row][col + i] === null) {\n    allowedHorizontalMoves.push({ row, col: col + i });\n    i += 1;\n  }\n\n  const allowedVerticalMoves = [];\n  i = 1;\n  while (row - i >= 0 && board.chessBoard[(row - i)][col] === null) {\n    allowedVerticalMoves.push({ row: row - i, col });\n    i += 1;\n  }\n  i = 1;\n  while (row + i <= 7 && board.chessBoard[(row + i)][col] === null) {\n    allowedVerticalMoves.push({ row: row + i, col });\n    i += 1;\n  }\n\n  if (allowedHorizontalMoves.length < allowedVerticalMoves.length) {\n    return last(allowedVerticalMoves);\n  } else if (allowedHorizontalMoves.length > allowedVerticalMoves.length) {\n    return last(allowedHorizontalMoves);\n  }\n  if (random(0, 1) === 1) {\n    return last(allowedHorizontalMoves);\n  } else {\n    return last(allowedVerticalMoves);\n  }\n};\n\nexport const getAllowedMoves = (board) => {\n  const { row, col } = board.rookPosition;\n\n  const allowedMoves = [];\n  let i = 1;\n  while (row - i >= 0 && board.chessBoard[(row - i)][col] === null) {\n    allowedMoves.push({ row: row - i, col });\n    i += 1;\n  }\n  i = 1;\n  while (row + i <= 7 && board.chessBoard[(row + i)][col] === null) {\n    allowedMoves.push({ row: row + i, col });\n    i += 1;\n  }\n  i = 1;\n  while (col - i >= 0 && board.chessBoard[row][col - i] === null) {\n    allowedMoves.push({ row, col: col - i });\n    i += 1;\n  }\n  i = 1;\n  while (col + i <= 7 && board.chessBoard[row][col + i] === null) {\n    allowedMoves.push({ row, col: col + i });\n    i += 1;\n  }\n  return allowedMoves;\n};\n\nconst markVisitedFields = (board, rookPosition, newRookPosition) => {\n  if (rookPosition.row === newRookPosition.row) {\n    range(rookPosition.col, newRookPosition.col).forEach(col => {\n      board.chessBoard[rookPosition.row][col] = 'visited';\n    });\n  }\n  if (rookPosition.col === newRookPosition.col) {\n    range(rookPosition.row, newRookPosition.row).forEach(row => {\n      board.chessBoard[row][rookPosition.col] = 'visited';\n    });\n  }\n};\n","import { mapActions, mapState } from 'vuex';\nimport GameSidebar from '../../common/game-sidebar/game-sidebar';\nimport ChessRookSvg from './chess-rook-svg/chess-rook-svg';\nimport { getGameStateAfterMove, getAllowedMoves } from './strategy/strategy';\nimport { some, isEqual } from 'lodash-es';\n\nexport default {\n  template: require('./chess-rook.html'),\n  components: { GameSidebar, ChessRookSvg },\n  computed: {\n    ...mapState(['board', 'shouldPlayerMoveNext'])\n  },\n  methods: {\n    ...mapActions(['endPlayerTurn', 'initializeGame']),\n    clickField(field) {\n      if (!this.isAllowedMove(field)) return;\n\n      this.endPlayerTurn(getGameStateAfterMove(this.board, field));\n    },\n    isAllowedMove(targetField) {\n      if (!this.shouldPlayerMoveNext) return false;\n      return some(getAllowedMoves(this.board), field => isEqual(field, targetField));\n    }\n  },\n  created() {\n    this.initializeGame();\n  }\n};\n","export default {\n  template: require('./chess-bishop-svg.html')\n};\n","'use strict';\n\nimport { flatMap, range, sample, cloneDeep, random, shuffle } from 'lodash-es';\n\nconst HORIZONTAL = \"h\";\nconst VERTICAL = \"v\";\nlet axis = null;\n\nexport const generateNewBoard = () => {\n  axis = null;\n  return range(0, 8).map(() => range(0, 8).map(() => null));\n};\n\nconst boardIndices = flatMap(range(0, 8), row => range(0, 8).map(col => ({ row, col })));\n\nexport const BISHOP = 1;\nexport const FORBIDDEN = 2;\n\nexport const isTheLastMoverTheWinner = true;\n\nexport const getGameStateAfterAiMove = (board) => {\n  const aiMove = getOptimalAiMove(board);\n  return getGameStateAfterMove(board, aiMove);\n};\n\nexport const getGameStateAfterMove = (board, { row, col }) => {\n  markForbiddenFields(board, { row, col });\n  board[row][col] = BISHOP;\n\n  return { board, isGameEnd: getAllowedMoves(board).length === 0 };\n};\n\nconst getOptimalAiMove = (board) => {\n  const allowedHMirrorMoves = boardIndices.filter(\n    ({ row, col }) => board[row][col] === null && board[row][7 - col] === BISHOP\n  );\n  const allowedVMirrorMoves = boardIndices.filter(\n    ({ row, col }) => board[row][col] === null && board[7 - row][col] === BISHOP\n  );\n\n  const bishopCount = boardIndices.filter(({ row, col }) => board[row][col] === BISHOP).length;\n  // we are playing according to optimal winning strategy\n  // as a first step, choose a mirror axis randomly\n  if (bishopCount === 1) {\n    axis = random(0, 1) ? HORIZONTAL : VERTICAL;\n  }\n  // identify player's axis if they are playing optimally in their first step\n  if (bishopCount === 2) {\n    if (allowedHMirrorMoves.length === 0) {\n      axis = HORIZONTAL;\n    }\n    if (allowedVMirrorMoves.length === 0) {\n      axis = VERTICAL;\n    }\n  }\n\n  if (axis === HORIZONTAL && allowedHMirrorMoves.length === 1) {\n    return allowedHMirrorMoves[0];\n  }\n  if (axis === VERTICAL && allowedVMirrorMoves.length === 1) {\n    return allowedVMirrorMoves[0];\n  }\n\n  const allowedMoves = getAllowedMoves(board);\n\n  // try to win from bad position if player does not play optimally\n  // following optimal strategy at the second step seems too slow\n  if (bishopCount >= 4) {\n    // sample + find has the same effect as filter + sample: find a random\n    // from the optimal moves\n    const optimalPlace = shuffle(allowedMoves).find(({ row, col }) => {\n      const boardCopy = cloneDeep(board);\n      markForbiddenFields(boardCopy, { row, col });\n      boardCopy[row][col] = BISHOP;\n      return isWinningState(boardCopy, false);\n    });\n\n\n    if (optimalPlace !== undefined) {\n      return optimalPlace;\n    }\n  }\n  return sample(allowedMoves);\n};\n\nexport const getAllowedMoves = (board) => {\n  return boardIndices.filter(({ row, col }) => board[row][col] === null);\n};\n\nconst markForbiddenFields = (board, { row, col }) => {\n  range(0, 8).forEach(i => {\n    if (row - i >= 0 && col - i >= 0) {\n      board[(row - i)][col - i] = FORBIDDEN;\n    }\n    if (row + i <= 7 && col + i <= 7) {\n      board[(row + i)][col + i] = FORBIDDEN;\n    }\n    if (row + i <= 7 && col - i >= 0) {\n      board[(row + i)][col - i] = FORBIDDEN;\n    }\n    if (row - i >= 0 && col + i <= 7) {\n      board[(row - i)][col + i] = FORBIDDEN;\n    }\n  });\n};\n\n// given board *after* your step, are you set up to win the game for sure?\nconst isWinningState = (board, amIPlayer) => {\n  if (getAllowedMoves(board).length === 0) {\n    return true;\n  }\n\n  const allowedPlacesForOther = getAllowedMoves(board);\n\n  const optimalPlaceForOther = allowedPlacesForOther.find(({ row, col }) => {\n    const boardCopy = cloneDeep(board);\n    markForbiddenFields(boardCopy, { row, col });\n    boardCopy[row][col] = BISHOP;\n    return isWinningState(boardCopy, !amIPlayer);\n  });\n  return optimalPlaceForOther === undefined;\n};\n","import { isEqual, some } from 'lodash-es';\nimport { mapActions, mapState } from 'vuex';\nimport GameSidebar from '../../common/game-sidebar/game-sidebar';\nimport ChessBishopSvg from './chess-bishop-svg/chess-bishop-svg';\nimport { getGameStateAfterMove, getAllowedMoves, BISHOP, FORBIDDEN } from './strategy/strategy';\n\nexport default {\n  template: require('./chess-bishops.html'),\n  components: { GameSidebar, ChessBishopSvg },\n  data: () => ({\n    hoveredField: null\n  }),\n  computed: {\n    ...mapState(['board', 'shouldPlayerMoveNext'])\n  },\n  methods: {\n    ...mapActions(['endPlayerTurn', 'initializeGame']),\n    clickField(field) {\n      if (!this.isMoveAllowed(field)) return;\n\n      this.endPlayerTurn(getGameStateAfterMove(this.board, field));\n    },\n    isPotentialNextStep(field) {\n      if (!this.isMoveAllowed(field)) return false;\n      if (!this.hoveredField) return false;\n      return isEqual(this.hoveredField, field);\n    },\n    isMoveAllowed(targetField) {\n      if (!this.shouldPlayerMoveNext) return false;\n      return some(getAllowedMoves(this.board), field => isEqual(field, targetField));\n    },\n    isForbidden({ row, col }) {\n      return this.board[row][col] === FORBIDDEN;\n    },\n    isBishop({ row, col }) {\n      return this.board[row][col] === BISHOP;\n    },\n    wouldBeForbidden({ row, col }) {\n      if (!this.shouldPlayerMoveNext) return false;\n      if (!this.hoveredField) return false;\n      if (!this.isMoveAllowed(this.hoveredField)) return false;\n      if (!this.isMoveAllowed({ row, col })) return false;\n      if (this.isPotentialNextStep({ row, col })) return false;\n      return Math.abs(row - this.hoveredField.row) === Math.abs(col - this.hoveredField.col);\n    }\n  },\n  created() {\n    this.initializeGame();\n  }\n};\n","import Demonstration from './demonstration/demonstration';\nimport * as demonstrationStrategy from './demonstration/strategy/strategy';\nimport HunyadiAndTheJanissaries from './hunyadi-and-the-janissaries/hunyadi-and-the-janissaries';\nimport * as hunyadiAndTheJanissariesStrategy from './hunyadi-and-the-janissaries/strategy/strategy';\nimport TwoTimesTwo from './two-times-two/two-times-two';\nimport * as twoTimesTwoStrategy from './two-times-two/strategy/strategy';\nimport FiveSquares from './five-squares/five-squares';\nimport * as fiveSquaresStrategy from './five-squares/strategy/strategy';\nimport SuperstitiousCounting from './superstitious-counting/superstitious-counting';\nimport * as superstitiousCountingStrategy from './superstitious-counting/strategy/strategy';\nimport PileSplitter from './pile-splitting-games/pile-splitter/pile-splitter';\nimport * as pileSplitterStrategy from './pile-splitting-games/pile-splitter/strategy/strategy';\nimport PileSplitter3 from './pile-splitting-games/pile-splitter-3/pile-splitter-3';\nimport * as pileSplitter3Strategy from './pile-splitting-games/pile-splitter-3/strategy/strategy';\nimport PileSplitter4 from './pile-splitting-games/pile-splitter-4/pile-splitter-4';\nimport * as pileSplitter4Strategy from './pile-splitting-games/pile-splitter-4/strategy/strategy';\nimport CubeColoring from './cube-coloring/cube-coloring';\nimport * as cubeColoringStrategy from './cube-coloring/strategy/strategy';\nimport Coin123 from './coin123/coin123';\nimport * as coin123Strategy from './coin123/strategy/strategy';\nimport Coin357 from './coin357/coin357';\nimport * as coin357Strategy from './coin357/strategy/strategy';\nimport TicTacToe from './tictactoe-alikes/tictactoe/tictactoe';\nimport * as ticTacToeStrategy from './tictactoe-alikes/tictactoe/strategy/strategy';\nimport TicTacToeDoubleStart from './tictactoe-alikes/tictactoe-doublestart/tictactoe-doublestart';\nimport * as ticTacToeDoubleStartStrategy from './tictactoe-alikes/tictactoe-doublestart/strategy/strategy';\nimport AntiTicTacToe from './tictactoe-alikes/anti-tictactoe/anti-tictactoe';\nimport * as antiTicTacToeStrategy from './tictactoe-alikes/anti-tictactoe/strategy/strategy';\nimport ChessRook from './chess-rook/chess-rook';\nimport * as chessRookStrategy from './chess-rook/strategy/strategy';\nimport ChessBishops from './chess-bishops/chess-bishops';\nimport * as chessBishopsStrategy from './chess-bishops/strategy/strategy';\n\n\nexport const gameComponents = {\n  Demonstration,\n  HunyadiAndTheJanissaries,\n  TwoTimesTwo,\n  FiveSquares,\n  SuperstitiousCounting,\n  PileSplitter,\n  PileSplitter3,\n  PileSplitter4,\n  CubeColoring,\n  Coin123,\n  Coin357,\n  TicTacToe,\n  TicTacToeDoubleStart,\n  AntiTicTacToe,\n  ChessRook,\n  ChessBishops\n};\n\nexport const gameList = {\n  ChessBishops: {\n    year: 1,\n    round: 'döntő',\n    category: 'B',\n    component: 'ChessBishops',\n    name: 'Sakktáblán futók',\n    strategy: chessBishopsStrategy\n  },\n  ChessRook: {\n    year: 1,\n    round: 'döntő',\n    category: 'C',\n    component: 'ChessRook',\n    name: 'Sakktáblán egy bástya',\n    strategy: chessRookStrategy\n  },\n  HunyadiAndTheJanissaries: {\n    year: 6,\n    round: 'döntő',\n    category: 'D',\n    component: 'HunyadiAndTheJanissaries',\n    name: 'Hunyadi és a janicsárok',\n    strategy: hunyadiAndTheJanissariesStrategy\n  },\n  PileSplitter: {\n    year: 8,\n    round: 'döntő',\n    category: 'A',\n    component: 'PileSplitter',\n    name: 'Kupac kettéosztó',\n    strategy: pileSplitterStrategy\n  },\n  PileSplitter3: {\n    year: 8,\n    round: 'döntő',\n    category: 'B',\n    name: 'Kupac kettéosztó 3 kupaccal',\n    component: 'PileSplitter3',\n    strategy: pileSplitter3Strategy\n  },\n  Demonstration: {\n    name: 'Demonstráló játék',\n    component: 'Demonstration',\n    strategy: demonstrationStrategy,\n    isHiddenFromOverview: true\n  },\n  TicTacToeDoubleStart: {\n    year: 12,\n    round: 'döntő',\n    category: 'A',\n    name: 'Duplán kezdő 3x3 amőba',\n    component: 'TicTacToeDoubleStart',\n    strategy: ticTacToeDoubleStartStrategy\n  },\n  AntiTicTacToe: {\n    year: 12,\n    round: 'döntő',\n    category: 'B',\n    name: '3x3 Anti-amőba',\n    component: 'AntiTicTacToe',\n    strategy: antiTicTacToeStrategy\n  },\n  TwoTimesTwo: {\n    year: 13,\n    round: 'döntő',\n    category: 'A',\n    name: '2x2-es játék',\n    component: 'TwoTimesTwo',\n    strategy: twoTimesTwoStrategy\n  },\n  FiveSquares: {\n    year: 13,\n    round: 'döntő',\n    category: 'B',\n    name: '5 mezős játék',\n    component: 'FiveSquares',\n    strategy: fiveSquaresStrategy\n  },\n  TicTacToe: {\n    year: 13,\n    round: 'döntő',\n    category: 'C',\n    name: 'Átszínezős Tic Tac Toe',\n    component: 'TicTacToe',\n    strategy: ticTacToeStrategy\n  },\n  SuperstitiousCounting: {\n    year: 13,\n    round: 'döntő',\n    category: 'D,E',\n    name: 'Babonás számoló',\n    component: 'SuperstitiousCounting',\n    strategy: superstitiousCountingStrategy\n  },\n  PileSplitter4: {\n    year: 13,\n    round: 'döntő',\n    category: 'E+',\n    name: 'Kupac kettéosztó 4 kupaccal',\n    component: 'PileSplitter4',\n    strategy: pileSplitter4Strategy\n  },\n  CubeColoring: {\n    year: 15,\n    round: 'döntő',\n    category: 'C',\n    name: 'Kockaszínezés',\n    component: 'CubeColoring',\n    strategy: cubeColoringStrategy\n  },\n  Coin357: {\n    year: 15,\n    round: 'döntő',\n    category: 'A',\n    name: '3 db 1, 5 db 2 és 7 db 3 pengős',\n    component: 'Coin357',\n    strategy: coin357Strategy\n  },\n  Coin123: {\n    year: 15,\n    round: 'döntő',\n    category: 'B',\n    name: '3, 2, 1 érmék',\n    component: 'Coin123',\n    strategy: coin123Strategy\n  }\n};\n","export default {\n  template: require('./page-not-found.html')\n};\n","import { mapMutations, mapState } from 'vuex';\nimport { gameComponents } from '../games/games';\nimport PageNotFound from '../page-not-found/page-not-found';\n\nexport default {\n  template: require('./strategy-game.html'),\n  components: {\n    ...gameComponents,\n    PageNotFound\n  },\n  props: {\n    gameId: String\n  },\n  computed: {\n    ...mapState(['gameDefinition'])\n  },\n  methods: {\n    ...mapMutations(['setGameDefinition', 'setGameStatus']),\n    goBackToOverview() {\n      this.$router.push('/');\n    },\n    setGameBasedOnRoute() {\n      this.setGameDefinition({ gameId: this.gameId });\n    }\n  },\n  mounted() {\n    this.setGameBasedOnRoute();\n  },\n  watch: {\n    gameId() {\n      this.setGameBasedOnRoute();\n    }\n  }\n};\n","import { mapMutations } from 'vuex';\nimport { gameList } from '../games/games';\n\nexport default {\n  template: require('./overview.html'),\n  data: () => ({\n    gamesToShow: Object.values(gameList).filter((game) => !game.isHiddenFromOverview)\n  }),\n  methods: {\n    ...mapMutations(['setGameDefinition', 'setGameStatus']),\n    goToGamePage(gameId) {\n      this.$router.push(`/game/${gameId}`);\n    }\n  },\n  mounted() {\n    this.setGameDefinition({ gameId: null });\n    this.setGameStatus(null);\n  }\n};\n","import Game from '../strategy-game/strategy-game';\nimport Overview from '../overview/overview';\n\nexport default {\n  template: require('./app.html'),\n  components: {\n    Game,\n    Overview\n  },\n  async errorCaptured() {\n    window.alert('An unexpected error happened, it is our fault, not yours! Try refreshing the page.');\n  }\n};\n","import { createStore } from 'vuex';\nimport { gameList } from '../components/games/games';\n\nexport default () => createStore({\n  state: {\n    gameDefinition: null,\n    board: null,\n    gameStatus: null,\n    isPlayerTheFirstToMove: null,\n    shouldPlayerMoveNext: null,\n    isPlayerWinner: null,\n    enemyMoveTimeoutHandle: null,\n    isEnemyMoveInProgress: null\n  },\n  getters: {\n    isGameInProgress: (state) => state.gameStatus === 'inProgress',\n    isGameReadyToStart: (state) => state.gameStatus === 'readyToStart',\n    isGameFinished: (state) => state.gameStatus === 'finished',\n    isEnemyMoveInProgress: (state) => state.isEnemyMoveInProgress && state.enemyMoveTimeoutHandle !== null,\n    ctaText: (state, getters) => {\n      if (getters.isGameInProgress) {\n        return state.shouldPlayerMoveNext ? 'Te jössz.' : 'Mi jövünk.';\n      } else if (getters.isGameFinished) {\n        return state.isPlayerWinner ? 'Nyertél. Gratulálunk! :)' : 'Sajnos, most nem nyertél, de ne add fel.';\n      } else { // ready to start\n        return 'A gombra kattintva tudod elindítani a játékot.';\n      }\n    }\n  },\n  mutations: {\n    setGameDefinition(state, { gameId }) {\n      state.gameDefinition = gameList[gameId] || null;\n    },\n    setGameStatus(state, status) {\n      state.gameStatus = status;\n    },\n    setBoard(state, board) {\n      state.board = board;\n    }\n  },\n  actions: {\n    initializeGame({ state, commit }) {\n      clearTimeout(state.enemyMoveTimeoutHandle);\n      state.isEnemyMoveInProgress = false;\n      state.shouldPlayerMoveNext = null;\n      state.isPlayerWinner = null;\n      state.isPlayerTheFirstToMove = null;\n\n      state.board = state.gameDefinition.strategy.generateNewBoard();\n      commit('setGameStatus', 'readyToStart');\n    },\n    startGameWithRoleSelection: ({ state, dispatch }, { isFirst = true }) => {\n      state.isPlayerTheFirstToMove = isFirst;\n      state.shouldPlayerMoveNext = isFirst;\n      state.gameStatus = 'inProgress';\n      if (!isFirst) dispatch('makeAiMove');\n    },\n    endPlayerTurn: ({ dispatch }, { board, isGameEnd, hasFirstPlayerWon }) => {\n      dispatch('endTurn', { board, isGameEnd, hasFirstPlayerWon });\n      if (!isGameEnd) {\n        dispatch('makeAiMove');\n      }\n    },\n    makeAiMove: async ({ state, dispatch }) => {\n      state.isEnemyMoveInProgress = true;\n      const time = Math.floor(Math.random() * 750 + 750);\n      state.enemyMoveTimeoutHandle = setTimeout(() => {\n        dispatch('endTurn', state.gameDefinition.strategy.getGameStateAfterAiMove(state.board, state.isPlayerTheFirstToMove));\n        state.isEnemyMoveInProgress = false;\n      }, time);\n    },\n    endTurn({ state, dispatch }, { board, isGameEnd, hasFirstPlayerWon }) {\n      state.board = board;\n      state.shouldPlayerMoveNext = !state.shouldPlayerMoveNext;\n      if (isGameEnd) {\n        const isPlayerWinner = state.gameDefinition.strategy.isTheLastMoverTheWinner === null\n          ? state.isPlayerTheFirstToMove === hasFirstPlayerWon\n          : state.gameDefinition.strategy.isTheLastMoverTheWinner === !state.shouldPlayerMoveNext;\n        dispatch('endGame', { isPlayerWinner });\n      }\n    },\n    endGame({ state }, { isPlayerWinner }) {\n      state.isPlayerWinner = isPlayerWinner;\n      clearTimeout(state.enemyMoveTimeoutHandle);\n      state.gameStatus = 'finished';\n      state.shouldPlayerMoveNext = null;\n    }\n  }\n});\n","import { createRouter, createWebHashHistory } from 'vue-router';\nimport Overview from './components/overview/overview';\nimport StrategyGame from './components/strategy-game/strategy-game';\nimport PageNotFound from './components/page-not-found/page-not-found';\n\nconst routes = [\n  { path: '/', component: Overview },\n  { path: '/game/:gameId/', component: StrategyGame, props: true },\n  { path: '/:path(.*)*', component: PageNotFound }\n];\n\nexport default () => createRouter({\n  history: createWebHashHistory(),\n  routes\n});\n","import { createApp } from 'vue';\nimport App from '@/components/app/app';\nimport createStore from './store/store';\nimport createRouter from './router';\nimport '@/assets/css/style.css';\n\nconst app = createApp(App);\napp.use(createStore());\napp.use(createRouter());\n\napp.mount('#app');\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","var deferred = [];\n__webpack_require__.O = function(result, chunkIds, fn, priority) {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar chunkIds = deferred[i][0];\n\t\tvar fn = deferred[i][1];\n\t\tvar priority = deferred[i][2];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every(function(key) { return __webpack_require__.O[key](chunkIds[j]); })) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","// define __esModule on exports\n__webpack_require__.r = function(exports) {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.p = \"/durer-jatekok/\";","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t143: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = function(chunkId) { return installedChunks[chunkId] === 0; };\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = function(parentChunkLoadingFunction, data) {\n\tvar chunkIds = data[0];\n\tvar moreModules = data[1];\n\tvar runtime = data[2];\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some(function(id) { return installedChunks[id] !== 0; })) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkdurer_jatekok\"] = self[\"webpackChunkdurer_jatekok\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [998], function() { return __webpack_require__(2782); })\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["code","module","exports","___HTML_LOADER_GET_SOURCE_FROM_IMPORT___","___HTML_LOADER_IMPORT_0___","___HTML_LOADER_REPLACEMENT_0___","template","require","computed","mapGetters","name","props","stepDescription","String","components","EnemyLoader","mapState","methods","mapActions","restartGame","this","$emit","initializeGame","created","GameSidebar","generateNewBoard","getGameStateAfterAiMove","board","isGameEnd","isTheLastMoverTheWinner","isPlayerTheFirstToMove","optimalGroupToKill","getOptimalGroupToKill","getGameStateAfterKillingGroup","colorBoardOptimally","rowCount","i","row","push","random","j","splice","group","hasFirstPlayerWon","length","remainingSoldiersInRow","filter","soldier","flatten","groupScores","blue","red","firstColor","secondColor","nextGroup","SoldierSvg","data","hoveredPiece","isPlayerSultan","state","shouldPlayerMoveNext","groupOfHoveredPiece","rowIndex","pieceIndex","clickOnSoldier","toggleGroup","killGroup","showToBeKilled","finalizeSoldierGrouping","endPlayerTurn","resetTurnState","tileIndex","getOptimalTileIndex","getGameStateAfterMove","boardForStep","cloneDeep","sum","isEqual","sort","pieces","stack","ret","board2","placePiece","Array","fill","x","tileIndices","getOptimalTileIndices","findSquare","findSquares","alert","n","k","i1","i2","oneMoveDone","getAiStep","current","target","restricted","step","numberAfterStep","randomStep","attemptStep","generateRandomEvenBetween","low","high","Math","ceil","floor","pileId","pieceId","newBoard","randomPileIndex","PileIndexToSplit","getOptimalDivision","pieceCountInPile","clickPiece","toBeLeft","isBannedHover","toBeRemoved","currentChoiceDescription","isGameFinished","isGameReadyToStart","y","max","min","removedPileId","splitPileId","getBoardAfterAiStep","start","map","first","second","move","firstPile","rowColor","isGameInProgress","pieceClickNotAllowed","odds","p","notSinglePileIndices","range","sample","evenPileIndex","find","evenPileIndices","oddPile","modifiedBoard","allColors","makeOptimalStepAsSecond","makeOptimalStepAsFirst","isAllowedStep","vertex","color","isNull","every","neighbours","canUseColor","some","v","mainDiagonal","shuffle","otherVertices","vertexToColor","colors","c","emptyVertices","missingColors","getMissingColors","getEmptyNeighbours","pairs","console","error","nbColors","difference","show","pick","drawPickedColor","event","offsetX","offsetY","setColor","oddPiles","findIndex","valueOfRemovedCoin","hoveredPile","wasCoinAlreadyRemovedInTurn","clickPile","coinValue","isCoinActionInvalid","endTurn","getCoinColor","shouldShowCoinToBeRemoved","shouldShowCoinToBeAdded","generateEmptyTicTacToeBoard","hasWinningSubset","indices","winningIndexSets","isSubsetOfIndices","s","aiPosition","getOptimalAiPosition","getNextColor","pColor","aiColor","inPlacingPhase","undefined","getOptimalAiPlacingPosition","getOptimalAiFlippingPosition","allowedPlaces","getAllowedPlaces","instantWinningPlace","localBoard","instantDefendingPlace","optimalPlaces","boardCopy","isWinningState","amIPlayer","allowedPlacesForOther","colorForOther","optimalPlaceForOther","enemyColor","occupiedPlaces","boardIndicesByPieceColor","groupBy","clickField","id","isMoveAllowed","pieceColor","colorCode","roleColors","playerColor","firstStep","hasWinningSubsetForPlayer","roleIndex","playerPieces","defendingPlaces","amIFirst","isDuringFirstMove","aiPieces","notInstantLosingPlaces","chessBoard","rookPosition","col","aiMove","getOptimalAiMove","markVisitedFields","getAllowedMoves","allowedHorizontalMoves","allowedVerticalMoves","last","allowedMoves","newRookPosition","forEach","ChessRookSvg","field","isAllowedMove","targetField","HORIZONTAL","VERTICAL","axis","boardIndices","flatMap","BISHOP","FORBIDDEN","markForbiddenFields","allowedHMirrorMoves","allowedVMirrorMoves","bishopCount","optimalPlace","ChessBishopSvg","hoveredField","isPotentialNextStep","isForbidden","isBishop","wouldBeForbidden","abs","gameComponents","Demonstration","HunyadiAndTheJanissaries","TwoTimesTwo","FiveSquares","SuperstitiousCounting","PileSplitter","PileSplitter3","PileSplitter4","CubeColoring","Coin123","Coin357","TicTacToe","TicTacToeDoubleStart","AntiTicTacToe","ChessRook","ChessBishops","gameList","year","round","category","component","strategy","chessBishopsStrategy","chessRookStrategy","hunyadiAndTheJanissariesStrategy","pileSplitterStrategy","pileSplitter3Strategy","demonstrationStrategy","isHiddenFromOverview","ticTacToeDoubleStartStrategy","antiTicTacToeStrategy","twoTimesTwoStrategy","fiveSquaresStrategy","ticTacToeStrategy","superstitiousCountingStrategy","pileSplitter4Strategy","cubeColoringStrategy","coin357Strategy","coin123Strategy","PageNotFound","gameId","mapMutations","goBackToOverview","$router","setGameBasedOnRoute","setGameDefinition","mounted","watch","gamesToShow","Object","values","game","goToGamePage","setGameStatus","Game","Overview","async","window","createStore","gameDefinition","gameStatus","isPlayerWinner","enemyMoveTimeoutHandle","isEnemyMoveInProgress","getters","ctaText","mutations","status","setBoard","actions","commit","clearTimeout","startGameWithRoleSelection","dispatch","isFirst","makeAiMove","time","setTimeout","endGame","routes","path","StrategyGame","createRouter","history","createWebHashHistory","app","createApp","App","use","mount","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","__webpack_modules__","m","deferred","O","result","chunkIds","fn","priority","notFulfilled","Infinity","fulfilled","keys","key","r","d","definition","o","defineProperty","enumerable","get","g","globalThis","Function","e","obj","prop","prototype","hasOwnProperty","call","Symbol","toStringTag","value","installedChunks","chunkId","webpackJsonpCallback","parentChunkLoadingFunction","moreModules","runtime","chunkLoadingGlobal","self","bind","__webpack_exports__"],"sourceRoot":""}