(function(){var e={6203:function(e){var t='<div class="p-4"> <router-view></router-view> </div> ';e.exports=t},8773:function(e){var t='<div v-show="isEnemyMoveInProgress" class="animate-spin h-8 w-8 place-self-center border-t-blue-600 rounded-full border-4"></div> ';e.exports=t},8806:function(e){var t='<div class="flex justify-center mb-4 mt-1 max-w-[100ch]"> <Disclosure v-slot="{ open }"> <div class="border-2 rounded grow"> <DisclosureButton class="w-full bg-slate-200 text-xl flex justify-center"> <span class="grow">Játékszabályok</span> <span v-show="!open" class="text-right pr-4">⮟</span> <span v-show="open" class="text-right pr-4">⮝</span> </DisclosureButton> <DisclosurePanel class="w-full p-2"> <p class="text-justify"> <slot></slot> </p> </DisclosurePanel> </div> </Disclosure> </div> ';e.exports=t},9102:function(e){var t='<div class="p-2 flex flex-col grow shrink-0 basis-64"> <p class="text-center font-bold text-lg basis-[3.5rem]">{{ ctaText }}</p> <enemy-loader class="mb-[4rem]"/> <p v-if="shouldPlayerMoveNext" class="italic text-justify basis-[6rem]"> <slot name="step-description"></slot> </p> <span v-if="isGameReadyToStart" class="basis-[6rem]"> <button class="cta-button js-first-player" @click="startGameWithRoleSelection({ isFirst: true })"> Kezdő leszek </button> <button class="cta-button js-second-player" @click="startGameWithRoleSelection({ isFirst: false })"> Második leszek </button> </span> <button class="cta-button mt-[2vh] js-restart-game" @click="restartGame()"> Új játék </button> </div> ';e.exports=t},8062:function(e){var t='<svg style="display:none"> <symbol id="game-chess-bishop" viewBox="-96 0 512 512"> <path d="M8 287.88c0 51.64 22.14 73.83 56 84.6V416h192v-43.52c33.86-10.77 56-33 56-84.6 0-30.61-10.73-67.1-26.69-102.56L185 285.65a8 8 0 0 1-11.31 0l-11.31-11.31a8 8 0 0 1 0-11.31L270.27 155.1c-20.8-37.91-46.47-72.1-70.87-92.59C213.4 59.09 224 47.05 224 32a32 32 0 0 0-32-32h-64a32 32 0 0 0-32 32c0 15 10.6 27.09 24.6 30.51C67.81 106.8 8 214.5 8 287.88zM304 448H16a16 16 0 0 0-16 16v32a16 16 0 0 0 16 16h288a16 16 0 0 0 16-16v-32a16 16 0 0 0-16-16z"/> </symbol> </svg> ';e.exports=t},1451:function(e){var t='<div class="flex justify-center"> <chess-bishop-svg></chess-bishop-svg> <div class="max-w-[100ch] w-full"> <game-rule> Két játékos felváltva tesz le (a kezdetben üres) sakktáblára futókat. Egy új futót mindig csak olyan mezőre tehetünk, amin még nem áll futó, és azt a mezőt nem is támadja futó. Az veszít, aki nem tud lerakni futót. (Futó támad egy mezőt: ha a sakk szabályai szerint a futóval arra a mezőre tudnánk lépni, azaz a futóhoz képest átlósan helyezkedik el.) Te döntheted el, hogy kezdeni szeretnél-e, vagy második játékos lenni. Sok sikert! :) </game-rule> <div class="flex flex-wrap"> <div class="p-2 shrink-0 grow basis-2/3"> <table class="m-2 w-full border-collapse table-fixed"> <tr v-for="row in [0, 1, 2, 3, 4, 5, 6, 7]" :key="row"> <td v-for="col in [0, 1, 2, 3, 4, 5, 6, 7]" :key="col" @click="clickField({ row, col })" class="border-4" :class="{ \'bg-slate-400\': isForbidden({ row, col }), \'bg-slate-200\': wouldBeForbidden({ row, col }), \'cursor-not-allowed\': isForbidden({ row, col }) }"> <button class="aspect-square w-full p-[5%]" :disabled="!isMoveAllowed({ row, col })" @mouseover="hoveredField = { row, col }" @mouseout="hoveredField = null" @focus="hoveredField = { row, col }" @blur="hoveredField = null"> <span v-show="isBishop({ row, col })"> <svg class="inline-block w-full aspect-square"> <use xlink:href="#game-chess-bishop"/> </svg> </span> <span v-show="isPotentialNextStep({ row, col })"> <svg class="inline-block w-full aspect-square opacity-50"> <use xlink:href="#game-chess-bishop"/> </svg> </span> </button> </td> </tr> </table> </div> <game-sidebar> <template #step-description>Kattints egy mezőre, amit nem üt egyik futó sem.</template> </game-sidebar> </div> </div> </div> ';e.exports=t},2176:function(e){var t='<svg style="display:none"> <symbol id="game-chess-rook" viewBox="0 0 504 504"> <g id="layer1" transform="translate(-523.71 -225.65)"> <path id="path2406" style="fill:#000000" d="m90 422.5v-18.5h12.5 12.5v-21.35-21.36l21-22.36 21-22.36v-74.56-74.56l-24.44-18.47-24.45-18.48-0.05-33.75-0.06-33.75h28.5 28.5v15 15h26 26v-15-15h35 35v15 15h26 26v-15-15h28.5 28.5l-0.05 33.75-0.05 33.75-24.45 18.5-24.45 18.5v74.7 74.69l20.97 22.31 20.97 22.3 0.03 21.25 0.03 21.25h12.5 12.5v18.5 18.5h-162-162v-18.5z" transform="translate(523.71 225.65)"/> <path id="path2392" style="fill:#ffffff" d="m387.55 134.55c1.35-1.35 2.45-3.62 2.45-5.05 0-1.42-1.1-3.7-2.45-5.05l-2.46-2.45h-133.09-133.09l-2.46 2.45c-1.35 1.35-2.45 3.63-2.45 5.05s1.1 3.7 2.45 5.05l2.46 2.45h133.09 133.09l2.46-2.45z" transform="translate(523.71 225.65)"/> <path id="path2390" style="fill:#ffffff" d="m337.55 172.55c1.35-1.35 2.45-3.62 2.45-5.05 0-1.42-1.1-3.7-2.45-5.05l-2.46-2.45h-83.09-83.09l-2.46 2.45c-1.35 1.35-2.45 3.63-2.45 5.05s1.1 3.7 2.45 5.05l2.46 2.45h83.09 83.09l2.46-2.45z" transform="translate(523.71 225.65)"/> <path id="path2388" style="fill:#ffffff" d="m337.55 321.55c1.35-1.35 2.45-3.62 2.45-5.05 0-1.42-1.1-3.7-2.45-5.05l-2.46-2.45h-83.09-83.09l-2.46 2.45c-1.35 1.35-2.45 3.63-2.45 5.05 0 1.43 1.1 3.7 2.45 5.05l2.46 2.45h83.09 83.09l2.46-2.45z" transform="translate(523.71 225.65)"/> <path id="path2386" style="fill:#ffffff" d="m379.09 367.72c4.34-3.34 4.6-8.07 0.64-11.75-2.07-1.94-4.21-1.97-127.73-1.97s-125.66 0.03-127.73 1.97c-3.96 3.68-3.7 8.41 0.64 11.75 2.31 1.77 251.87 1.77 254.18 0z" transform="translate(523.71 225.65)"/> <path id="path2384" style="fill:#ffffff" d="m379.09 409.72c4.34-3.34 4.6-8.07 0.64-11.75-2.07-1.94-4.21-1.97-127.73-1.97s-125.66 0.03-127.73 1.97c-3.96 3.68-3.7 8.41 0.64 11.75 2.31 1.77 251.87 1.77 254.18 0z" transform="translate(523.71 225.65)"/> </g> </symbol> </svg>';e.exports=t},4967:function(e){var t='<div class="flex justify-center"> <chess-rook-svg></chess-rook-svg> <div class="max-w-[100ch] w-full"> <game-rule> A játékosok felváltva lépnek egy bástyával, amely a sakktábla bal felső sarkából indul. A bástya vízszintesen vagy függőlegesen bármennyit (legalább egyet) léphet, de egyszerre csak az egyik irányba. Azokat a mezőket amikre a bástya lép, illetve a lépés közben áthalad, megjelöljük, ezekre a mezőkre már nem léphetünk (át sem haladhatunk felettük). Az a játékos veszít, aki nem tud lépni. Te döntheted el, hogy kezdeni szeretnél-e, vagy második játékos lenni. Sok sikert! :) </game-rule> <div class="flex flex-wrap"> <div class="p-2 shrink-0 grow basis-2/3"> <table class="m-2 border-collapse w-full table-fixed"> <tr v-for="row in [0, 1, 2, 3, 4, 5, 6, 7]" :key="row"> <td v-for="col in [0, 1, 2, 3, 4, 5, 6, 7]" :key="col" @click="clickField({ row, col })" class="border-4" :class="{ \'bg-slate-300\': board.chessBoard[row][col] === \'visited\' }"> <div class="aspect-square p-[5%] w-full"> <button class="w-full aspect-square" :disabled="!isMoveAllowed({ row, col })"> <span v-if="isMoveAllowed({ row, col })"> <svg class="w-full aspect-square opacity-25 inline-block"> <use xlink:href="#game-chess-rook"/> </svg> </span> <span v-if="board.chessBoard[row][col] === \'rook\'"> <svg class="w-full aspect-square inline-block"> <use xlink:href="#game-chess-rook"/> </svg> </span> </button> </div> </td> </tr> </table> </div> <game-sidebar> <template #step-description>Kattints egy szabad mezőre a bástyával egy sorban vagy oszlopban, ahova a bástyával mozogni szeretnél.</template> </game-sidebar> </div> </div> </div> ';e.exports=t},3590:function(e){var t='<div class="flex justify-center"> <div class="max-w-[100ch] w-full"> <game-rule> Van egy kupacban néhány érme, mindegyik 1, 2 vagy 3 pengős. Egy lépésben az éppen soron lévő játékos elvesz egy érmét a kupacból, és helyette berakhat egy darab kisebb értékű érmét, vagy dönthet úgy, hogy nem tesz be semmit. Az nyer, aki elveszi az utolsó érmét a kupacból. Az új játék gombra kattintva generálhatsz egy új kezdőállást. A kezdőállás ismeretében te döntheted el, hogy kezdeni szeretnél-e, vagy második játékos lenni. Sok sikert! :) </game-rule> <div class="flex flex-wrap"> <div class="p-2 shrink-0 grow basis-2/3"> <table class="m-2 border-collapse table-fixed w-full"> <tr> <th>1-es</th> <th>2-es</th> <th>3-as</th> </tr> <tr> <td v-for="coinValue in [0, 1, 2]" :key="coinValue" @click="clickPile(coinValue)" class="text-center border-4" :class="{ \'bg-gray-300\': isCoinActionInvalid(coinValue), \'cursor-not-allowed\': isCoinActionInvalid(coinValue) }"> <button class="min-h-[25vh] w-full p-[5%]" :disabled="!isMoveAllowed(coinValue)" @mouseover="hoveredPile=coinValue" @mouseout="hoveredPile=null" @focus="hoveredPile=coinValue" @blur="hoveredPile=null"> <span v-for="i in board[coinValue]" :key="i" class="w-[30%] aspect-square inline-block rounded-full mr-0.5" :class="{ [getCoinColor(coinValue)]: true, \'opacity-50\': shouldShowCoinToBeRemoved(coinValue) && i === 1 }"></span> <span v-show="shouldShowCoinToBeAdded(coinValue)" class="w-[30%] aspect-square inline-block rounded-full mr-0.5 opacity-50" :class="getCoinColor(coinValue)"></span> </button> </td> </tr> </table> <button v-if="valueOfRemovedCoin" class="cta-button" @click="endTurn()"> Semmit se rakok be </button> </div> <game-sidebar @restart="resetTurnState()"> <template #step-description>{{ stepDescription }}</template> </game-sidebar> </div> </div> </div> ';e.exports=t},5324:function(e){var t='<div class="flex justify-center"> <div class="max-w-[100ch] w-full"> <game-rule> Egy kupacban 3 darab 1, 5 darab 2 és 7 darab 3 pengős érme van. Egy lépésben az éppen soron lévő játékos elvesz egy érmét a kupacból, és helyette berakhat egy darab kisebb értékű érmét, vagy dönthet úgy, hogy nem tesz be semmit. Az nyer, aki elveszi az utolsó érmét a kupacból. Te döntheted el, hogy kezdeni szeretnél-e, vagy második játékos lenni. Sok sikert! :) </game-rule> <div class="flex flex-wrap"> <div class="p-2 shrink-0 grow basis-8/12"> <table class="m-2 border-collapse table-fixed w-full"> <tr> <th>1-es</th> <th>2-es</th> <th>3-as</th> </tr> <tr> <td v-for="coinValue in [0, 1, 2]" :key="coinValue" @click="clickPile(coinValue)" class="text-center border-4" :class="{ \'bg-gray-300\': isCoinActionInvalid(coinValue), \'cursor-not-allowed\': isCoinActionInvalid(coinValue) }"> <button class="min-h-[25vh] w-full p-[5%]" :disabled="!isMoveAllowed(coinValue)" @mouseover="hoveredPile=coinValue" @mouseout="hoveredPile=null" @focus="hoveredPile=coinValue" @blur="hoveredPile=null"> <span v-for="i in board[coinValue]" :key="i" class="w-[30%] aspect-square inline-block rounded-full mr-0.5" :class="{ [getCoinColor(coinValue)]: true, \'opacity-50\': shouldShowCoinToBeRemoved(coinValue) && i === 1 }"></span> <span v-show="shouldShowCoinToBeAdded(coinValue)" class="w-[30%] aspect-square inline-block rounded-full mr-0.5 opacity-50" :class="getCoinColor(coinValue)"></span> </button> </td> </tr> </table> <button v-if="valueOfRemovedCoin" class="cta-button" @click="endTurn()"> Semmit se rakok be </button> </div> <game-sidebar @restart="resetTurnState()"> <template #step-description>{{ stepDescription }}</template> </game-sidebar> </div> </div> </div> ';e.exports=t},8818:function(e){var t='<div class="flex justify-center"> <div class="max-w-[100ch] w-full"> <game-rule> Adott egy téglatest rácsa, aminek be van húzva az egyik testátlója. Egy lépésben az éppen soron lévő játékos megszínezi valamelyik még színezetlen csúcsot három szín valamelyikével (azaz piros, sárga vagy kék korongot tesz rá) úgy, hogy ne keletkezzen két szomszédos csúcs, amik azonos színűek. Ha valamelyik játékos nem tud lépni, akkor véget ér a játék. A kezdő játékos nyer, ha minden csúcs meg lett színezve, míg a második akkor nyer, ha van olyan csúcs ami nem lett kiszínezve. Te döntheted el, hogy kezdeni szeretnél-e, vagy második játékos lenni. Sok sikert! :) </game-rule> <div class="flex flex-wrap" id="cube-coloring"> <div class="p-2 shrink-0 grow basis-2/3"> <button :disabled="!shouldPlayerMoveNext" class="w-[30%] mx-[1%] rounded text-xl mb-1 bg-opacity-75 bg-red-600" @click="pick(\'red\')">Piros</button> <button :disabled="!shouldPlayerMoveNext" class="w-[30%] mx-[1%] rounded text-xl mb-1 bg-opacity-75 bg-green-600" @click="pick(\'green\')">Zöld</button> <button :disabled="!shouldPlayerMoveNext" class="w-[30%] mx-[1%] rounded text-xl mb-1 bg-opacity-75 bg-blue-600" @click="pick(\'blue\')">Kék</button> <svg @mousemove="drawPickedColor" class="aspect-square stroke-black stroke-[3]"> <rect x="8%" y="25%" width="66%" height="66%" class="fill-transparent"/> <rect x="25%" y="8%" width="66%" height="66%" class="fill-transparent"/> <line x1="8%" y1="25%" x2="25%" y2="8%"/> <line x1="74%" y1="25%" x2="91%" y2="8%"/> <line x1="74%" y1="91%" x2="91%" y2="74%"/> <line x1="8%" y1="91%" x2="25%" y2="74%"/> <line x1="74%" y1="91%" x2="25%" y2="8%"/> <circle cx="8%" cy="25%" r="4%" @click="setColor(0)" v-on:keyup.enter="setColor(0)" :tabindex="isMoveAllowed(0) ? 0 : \'none\'" :fill="board[0] || \'white\'"/> <circle cx="74%" cy="25%" r="4%" @click="setColor(1)" v-on:keyup.enter="setColor(1)" :tabindex="isMoveAllowed(1) ? 0 : \'none\'" :fill="board[1] || \'white\'"/> <circle cx="74%" cy="91%" r="4%" @click="setColor(2)" v-on:keyup.enter="setColor(2)" :tabindex="isMoveAllowed(2) ? 0 : \'none\'" :fill="board[2] || \'white\'"/> <circle cx="8%" cy="91%" r="4%" @click="setColor(3)" v-on:keyup.enter="setColor(3)" :tabindex="isMoveAllowed(3) ? 0 : \'none\'" :fill="board[3] || \'white\'"/> <circle cx="25%" cy="8%" r="4%" @click="setColor(4)" v-on:keyup.enter="setColor(4)" :tabindex="isMoveAllowed(4) ? 0 : \'none\'" :fill="board[4] || \'white\'"/> <circle cx="91%" cy="8%" r="4%" @click="setColor(5)" v-on:keyup.enter="setColor(5)" :tabindex="isMoveAllowed(5) ? 0 : \'none\'" :fill="board[5] || \'white\'"/> <circle cx="91%" cy="74%" r="4%" @click="setColor(6)" v-on:keyup.enter="setColor(6)" :tabindex="isMoveAllowed(6) ? 0 : \'none\'" :fill="board[6] || \'white\'"/> <circle cx="25%" cy="74%" r="4%" @click="setColor(7)" v-on:keyup.enter="setColor(7)" :tabindex="isMoveAllowed(7) ? 0 : \'none\'" :fill="board[7] || \'white\'"/> <circle v-if="show" :cx="x" :cy="y" r="4%" :fill="color" class="pointer-events-none opacity-50 stroke-0"/> </svg> </div> <game-sidebar @restart="resetTurnState()"> <template #step-description> Válassz színt, majd színezz meg egy csúcsot! </template> </game-sidebar> </div> </div> </div> ';e.exports=t},5470:function(e){var t='<div class="flex justify-center"> <div class="max-w-[100ch] w-full"> <game-rule> Ez egy példa játék. A kezdőállás ismeretében te döntheted el, hogy kezdeni szeretnél-e, vagy második játékos lenni. Sok sikert! :) </game-rule> <div class="flex flex-wrap"> <div class="p-2 shrink-0 grow basis-2/3"> <button v-if="shouldPlayerMoveNext" class="cta-button" @click="endPlayerTurn({ board: [], isGameEnd: true })">Lépek!</button> </div> <game-sidebar> <template #step-description>Kattints a \'Lépek\' gombra, hogy lépj.</template> </game-sidebar> </div> </div> </div> ';e.exports=t},6818:function(e){var t='<div class="flex justify-center"> <div class="max-w-[100ch] w-full"> <game-rule> A játék során egy öt mezőből álló táblára fogunk elhelyezni tíz korongot. A játék elején a szervező egy korongot felhelyez az egyik mezőre, és ezután kezdődik a játék. Minden körben a kezdőjátékos egy korongot helyez a táblára, majd ezután a második játékos tesz le két korongot. (A két korongot lehet azonos, illetve különböző mezőkre is tenni.) A játék akkor ér véget, amikor a 10. korong felkerül a táblára. A második játékos akkor nyer, ha a játék végén minden mezőn különböző számú korong áll. A kezdő pedig akkor nyer, ha van két olyan mező, amelyen azonos számú korong áll. Te döntheteted el, hogy a kezdő vagy a második játékos bőrébe szeretnél e bújni. Sok sikert! :) </game-rule> <div class="flex flex-wrap"> <div class="p-2 shrink-0 grow basis-2/3"> <div class="grid grid-cols-3 gap-0 border-t-4 border-l-4"> <button v-for="id in [0, 1, 2, 3, 4]" :key="id" :disabled="!shouldPlayerMoveNext" @click="placePiece(id)" class="aspect-square border-r-4 border-b-4 p-[3%]"> <span v-for="i in board[id]" :key="i" class="m-[2%] aspect-square inline-block bg-blue-600 rounded-full" :class="{ \'w-[37%]\': board[id] <= 4, \'w-[28%]\': board[id] == 5 || board[id] == 6, \'w-[20%]\': board[id] > 6 }"> </span> </button> </div> </div> <game-sidebar> <template #step-description> Kattints arra a mezőre, ahova korongot szeretnél lerakni. </template> </game-sidebar> </div> </div> </div> ';e.exports=t},750:function(e){var t='<svg style="display:none"> <symbol id="game-castle" viewBox="0 0 695.59 658.31"> <path d="M844.77,414.27v26.94H830.58V414.27H816.4v26.94H802.21V414.27H788v26.94H773.84V414.27H759.65v26.94H745.46V414.27H732.39V515.59c0,23.49,6,47.67,10.28,79.26H702.73c5-17.32,10.68-28.77,10.68-49V461.74H685.56V424.79H686a1.45,1.45,0,0,0,1.58-1.26v-5.7a3.54,3.54,0,0,0,2.64-3.17v-18c0-1.9-1.93-3.44-4.32-3.44h-1.58L643.9,325.12l-40.44,68.14h-1.58c-2.39,0-4.32,1.54-4.32,3.44v18a3.55,3.55,0,0,0,2.63,3.17v5.7a1.45,1.45,0,0,0,1.59,1.26h.46v36.95H559.58V327.43h.53c1,0,1.82-1.1,1.82-2.46V313.83a7.1,7.1,0,0,0,3-6.2v-35.1c0-3.71-2.23-6.72-5-6.72h-1.82L511.6,132.63,465,265.81H463.2c-2.75,0-5,3-5,6.72v35.1a7.09,7.09,0,0,0,3,6.2V325c0,1.36.82,2.46,1.82,2.46h.54V461.74H428V417.56h.45a1.63,1.63,0,0,0,1.55-1.7v-7.69a4.67,4.67,0,0,0,2.58-4.27V379.68a4.45,4.45,0,0,0-4.23-4.64h-1.55l-39.56-91.89L347.71,375h-1.55a4.45,4.45,0,0,0-4.23,4.64V403.9a4.67,4.67,0,0,0,2.58,4.27v7.69a1.63,1.63,0,0,0,1.55,1.7h.45v44.18H309.79v84.08c0,20.26,5.65,31.71,10.67,49h-43.4c4.28-31.59,10.29-55.77,10.29-79.26V414.27h-13v26.94H260.18V414.27H246v26.94H231.8V414.27H217.62v26.94H203.43V414.27H189.24v26.94H175.06V414.27h-13V515.59c0,36.49,14.5,74.65,14.5,139.69V790.94h666.6V655.28c0-65,14.49-103.2,14.49-139.69V414.27ZM284.39,640.44H273.11q.25-7.28.72-14.1h10.56Zm22.43,0H295v-14.1h11.78Zm10.65,0v-14.1h9.21c.47,4.33.84,9,1.09,14.1Zm73-195.85H378.91V418c0-4.32,2.58-7.82,5.78-7.82h0c3.19,0,5.78,3.5,5.78,7.82ZM507.39,779.81H458.46c0-2.91.06-5.75.1-8.55h48.83Zm0-19.68H458.8c.08-2.91.16-5.76.26-8.54h48.33Zm0-19.67H459.52c.15-2.92.3-5.77.47-8.54h47.4Zm0-19.67H460.75c.23-2.95.47-5.79.72-8.55h45.92Zm0-19.68H462.64c.34-3,.71-5.82,1.09-8.54h43.66Zm0-19.67h-41.9c.54-3,1.1-5.87,1.69-8.55h40.21Zm0-19.68H470c.93-3.16,1.89-6,2.88-8.54h34.53Zm0-19.67H478.46c4.42-6.53,9-8.7,13.1-8.7h15.83Zm8.26-270H504.09V345.55c0-4.32,2.59-7.82,5.78-7.82h0c3.19,0,5.78,3.5,5.78,7.82Zm.06,261.27h15.6c4.09,0,8.68,2.17,13.1,8.7h-28.7Zm0,19.83H550c1,2.54,2,5.38,2.88,8.54H515.71Zm0,19.67h40c.59,2.68,1.15,5.52,1.69,8.55H515.71Zm0,19.68h43.43q.57,4.08,1.1,8.54H515.71Zm0,19.67H561.4c.25,2.76.5,5.6.72,8.55H515.71Zm0,19.68h47.17c.17,2.77.32,5.62.47,8.54H515.71Zm0,19.67h48.1c.1,2.78.18,5.63.26,8.54H515.71Zm0,28.22v-8.55H564.3c.05,2.8.09,5.64.11,8.55Zm133.17-318H637.32V435.2c0-4.31,2.58-7.81,5.78-7.81h0c3.19,0,5.78,3.5,5.78,7.81Zm55.39,178.66h-8.85c.25-5.09.62-9.77,1.1-14.1h7.75Zm22.44,0H714.92v-14.1h11.79Zm10.65,0v-14.1h8.55q.47,6.82.72,14.1Z" transform="translate(-162.07 -60.63)"/> </symbol> </svg> ';e.exports=t},2428:function(e){var t='<div class="flex justify-center"> <soldier-svg/> <castle-svg/> <div class="max-w-[100ch] w-full"> <game-rule> A török szultán serege megtámadta Hunyadi várát. A várlépcső egyes fokain néhány janicsár áll. Minden reggel a szultán kettéosztja a hadseregét egy piros és egy kék hadtestre. Hunyadi a nap folyamán vagy a piros, vagy a kék sereget megsemmisíti, választása szerint. Éjszaka minden megmaradt janicsár egy lépcsőfokot fellép. Hunyadi nyer, ha a szultán egész seregét megsemmisítette. A szultán nyer, ha lesz olyan janicsár, aki felér a várhoz. A kezdőállás ismeretében te döntheted e, hogy Hunyadiként vagy a török szultánként szeretnél-e játszani. Sok sikert! :) </game-rule> <div class="flex flex-wrap js-hunyadi-and-the-janissaries"> <div class="p-2 shrink-0 grow basis-2/3"> <svg class="block m-auto w-[40%] fill-slate-600"> <use xlink:href="#game-castle"/> </svg> <div v-for="rowIndex in [0, 1, 2, 3, 4, 5]" :key="rowIndex" :style="{ \'aspect-ratio\': rowIndex === 5 ? 24 : 8, \'margin-left\': (5-rowIndex) + \'rem\', \'margin-right\': (5-rowIndex) + \'rem\' }" class="border-t-black border-t-2 p-0.5 text-center whitespace-nowrap"> <button v-for="(group, pieceIndex) in board[rowIndex]" :disabled="!shouldPlayerMoveNext" class="aspect-square w-[10%] inline-block mx-1 js-clickable-soldier" @click="clickOnSoldier(rowIndex, pieceIndex)" @focus="hoveredPiece = { rowIndex, pieceIndex }" @blur="hoveredPiece = null" @mouseover="hoveredPiece = { rowIndex, pieceIndex }" @mouseout="hoveredPiece = null"> <svg class="w-full aspect-square inline-block border-dashed border-black" :class="{ \'outline-dashed\': showToBeKilled(group), \'opacity-50\': showToBeKilled(group), \'fill-blue-600\': group === \'blue\', \'fill-red-600\': group === \'red\' }"> <use xlink:href="#game-soldier-icon"/> </svg> </button> </div> </div> <div class="p-2 flex flex-col grow shrink-0 basis-64"> <p class="text-center font-bold text-lg">{{ ctaText }}</p> <enemy-loader/> <p class="italic text-justify">{{ stepDescription }}</p> <template v-if="isGameReadyToStart"> <button class="cta-button js-second-player" @click="startGameWithRoleSelection({ isFirst: false })"> Hunyadi leszek </button> <button class="cta-button js-first-player" @click="startGameWithRoleSelection({ isFirst: true })"> Szultán leszek </button> </template> <template v-if="isGameInProgress"> <button v-if="isPlayerSultan" :class="{ \'opacity-50\': isEnemyMoveInProgress }" class="cta-button js-finalize-groups" @click="finalizeSoldierGrouping()"> Befejezem a kettéosztást </button> <button v-if="!isPlayerSultan" :class="{ \'opacity-50\': isEnemyMoveInProgress }" class="cta-button bg-red-400 hover:bg-red-600 js-kill-red" @click="killGroup(\'red\')"> Legyőzöm a pirosakat </button> <button v-if="!isPlayerSultan" :class="{ \'opacity-50\': isEnemyMoveInProgress }" class="cta-button bg-blue-400 hover:bg-blue-600" @click="killGroup(\'blue\')"> Legyőzöm a kékeket </button> </template> <div class="flex flex-grow items-end"> <button class="cta-button mt-4 js-restart-game" @click="restartGame()"> Új játék </button> </div> </div> </div> </div> </div> ';e.exports=t},379:function(e){var t='<svg style="display:none"> <symbol id="game-soldier-icon" viewBox="0 0 298.167 298.167"> <g> <polygon points="87.226,49.664 87.226,103.334 141.228,103.334 \t"/> <path d="M57.737,224.637c4.569-0.903,9.541-2.088,14.62-3.407c-1.152-5.343-1.774-10.881-1.774-16.564\n        c0-19.615,7.248-37.558,19.186-51.332h118.631c11.937,13.774,19.185,31.717,19.185,51.332c0,5.683-0.622,11.221-1.774,16.564\n        c5.079,1.319,10.051,2.503,14.62,3.407c1.406-6.438,2.154-13.118,2.154-19.971c0-20.161-6.415-38.852-17.31-54.14\n        c3.8-2.721,6.285-7.162,6.285-12.192c0-8.284-6.716-15-15-15h-5h-124h-6c-8.284,0-15,6.716-15,15c0,5.045,2.498,9.496,6.316,12.216\n        c-10.885,15.284-17.293,33.966-17.293,54.116C55.582,211.519,56.33,218.199,57.737,224.637z"/> <path d="M149.083,283.167c-11.725,0-22.848-2.602-32.849-7.23c-10.838-0.202-20.728-0.808-29.685-1.821\n        c16.578,14.942,38.511,24.052,62.533,24.052c24.023,0,45.955-9.109,62.533-24.051c-8.958,1.013-18.847,1.618-29.685,1.82\n        C171.931,280.565,160.808,283.167,149.083,283.167z"/> <circle cx="183.987" cy="184.168" r="12.465"/> <circle cx="114.18" cy="184.168" r="12.465"/> <path d="M168.083,221.334c-4.304,0-8.276,1.383-11.524,3.712v-25.397c0-4.107-3.165-7.688-7.271-7.811\n        c-4.247-0.127-7.729,3.277-7.729,7.496c0,9.756,0,15.835,0,25.678c-3.239-2.309-7.193-3.678-11.476-3.678\n        c-7.958,0-56.993,11.918-79.534,17.277c-5.048,1.2-5.868,7.975-1.294,10.425c20.996,11.245,59.479,11.982,75.34,11.982\n        c2.388,0,4.263-0.017,5.488-0.017c8.982,0,16.56-5.975,19-14.163c2.44,8.188,10.019,14.163,19,14.163\n        c1.225,0,3.103,0.017,5.488,0.017c15.858,0,54.344-0.735,75.34-11.982c4.574-2.45,3.755-9.225-1.294-10.426\n        C225.078,233.251,176.042,221.334,168.083,221.334z"/> <path d="M210.4,27.163c-2.574-6.903-9.207-11.829-17.008-11.829h-27.1C165.3,6.704,157.98,0,149.083,0s-16.217,6.704-17.209,15.334\n        h-26.148c-8.076,0-14.912,5.273-17.276,12.561l60.609,60.61L210.4,27.163z"/> <polygon points="211.226,103.334 211.226,48.664 156.89,103.334 \t"/> </g> </symbol> </svg> ';e.exports=t},3762:function(e){var t='<div class="flex justify-center"> <div class="max-w-[100ch] w-full"> <game-rule> A pályán kezdetben 37 korong van, három kupacban. A soron következő játékos először az egyik kupacot teljes egészében kiveszi a játékból; majd egy másik kupacot kettéoszt két kisebb kupacra (mindkettőbe legalább 1 korongnak kerülnie kell). Egy lépést követően tehát újra három kupac marad. Az a játékos veszít, aki nem tud szabályosan lépni (azaz egyik kupacot se tudja szétosztani). A kezdőállás ismeretében te döntheted el, hogy kezdeni szeretnél-e, vagy második játékos lenni. Sok sikert! :) </game-rule> <div class="flex flex-wrap"> <div class="p-2 shrink-0 grow basis-2/3"> <div v-for="pileId in [0, 1, 2]" :key="pileId" class="js-pile w-[50%] pl-1 inline-block text-center py-2" :class="{ \'border-t-2\': pileId < 2, \'border-r-2\': pileId === 0 && board[0] >= board[1], \'border-l-2\': pileId === 1 && board[0] < board[1] }" style="transform:scaleY(-1)"> <div class="text-xl" style="transform:scaleY(-1)"> {{ currentChoiceDescription(pileId) }} </div> <button v-for="(_, pieceId) in board[pileId]" :key="pieceId" :disabled="isDisabled({ pileId, pieceId })" class="js-pebble inline-block bg-blue-600 w-[20%] aspect-square rounded-full mx-0.5" :class="{ \'bg-red-600\': pileId === removedPileId, \'opacity-50\': pileId === removedPileId, \'bg-blue-900\': toBeLeft({ pileId, pieceId }) }" @click="clickPiece({ pileId, pieceId })" @focus="hoveredPiece = { pileId, pieceId }" @blur="hoveredPiece = null" @mouseover="hoveredPiece = { pileId, pieceId }" @mouseout="hoveredPiece = null"></button> </div> </div> <game-sidebar @restart="resetTurnState()"> <template #step-description> Először kattints az eltávolítandó kupacra, majd arra a korongra, ahol ketté akarod vágni a kupacot. </template> </game-sidebar> </div> </div> </div> ';e.exports=t},2680:function(e){var t='<div class="flex justify-center"> <div class="max-w-[100ch] w-full"> <game-rule> A pályán kezdetben négy kupac korong van. A soron következő játékos először az egyik kupacot teljes egészében kiveszi a játékból; majd egy másik kupacot kettéoszt két kisebb kupacra (mindkettőbe legalább 1 korongnak kerülnie kell). Egy lépést követően tehát újra 4 kupac marad. Az a játékos veszít, aki nem tud szabályosan lépni (azaz egyik kupacot se tudja szétosztani). A kezdőállás ismeretében te döntheted el, hogy kezdeni szeretnél-e, vagy második játékos lenni. Sok sikert! :) </game-rule> <div class="flex flex-wrap"> <div class="p-2 shrink-0 grow basis-2/3"> <div v-for="pileId in [0, 1, 2, 3]" :key="pileId" class="js-pile w-[50%] pl-1 inline-block text-center py-2" :class="{ \'border-t-2\': pileId < 2, \'border-r-2\': rightBorder(pileId), \'border-l-2\': leftBorder(pileId) }" style="transform:scaleY(-1)"> <div class="text-xl" style="transform:scaleY(-1)"> {{ currentChoiceDescription(pileId) }} </div> <button v-for="(_, pieceId) in board[pileId]" :key="pieceId" :disabled="isDisabled({ pileId, pieceId })" class="js-pebble inline-block bg-blue-600 w-[20%] aspect-square rounded-full mx-0.5" :class="{ \'bg-red-600\': pileId === removedPileId, \'opacity-50\': pileId === removedPileId, \'bg-blue-900\': toBeLeft({ pileId, pieceId }) }" @click="clickPiece({ pileId, pieceId })" @focus="hoveredPiece = { pileId, pieceId }" @blur="hoveredPiece = null" @mouseover="hoveredPiece = { pileId, pieceId }" @mouseout="hoveredPiece = null"></button> </div> </div> <game-sidebar @restart="resetTurnState()"> <template #step-description> Először kattints az eltávolítandó kupacra, majd arra a korongra, ahol ketté akarod vágni a kupacot. </template> </game-sidebar> </div> </div> </div> ';e.exports=t},9007:function(e){var t='<div class="flex justify-center"> <div class="max-w-[100ch] w-full"> <game-rule> A pályán mindig két kupac korong található. A soron következő játékos választ egy kupacot, és azt szétosztja két kisebb kupacra (mindkettőbe legalább 1 korongnak kerülnie kell), a másik kupacot pedig kidobjuk. Az a játékos veszít, aki nem tud szabályosan lépni (azaz egyik kupacot se tudja szétosztani). A kezdőállás ismeretében te döntheted el, hogy kezdeni szeretnél-e, vagy második játékos lenni. Sok sikert! :) </game-rule> <div class="flex flex-wrap js-pile-splitter"> <div class="p-2 shrink-0 grow basis-2/3"> <div v-for="pileId in [0, 1]" :key="pileId" class="js-pile w-[50%] pl-1 inline-block text-center" :class="{ \'border-r-2\': pileId === 0 && board[0] >= board[1], \'border-l-2\': pileId === 1 && board[0] < board[1] }" style="transform:scaleY(-1)"> <div class="text-xl" style="transform:scaleY(-1)"> {{ currentChoiceDescription(pileId) }} </div> <button v-for="(_, pieceId) in board[pileId]" :key="pieceId" :disabled="isDisabled({ pileId, pieceId })" class="js-pebble inline-block bg-blue-600 w-[20%] aspect-square rounded-full mx-0.5" :class="{ \'bg-blue-900\': toBeLeft({ pileId, pieceId }), \'opacity-50\': toBeRemoved({ pileId }), \'bg-red-600\': toBeRemoved({ pileId }) }" @click="clickPiece({ pileId, pieceId })" @focus="hoveredPiece = { pileId, pieceId }" @blur="hoveredPiece = null" @mouseover="hoveredPiece = { pileId, pieceId }" @mouseout="hoveredPiece = null"> </button> </div> </div> <game-sidebar> <template #step-description> Kattints egy korongra, hogy azzal kettéosztd azt a kupacot. </template> </game-sidebar> </div> </div> </div> ';e.exports=t},975:function(e){var t='<div class="flex justify-center"> <div class="max-w-[100ch] w-full"> <game-rule> Károly és Dezső <pre class="inline">m</pre>-ig szeretnének elszámolni, és közben a következő játékot játsszák: 0-ról kezdenek, a két játékos felváltva adhat hozzá egy 13-nál kisebb pozitív egészet a korábbi számhoz, azonban a babonájuk miatt ha egyikük x-et adott hozzá, akkor másikuk a következő lépésben nem adhat hozzá <pre class="inline">13-x</pre>-et. Az veszít, aki eléri (vagy átlépi) <pre class="inline">m</pre>-et. Az <pre class="inline">m</pre> szám ismeretében te döntheteted el, hogy a kezdő vagy a második játékos bőrébe szeretnél e bújni. Sok sikert! :) </game-rule> <div class="flex flex-wrap"> <div class="p-2 shrink-0 grow basis-2/3"> <table class="border-collapse table-fixed w-full"> <tr> <th>Szám</th> <th>Cél</th> <th>Tiltott lépés</th> </tr> <tr> <td class="text-center border-4 align-middle text-6xl py-4">{{ board.current }}</td> <td class="text-center border-4 align-middle text-6xl py-4">{{ board.target }}</td> <td class="text-center border-4 align-middle text-6xl py-4">{{ board.restricted || \'-\' }}</td> </tr> </table> <div v-if="shouldPlayerMoveNext" class="mt-4"> <label for="step" class="mr-2 text-lg"> Következő lépés: </label> <input id="step" type="number" min="1" max="12" v-model="step" class="border-2 rounded pl-1 text-lg" v-on:keyup.enter="attemptStep()"> </div> </div> <game-sidebar @restart="resetTurnState()"> <template #step-description> Írj be egy számot, majd nyomj Enter-t. </template> </game-sidebar> </div> </div> </div> ';e.exports=t},5453:function(e){var t='<div class="flex justify-center"> <div class="max-w-[100ch] w-full"> <game-rule> A 3×3-as antiamőba játékban a kezdő piros, a második kék korongokat rak le. Felváltva lépnek, és az veszít, akinek először lesz a saját színéből három korongja egy sorban, oszlopban vagy átlóban. Ha mind a kilenc mező foglalt és nincs ilyen koronghármas, akkor a kezdő nyer. Te döntheted el, hogy kezdeni szeretnél-e, vagy második játékos lenni. Sok sikert! :) </game-rule> <div class="flex flex-wrap"> <div class="p-2 shrink-0 grow basis-2/3"> <div class="grid grid-cols-3 gap-0 border-2"> <button v-for="id in [0, 1, 2, 3, 4, 5, 6, 7, 8]" :key="id" :disabled="!isMoveAllowed(id)" @click="clickField(id)" class="aspect-square p-[25%] border-2"> <span v-if="board[id]" class="w-full aspect-square inline-block rounded-full mb-[-0.5rem]" :class="pieceColor(id)"></span> </button> </div> </div> <game-sidebar> <template #step-description> Helyezz le egy korongot egy üres mezőre kattintással. </template> </game-sidebar> </div> </div> </div> ';e.exports=t},4394:function(e){var t='<div class="flex justify-center"> <div class="max-w-[100ch] w-full"> <game-rule> A 3 × 3-as duplánkezdő amőba játékban először a kezdő tesz le két piros korongot, majd a második egy kék korongot és innentől felváltva egy-egy korongot tesznek le a saját színükből, amíg be nem telik a tábla. A kezdő nyer, ha a játék végén van valahol három piros egy sorban, oszlopban vagy átlóban, de sehol sincs három kék egy sorban, oszlopban vagy átlóban; egyébként a második nyer. Te döntheted el, hogy kezdeni szeretnél-e, vagy második játékos lenni. Sok sikert! :) </game-rule> <div class="flex flex-wrap"> <div class="p-2 shrink-0 grow basis-2/3"> <div class="grid grid-cols-3 gap-0 border-2"> <button v-for="id in [0, 1, 2, 3, 4, 5, 6, 7, 8]" :key="id" :disabled="!isMoveAllowed(id)" @click="clickField(id)" class="aspect-square p-[25%] border-2"> <span v-if="board[id]" class="w-full aspect-square inline-block rounded-full mb-[-0.5rem]" :class="pieceColor(id)"></span> </button> </div> </div> <game-sidebar> <template #step-description> {{ isDuringFirstMove ? \'Helyezz le két korongot (kattints a mezőkre)\' : \'Helyezz le egy korongot egy üres mezőre kattintással.\' }} </template> </game-sidebar> </div> </div> </div> ';e.exports=t},6546:function(e){var t='<div class="flex justify-center"> <div class="max-w-[100ch] w-full"> <game-rule> Két játékos játszik egy 3 × 3-as táblán kék és piros korongokkal a szokásos amőba szabályai szerint, tehát felváltva tesznek le korongokat, és ha egy sorban, oszlopban vagy átlóban összegyűlik három azonos színű korong, az adott játékos nyer. Ha az első 9 korong lehelyezése után döntetlen az állás (azaz egyik játékos sem nyert), akkor tovább folytatják a játékot, a soron következő játékos az ellenfél egy már lehelyezett korongját fehérre színezheti. Ezek után az nyer, aki először hoz létre három fehér korongot egy sorban, oszlopban vagy átlóban. Te döntheted el, hogy kezdeni szeretnél-e, vagy második játékos lenni. Sok sikert! :) </game-rule> <div class="flex flex-wrap"> <div class="p-2 shrink-0 grow basis-2/3"> <div class="grid grid-cols-3 gap-0 border-2"> <button v-for="id in [0, 1, 2, 3, 4, 5, 6, 7, 8]" :key="id" :disabled="!isMoveAllowed(id)" @click="clickField(id)" class="aspect-square p-[25%] border-2" :class="{ \'cursor-not-allowed\': !isMoveAllowed(id) && shouldPlayerMoveNext, \'bg-green-100\': !inPlacingPhase && isMoveAllowed(id) }"> <span v-if="board[id]" class="w-full aspect-square inline-block rounded-full mb-[-0.5rem]" :class="{ [pieceColor(id)]: true, \'border-4\': pieceColor(id) === \'bg-white\', \'border-slate-600\': pieceColor(id) === \'bg-white\' }"></span> </button> </div> </div> <game-sidebar> <template #step-description> {{ inPlacingPhase ? \'Kattints egy üres mezőre.\' : \'Kattints egy piros korongra.\' }} </template> </game-sidebar> </div> </div> </div> ';e.exports=t},4433:function(e){var t='<div class="flex justify-center"> <div class="max-w-[100ch] w-full"> <game-rule> Adott egy 2 × 2-es táblázat, és hozzá mindkét játékosnak van 3 db korongja. A játék során felváltva tesznek le ezekből egyet-egyet a táblázat tetszőleges mezőjére. A második játékos akkor nyer, ha a játék végén minden mezőben különböző számú korong található. (Azaz 0, 1, 2, 3 a kiosztás a végén valamilyen sorrendben). Minden egyéb esetben pedig a kezdő játékos nyer. Te döntheteted el, hogy a kezdő vagy a második játékos bőrébe szeretnél e bújni. Sok sikert! :) </game-rule> <div class="flex flex-wrap"> <div class="p-2 shrink-0 grow basis-2/3"> <div class="grid grid-cols-2 gap-0 border-2"> <button v-for="id in [0, 1, 2, 3]" :key="id" :disabled="!shouldPlayerMoveNext" @click="placePiece(id)" class="aspect-square border-2 p-[4%]"> <span v-for="i in board[id]" :key="i" class="m-[3%] aspect-square inline-block bg-blue-600 rounded-full" :class="{ \'w-[40%]\': board[id] <= 4, \'w-[25%]\': board[id] > 4 }"> </span> </button> </div> </div> <game-sidebar> <template #step-description> Kattints arra a mezőre, ahova korongot szeretnél lerakni. </template> </game-sidebar> </div> </div> </div> ';e.exports=t},411:function(e){var t='<div> <div class="flex flex-wrap items-baseline"> <h1 class="text-blue-600 text-2xl font-bold pb-4 grow">Dürer játékok</h1> <span class="text-right"> <a href="https://forms.gle/7DwugmXNrvKgkiiu8" target="_blank" class="px-4 text-blue-800 underline"> Hibabejelentő </a> </span> </div> <div class="flex flex-wrap align-baseline"> <Listbox v-model="selectedCategories" as="div" multiple="multiple" horizontal class="mb-2 w-96 inline-block" v-slot="{ open }"> <label for="category-selector" class="block">Kategória szűrő:</label> <ListboxButton id="category-selector" class="border-2 border-slate-600 rounded w-full"> {{ selectedCategories.join(\', \') || \'Válassz kategóriákat\' }} </ListboxButton> <ListboxOptions class="text-center mt-1"> <ListboxOption v-for="category in allCategories" :key="category" :value="category" class="inline-block" v-slot="{ selected, active }"> <span class="border-2 rounded px-1 mx-1 inline-block" :class="{ \'bg-blue-200\': selected, \'outline\': active }"> <span :class="{ \'text-transparent\': !selected }">✓</span>{{ category }} </span> </ListboxOption> </ListboxOptions> </Listbox> <Listbox v-model="selectedYears" as="div" multiple="multiple" horizontal class="ml-2 mb-2 w-96 inline-block" v-slot="{ open }"> <label for="year-selector" class="block">Év szűrő:</label> <ListboxButton id="year-selector" class="border-2 border-slate-600 rounded w-full"> {{ selectedYears.join(\', \') || \'Válassz éveket\' }} </ListboxButton> <ListboxOptions class="text-center mt-1"> <ListboxOption v-for="year in allYears" :key="year" :value="year" class="inline-block" v-slot="{ selected, active }"> <span class="border-2 rounded px-1 mx-1 inline-block" :class="{ \'bg-blue-200\': selected, \'outline\': active }"> <span :class="{ \'text-transparent\': !selected }">✓</span>{{ year }} </span> </ListboxOption> </ListboxOptions> </Listbox> </div> <table class="w-full border-collapse"> <thead> <tr> <th v-for="header in [\'Év\', \'Forduló\', \'Kategória\', \'Játék\', \'\']" class="bg-gray-500 border-2 border-gray-300 text-center text-white font-bold p-1">{{ header }}</th> </tr> </thead> <tr v-for="game in gamesToShow" class="odd:bg-gray-200"> <td v-for="gameProp in [game.year, game.round, game.category, game.name]" class="border-2 border-gray-300 text-center p-1">{{ gameProp }}</td> <td class="border-2 border-gray-300 text-center p-1"> <button @click="goToGamePage(game.component)" :class="`rounded-lg px-4 bg-blue-400 hover:bg-blue-600 js-select-${game.component}`">Kipróbálom!</button> </td> </tr> </table> </div> ';e.exports=t},8953:function(e){var t='<div> Sajnáljuk, a keresett oldal nem található. Az alábbi gombra kattintva válassz egy játékot. <button class="rounded-lg px-4 bg-blue-400 hover:bg-blue-600 js-back-to-overview" @click="$router.push(\'/\')">A játékok listájához</button> </div> ';e.exports=t},487:function(e){var t='<div> <template v-if="gameDefinition"> <div class="flex flex-wrap items-baseline"> <button class="rounded-lg px-4 bg-blue-400 hover:bg-blue-600 js-back-to-overview basis-44" @click="goBackToOverview()">← Vissza a listához</button> <h1 class="grow text-blue-600 text-2xl font-bold pb-4 text-center"> {{ gameDefinition.name }} </h1> <span class="basis-44 text-right"> <a href="https://forms.gle/7DwugmXNrvKgkiiu8" target="_blank" class="px-4 text-blue-800 underline"> Hibabejelentő </a> </span> </div> <hr/> <component :is="gameId"></component> </template> <page-not-found v-if="!gameDefinition"></page-not-found> </div> ';e.exports=t},1915:function(e,t,r){"use strict";var i={};r.r(i),r.d(i,{generateNewBoard:function(){return I},getGameStateAfterAiMove:function(){return M},isTheLastMoverTheWinner:function(){return G}});var o={};r.r(o),r.d(o,{generateNewBoard:function(){return N},getGameStateAfterAiMove:function(){return C},getGameStateAfterKillingGroup:function(){return F},isTheLastMoverTheWinner:function(){return B}});var s={};r.r(s),r.d(s,{generateNewBoard:function(){return L},getGameStateAfterAiMove:function(){return W},getGameStateAfterMove:function(){return q},isTheLastMoverTheWinner:function(){return K}});var a={};r.r(a),r.d(a,{generateNewBoard:function(){return _},getGameStateAfterAiMove:function(){return J},getGameStateAfterMove:function(){return X},isTheLastMoverTheWinner:function(){return Q}});var l={};r.r(l),r.d(l,{generateNewBoard:function(){return se},getGameStateAfterAiMove:function(){return oe},getGameStateAfterMove:function(){return le},isTheLastMoverTheWinner:function(){return ae}});var n={};r.r(n),r.d(n,{generateNewBoard:function(){return he},getGameStateAfterAiMove:function(){return me},getGameStateAfterMove:function(){return pe},isTheLastMoverTheWinner:function(){return ve}});var d={};r.r(d),r.d(d,{generateNewBoard:function(){return ke},getGameStateAfterAiMove:function(){return we},getGameStateAfterMove:function(){return ye},isTheLastMoverTheWinner:function(){return ze}});var c={};r.r(c),r.d(c,{generateNewBoard:function(){return Ze},getGameStateAfterAiMove:function(){return Ce},getGameStateAfterMove:function(){return Se},isTheLastMoverTheWinner:function(){return Ae}});var u={};r.r(u),r.d(u,{allColors:function(){return Le},generateNewBoard:function(){return Oe},getGameStateAfterAiMove:function(){return We},getGameStateAfterMove:function(){return qe},isAllowedStep:function(){return $e},isTheLastMoverTheWinner:function(){return Ke}});var h={};r.r(h),r.d(h,{generateNewBoard:function(){return it},getGameStateAfterAiMove:function(){return st},getGameStateAfterMove:function(){return at},isTheLastMoverTheWinner:function(){return ot}});var v={};r.r(v),r.d(v,{generateNewBoard:function(){return dt},getGameStateAfterAiMove:function(){return ut},getGameStateAfterMove:function(){return ht},isTheLastMoverTheWinner:function(){return ct}});var m={};r.r(m),r.d(m,{aiColor:function(){return zt},generateNewBoard:function(){return ft},getGameStateAfterAiMove:function(){return kt},getGameStateAfterMove:function(){return wt},inPlacingPhase:function(){return Pt},isTheLastMoverTheWinner:function(){return xt},pColor:function(){return yt}});var p={};r.r(p),r.d(p,{generateNewBoard:function(){return Ct},getGameStateAfterAiMove:function(){return Rt},getGameStateAfterMove:function(){return Ht},getOptimalAiPlacingPosition:function(){return Lt},isTheLastMoverTheWinner:function(){return Dt},playerColor:function(){return Nt}});var b={};r.r(b),r.d(b,{generateNewBoard:function(){return Kt},getGameStateAfterAiMove:function(){return Jt},getGameStateAfterMove:function(){return Xt},getOptimalAiPlacingPosition:function(){return tr},isTheLastMoverTheWinner:function(){return Qt},playerColor:function(){return Yt}});var g={};r.r(g),r.d(g,{generateNewBoard:function(){return ar},getAllowedMoves:function(){return ur},getGameStateAfterAiMove:function(){return nr},getGameStateAfterMove:function(){return dr},isTheLastMoverTheWinner:function(){return lr}});var f={};r.r(f),r.d(f,{BISHOP:function(){return zr},FORBIDDEN:function(){return wr},generateNewBoard:function(){return kr},getAllowedMoves:function(){return Mr},getGameStateAfterAiMove:function(){return Pr},getGameStateAfterMove:function(){return Tr},isTheLastMoverTheWinner:function(){return xr}});var k=r(821),y=(r(7658),r(3907)),z={template:r(8773),computed:{...(0,y.Se)(["isEnemyMoveInProgress"])}},w={name:"game-sidebar",template:r(9102),components:{EnemyLoader:z},computed:{...(0,y.rn)(["shouldPlayerMoveNext"]),...(0,y.Se)(["ctaText","isGameReadyToStart"])},methods:{...(0,y.nv)(["startGameWithRoleSelection","initializeGame"]),restartGame(){this.$emit("restart"),this.initializeGame()}},created(){this.initializeGame()}},x=r(4790),P={name:"game-rule",template:r(8806),components:{Disclosure:x.pJ,DisclosureButton:x.lG,DisclosurePanel:x.V2}},T={template:r(5470),components:{GameSidebar:w,GameRule:P},computed:{...(0,y.rn)(["shouldPlayerMoveNext"])},methods:{...(0,y.nv)(["endPlayerTurn","initializeGame"])},created(){this.initializeGame()}};const I=()=>[],M=e=>({board:e,isGameEnd:!0}),G=!0;var Z={template:r(379)},S={template:r(750)},A=r(676),j=r(7961);const C=(e,t)=>{if(t){const t=H(e);return F(e,t)}return{board:R(e),isGameEnd:!1}},B=null,N=()=>{const e=5;let t=[];for(let r=0;r<e-1;r++){const e=[];0===r&&e.push("blue"),1===(0,A.Z)(0,1)&&e.push("blue"),t.push(e)}t.push([]);for(let r=0;r<e-1;r++)for(let e of t[r])1===(0,A.Z)(0,1)&&(t[r].splice(e,1),t[r+1].push("blue","blue"));return t},F=(e,t)=>{let r,i=!1;for(let o=0;o<e.length;o++){const s=e[o].filter((e=>e!==t));s.length>0&&(0===o?(i=!0,r=!0):e[o-1].push(...s)),e[o]=[]}return 0!==(0,j.Z)(e).length||i||(i=!0,r=!1),{board:e,isGameEnd:i,hasFirstPlayerWon:r}},R=e=>{const t={blue:0,red:0},r=1===(0,A.Z)(0,1)?"red":"blue",i="blue"===r?"red":"blue";for(let o=0;o<e.length;o++)for(let s=0;s<e[o].length;s++){const a=t[r]<t[i]?r:i;e[o][s]=a,t[a]+=.5**o}return e},H=e=>{if(e[0].length>0)return e[0][0];const t={blue:0,red:0};for(let r=0;r<e.length;r++)for(const i of e[r])t[i]+=.5**r;return t["blue"]>t["red"]?"blue":"red"};var D={template:r(2428),components:{EnemyLoader:z,SoldierSvg:Z,CastleSvg:S,GameRule:P},data:()=>({hoveredPiece:null}),computed:{...(0,y.rn)({isPlayerSultan:e=>e.isPlayerTheFirstToMove}),...(0,y.rn)(["board","shouldPlayerMoveNext"]),...(0,y.Se)(["ctaText","isEnemyMoveInProgress","isGameInProgress","isGameReadyToStart"]),stepDescription(){return this.shouldPlayerMoveNext?this.isPlayerSultan?"Kattints a katonákra és válaszd két részre a seregedet.":"Kattints egy katonára vagy az alábbi gombok valamelyikére, hogy megsemmisítsd a vele azonos színű sereget.":""},groupOfHoveredPiece(){return this.hoveredPiece?this.board[this.hoveredPiece.rowIndex][this.hoveredPiece.pieceIndex]:null}},methods:{...(0,y.nv)(["endPlayerTurn","startGameWithRoleSelection","initializeGame"]),clickOnSoldier(e,t){this.shouldPlayerMoveNext&&(this.isPlayerSultan?this.toggleGroup(e,t):this.killGroup(this.board[e][t]))},showToBeKilled(e){return!(!this.shouldPlayerMoveNext||this.isPlayerSultan)&&(!!this.hoveredPiece&&e===this.groupOfHoveredPiece)},toggleGroup(e,t){this.shouldPlayerMoveNext&&this.isPlayerSultan&&(this.board[e][t]="blue"===this.board[e][t]?"red":"blue")},finalizeSoldierGrouping(){this.endPlayerTurn({board:this.board,isGameEnd:!1})},killGroup(e){this.endPlayerTurn(F(this.board,e))},resetTurnState(){this.hoveredPiece=null},restartGame(){this.resetTurnState(),this.initializeGame()}},created(){this.initializeGame()}},E=r(798),V=r(9012),O=r(576);const L=()=>[0,0,0,0],W=e=>{const t=$(e);return q(e,t)},q=(e,t)=>{const r=(0,E.Z)(e);return r[t]=r[t]+1,{board:r,isGameEnd:(0,V.Z)(r)>=6,hasFirstPlayerWon:!(0,O.Z)([...r].sort(),[0,1,2,3])}},K=null,$=e=>{const t=(0,V.Z)(e);if(t%2===0){if(0===t)return(0,A.Z)(0,3);if(2===t){let t=!1;for(let r=0;r<4;r++)2===e[r]&&(t=!0);if(t){let t=0;while(2!==e[t])t++;return t}{let t=(0,A.Z)(0,3);while(1===e[t])t=(0,A.Z)(0,3);return t}}if(4===t){let t=(0,E.Z)(e);if(t.sort(),t[3]>=3){let t=0;while(e[t]<3)t++;return t}if(0===t[0]){let t=0;while(0!==e[t]&&t<4)t++;return t}return(0,A.Z)(0,3)}}else{if(1===t)return(0,A.Z)(0,3);if(3===t){let t=!1;for(let r=0;r<4;r++)3===e[r]&&(t=!0);if(t){let t=(0,A.Z)(0,3);while(0!==e[t])t=(0,A.Z)(0,3);return t}{let t=(0,A.Z)(0,3);while(1!==e[t])t=(0,A.Z)(0,3);return t}}if(5===t){let t=(0,E.Z)(e);if(t.sort(),3===t[3]){if(2===t[2]){let t=(0,A.Z)(0,3);while(0!==e[t])t=(0,A.Z)(0,3);return t}{let t=(0,A.Z)(0,3);while(1!==e[t])t=(0,A.Z)(0,3);return t}}if(2===t[3]&&2===t[2]){let t=(0,A.Z)(0,3);while(2!==e[t])t=(0,A.Z)(0,3);return t}return(0,A.Z)(0,3)}}};var Y={template:r(4433),components:{GameSidebar:w,GameRule:P},computed:{...(0,y.rn)(["board","shouldPlayerMoveNext"])},methods:{...(0,y.nv)(["endPlayerTurn","initializeGame"]),placePiece(e){this.shouldPlayerMoveNext&&this.endPlayerTurn(q(this.board,e))}},created(){this.initializeGame()}};const _=()=>{const e=Array(5).fill(0),t=(0,A.Z)(4);return e[t]+=1,e},J=(e,t)=>{if(t){const t=U(e);return e[t[0]]+=1,e[t[1]]+=1,X(e)}{const t=ee(e);return e[t]+=1,X(e)}},X=e=>({board:e,isGameEnd:(0,V.Z)(e)>=10,hasFirstPlayerWon:!(0,O.Z)([...e].sort(),[0,1,2,3,4])}),Q=null,U=e=>{const t=(0,V.Z)(e);let r=(0,E.Z)(e);if(r.sort(),2===t){if(2===r[4]){const t=te(e,0);return[t,t]}return re(e,1,1)}if(5===t){if(0===(0,A.Z)(1))return 2===r[4]?re(e,2,2):[te(e,0),te(e,2)];if(2===r[4])return[te(e,1),te(e,2)];{const t=te(e,0);return[t,t]}}if(8===t){if(4===r[4]){if(3===r[3]){const t=te(e,0);return[t,t]}return[te(e,0),te(e,2)]}if(3===r[3])return 2===r[2]?[te(e,0),te(e,3)]:[te(e,1),te(e,3)];{const t=te(e,2);return[t,t]}}alert("illegal state")},ee=e=>{const t=(0,V.Z)(e);let r=(0,E.Z)(e);return r.sort(),1===t?(0,A.Z)(4):4===t?3===r[4]?te(e,3):2===r[4]&&1===r[3]?te(e,0):(0,A.Z)(4):7===t?4===r[4]?te(e,4):0===r[0]&&0!==r[1]?te(e,0):(0,A.Z)(4):void alert("illegal state")},te=(e,t)=>{let r=(0,A.Z)(4);while(e[r]!==t)r=(0,A.Z)(4);return r},re=(e,t,r)=>{let i=0;while(e[i]!==t||e[i]!==r)i++;let o=i+1;while(e[o]!==t||e[o]!==r)o++;return[i,o]};var ie={template:r(6818),components:{GameSidebar:w,GameRule:P},data:()=>({oneMoveDone:!1}),computed:{...(0,y.rn)(["board","shouldPlayerMoveNext","isPlayerTheFirstToMove"])},methods:{...(0,y.nv)(["endPlayerTurn","initializeGame"]),placePiece(e){this.shouldPlayerMoveNext&&(this.board[e]+=1,this.isPlayerTheFirstToMove||this.oneMoveDone?(this.oneMoveDone=!1,this.endPlayerTurn(X(this.board))):this.oneMoveDone=!0)}},created(){this.initializeGame()}};const oe=e=>le(e,ne(e)),se=()=>({current:0,target:(0,A.Z)(20,100),restricted:null}),ae=!1,le=(e,t)=>{const r=e.current+t,i=r>=e.target;return{board:{current:r,target:e.target,restricted:13-t},isGameEnd:i}},ne=({current:e,target:t,restricted:r})=>(t-e)%14===0||(t-e)%14===1||(t-e)%14-1===r?de(r):(t-e)%14-1,de=e=>{let t=e;while(t===e)t=(0,A.Z)(1,12);return t};var ce={template:r(975),components:{GameSidebar:w,GameRule:P},data:()=>({step:1}),computed:{...(0,y.rn)(["board","shouldPlayerMoveNext"])},methods:{...(0,y.nv)(["endPlayerTurn","initializeGame"]),attemptStep(){this.shouldPlayerMoveNext&&(this.step===this.board.restricted||this.step<=0||this.step>=13?alert("Ez a lépés nem megengedett"):this.endPlayerTurn(le(this.board,this.step)))},resetTurnState(){this.step=1}},created(){this.initializeGame()}};const ue=(e,t)=>2*(0,A.Z)(Math.ceil(e/2),Math.floor(t/2)),he=()=>[(0,A.Z)(3,10),(0,A.Z)(3,10)],ve=!0,me=e=>pe(e,be(e)),pe=(e,{pileId:t,pieceId:r})=>{const i=[r+1,e[t]-r-1];return{board:i,isGameEnd:(0,O.Z)(i,[1,1])}},be=e=>{const t=(0,A.Z)(0,1),r=e[t]%2===0||1===e[1-t]?t:1-t,i=ge(e[r]);return{pileId:r,pieceId:i}},ge=e=>2===e?0:ue(0,e-2);var fe={template:r(9007),components:{GameSidebar:w,GameRule:P},data:()=>({hoveredPiece:null}),computed:{...(0,y.rn)(["board","shouldPlayerMoveNext"]),...(0,y.Se)(["isGameReadyToStart","isGameFinished"])},methods:{...(0,y.nv)(["endPlayerTurn","initializeGame"]),isDisabled({pileId:e,pieceId:t}){return!this.shouldPlayerMoveNext||t===this.board[e]-1},clickPiece({pileId:e,pieceId:t}){this.isDisabled({pileId:e,pieceId:t})||(this.endPlayerTurn(pe(this.board,{pileId:e,pieceId:t})),this.hoveredPiece=null)},toBeLeft({pileId:e,pieceId:t}){return null!==this.hoveredPiece&&(e===this.hoveredPiece.pileId&&(this.hoveredPiece.pieceId!==this.board[e]-1&&!(t>this.hoveredPiece.pieceId)))},toBeRemoved({pileId:e}){return null!==this.hoveredPiece&&this.hoveredPiece.pileId!==e},currentChoiceDescription(e){if(this.isGameFinished)return"";const t=this.board[e];return!this.isGameReadyToStart&&this.shouldPlayerMoveNext&&this.hoveredPiece?this.hoveredPiece.pileId!==e?`${t} → 🗑️`:`${t} → ${this.hoveredPiece.pieceId+1}, ${t-this.hoveredPiece.pieceId-1}`:t}},created(){this.initializeGame()}};const ke=()=>{const e=(0,A.Z)(4,20),t=(0,A.Z)(Math.max(4,17-e),Math.min(20,33-e));return[e,t,37-e-t]},ye=(e,{removedPileId:t,splitPileId:r,pieceId:i})=>(t<r?(e[t]=i+1,e[r]=e[r]-i-1):(e[t]=e[r]-i-1,e[r]=i+1),{board:e,isGameEnd:xe(e)}),ze=!0,we=e=>{const t=Pe(e);return{board:t,isGameEnd:xe(t)}},xe=e=>(0,O.Z)(e,[1,1,1]),Pe=function(e){const t=(0,A.Z)(0,2);return e[0]%2===1||e[1]%2===1||e[2]%2===1?e[t]%2===0?e[(t+1)%3]%2===0?Te(e,t,(t+1)%3):Te(e,t,(t+2)%3):e[(t+1)%3]%2===0?Te(e,(t+1)%3,(t+2)%3):e[(t+2)%3]%2===0?Te(e,(t+2)%3,(t+1)%3):1!==e[t]?Te(e,t,(t+1)%3):1!==e[(t+1)%3]?Te(e,(t+1)%3,(t+2)%3):Te(e,(t+2)%3,t):2===e[0]&&2===e[1]&&2===e[2]?Te(e,t,(t+1)%3):Pe(e.map((e=>e/2))).map((e=>2*e))},Te=function(e,t,r){const i=e[t];let o=e;if(2===i)return o[t]=1,o[r]=1,o;const s=1+2*Math.ceil(Math.random()*Math.floor((i-2)/2));return o[t]=s,o[r]=i-s,o};var Ie={template:r(3762),components:{GameSidebar:w,GameRule:P},data:()=>({removedPileId:null,hoveredPiece:null}),computed:{...(0,y.rn)(["board","shouldPlayerMoveNext"]),...(0,y.Se)(["isGameInProgress","isGameFinished"])},methods:{...(0,y.nv)(["endPlayerTurn","initializeGame"]),isDisabled({pileId:e,pieceId:t}){return!this.shouldPlayerMoveNext||null!==this.removedPileId&&(e!==this.removedPileId&&t===this.board[e]-1)},pieceClickNotAllowed({pileId:e,pieceId:t}){return null!==this.removedPileId&&(this.removedPileId!==e&&t===this.board[e]-1)},clickPiece({pileId:e,pieceId:t}){this.shouldPlayerMoveNext&&(this.removedPileId!==e?null!==this.removedPileId?t!==this.board[e]-1&&(this.endPlayerTurn(ye(this.board,{removedPileId:this.removedPileId,splitPileId:e,pieceId:t})),this.resetTurnState()):this.removedPileId=e:this.removedPileId=null)},toBeLeft({pileId:e,pieceId:t}){return null!==this.hoveredPiece&&(null!==this.removedPileId&&(this.removedPileId!==e&&(e===this.hoveredPiece.pileId&&(this.hoveredPiece.pieceId!==this.board[e]-1&&!(t>this.hoveredPiece.pieceId)))))},currentChoiceDescription(e){if(this.isGameFinished)return"";const t=this.board[e];return this.shouldPlayerMoveNext?e===this.removedPileId?this.hoveredPiece&&this.hoveredPiece.pileId===e?"Mégse?":`${t} → 🗑️`:this.hoveredPiece?null===this.removedPileId&&this.hoveredPiece.pileId===e?`${t} → 🗑️`:this.hoveredPiece.pileId!==e?t:`${t} → ${this.hoveredPiece.pieceId+1}, ${t-this.hoveredPiece.pieceId-1}`:t:t},resetTurnState(){this.hoveredPiece=null,this.removedPileId=null}},created(){this.initializeGame()}},Me=r(4379),Ge=r(1766);const Ze=()=>[(0,A.Z)(4,18),(0,A.Z)(4,18),(0,A.Z)(4,18),(0,A.Z)(4,18)],Se=(e,{removedPileId:t,splitPileId:r,pieceId:i})=>(t<r?(e[t]=i+1,e[r]=e[r]-i-1):(e[t]=e[r]-i-1,e[r]=i+1),{board:e,isGameEnd:je(e)}),Ae=!0,je=e=>(0,O.Z)(e,[1,1,1,1]),Ce=e=>{const t=Be(e);return{board:t,isGameEnd:je(t)}},Be=e=>{const t=(0,A.Z)(0,3),r=e.filter((e=>e%2===1)).length;if(4===r){const t=(0,Me.Z)(0,3).filter((t=>1!==e[t])),r=(0,Ge.Z)(t);return Ne(e,r,(r+1)%4)}if(3===r){const t=(0,Me.Z)(0,3).find((t=>e[t]%2===0));return Ne(e,t,(t+1)%4)}if(2===r){const t=(0,Me.Z)(0,3).filter((t=>e[t]%2===0));return Ne(e,t[0],t[1])}if(1===r){const t=(0,Me.Z)(0,3).find((t=>e[t]%2===1));if(1===e[t]&&2===e[(t+1)%4]&&2===e[(t+2)%4]&&2===e[(t+3)%4])return Ne(e,(t+1)%4,(t+2)%4);{let r=e;return r[t]+=1,r=Be(r),r[t]-=1,r}}if(0===r)return 2===e[0]&&2===e[1]&&2===e[2]&&2===e[3]?Ne(e,t,(t+1)%4):Be(e.map((e=>e/2))).map((e=>2*e))},Ne=function(e,t,r){const i=e[t];let o=e;if(2===i)return o[t]=1,o[r]=1,o;const s=1+2*Math.ceil(Math.random()*Math.floor((i-2)/2));return o[t]=s,o[r]=i-s,o};var Fe={template:r(2680),components:{GameSidebar:w,GameRule:P},data:()=>({removedPileId:null,hoveredPiece:null}),computed:{...(0,y.rn)(["board","shouldPlayerMoveNext"]),...(0,y.Se)(["isGameInProgress","isGameReadyToStart","isGameFinished"])},methods:{...(0,y.nv)(["endPlayerTurn","initializeGame"]),isDisabled({pileId:e,pieceId:t}){return!this.shouldPlayerMoveNext||null!==this.removedPileId&&(e!==this.removedPileId&&t===this.board[e]-1)},leftBorder(e){return 1===e&&this.board[1]>this.board[0]||3===e&&this.board[3]>this.board[2]},rightBorder(e){return 0===e&&this.board[1]<=this.board[0]||2===e&&this.board[3]<=this.board[2]},rowColor({pileId:e}){return this.isGameInProgress?e===this.removedPileId?null===this.hoveredPiece?"red":this.hoveredPiece.pileId===e?"blue":"red":null===this.hoveredPiece?"blue":null===this.removedPileId&&this.hoveredPiece.pileId===e?"red":"blue":"blue"},pieceClickNotAllowed({pileId:e,pieceId:t}){return null!==this.removedPileId&&(this.removedPileId!==e&&t===this.board[e]-1)},clickPiece({pileId:e,pieceId:t}){this.shouldPlayerMoveNext&&(this.removedPileId!==e?null!==this.removedPileId?t!==this.board[e]-1&&(this.endPlayerTurn(Se(this.board,{removedPileId:this.removedPileId,splitPileId:e,pieceId:t})),this.resetTurnState()):this.removedPileId=e:this.removedPileId=null)},toBeLeft({pileId:e,pieceId:t}){return null!==this.hoveredPiece&&(null!==this.removedPileId&&(this.removedPileId!==e&&(e===this.hoveredPiece.pileId&&(this.hoveredPiece.pieceId!==this.board[e]-1&&!(t>this.hoveredPiece.pieceId)))))},currentChoiceDescription(e){if(this.isGameFinished)return"";const t=this.board[e];return this.isGameReadyToStart||!this.shouldPlayerMoveNext?t:e===this.removedPileId?this.hoveredPiece&&this.hoveredPiece.pileId===e?"Mégse?":`${t} → 🗑️`:this.hoveredPiece?null===this.removedPileId&&this.hoveredPiece.pileId===e?`${t} → 🗑️`:this.hoveredPiece.pileId!==e?t:`${t} → ${this.hoveredPiece.pieceId+1}, ${t-this.hoveredPiece.pieceId-1}`:t},resetTurnState(){this.hoveredPiece=null,this.removedPileId=null}},created(){this.initializeGame()}},Re=r(8146),He=r(5504),De=r(4081),Ee=r(912),Ve=r(7786);const Oe=()=>Array(8).fill(null),Le=["red","green","blue"],We=(e,t)=>(e=t?Qe(e):Xe(e),qe(e)),qe=e=>({board:e,isGameEnd:_e(e),hasFirstPlayerWon:Je(e)}),Ke=null,$e=(e,t,r)=>!!(0,Re.Z)(e[t])&&(0,He.Z)(Ye[t],(t=>(0,Re.Z)(e[t])||e[t]!==r)),Ye={0:[1,3,4],1:[0,2,5],2:[1,3,4,6],3:[0,2,7],4:[0,2,5,7],5:[1,4,6],6:[2,5,7],7:[3,4,6]},_e=e=>{const t=t=>(0,De.Z)((0,Me.Z)(0,8),(r=>$e(e,r,t)));return(0,He.Z)(Le,(e=>!t(e)))},Je=e=>(0,He.Z)(e,(e=>!(0,Re.Z)(e))),Xe=e=>{const t=(0,Ee.Z)([2,4]),r=(0,Ee.Z)([0,1,3,5,6,7]),i=[...t,...r].find((t=>(0,Re.Z)(e[t]))),o=Le.filter((t=>$e(e,i,t)));return e[i]=(0,Ge.Z)(o),e},Qe=e=>{const t=(0,Ee.Z)((0,Me.Z)(0,8)).filter((t=>(0,Re.Z)(e[t])));for(const i of t){const t=Ue(e,i);if(1===t.length)for(const r of et(e,i))if($e(e,r,t[0]))return e[r]=t[0],e}const r=(0,Ee.Z)([[0,6],[6,0],[1,7],[7,1],[3,5],[5,3]]);for(const i of r)if(!(0,Re.Z)(e[i[0]])&&$e(e,i[1],e[i[0]]))return e[i[1]]=e[i[0]],e;for(const i of t){const t=Ue(e,i);if(2===t.length)for(const r of et(e,i))if($e(e,r,t[0]))return e[r]=t[0],e}for(const i of t)for(const t of(0,Ee.Z)(Le))if($e(e,i,t))return e[i]=t,e;console.error("This state should not happen")},Ue=(e,t)=>{const r=Ye[t].map((t=>e[t]));return(0,Ve.Z)(Le,r)},et=(e,t)=>Ye[t].filter((t=>(0,Re.Z)(e[t])));var tt={name:"cube-coloring",template:r(8818),components:{GameSidebar:w,GameRule:P},computed:{...(0,y.rn)(["board","shouldPlayerMoveNext"]),allColors:()=>Le},data(){return{color:"",show:!1,x:0,y:0}},methods:{...(0,y.nv)(["endPlayerTurn","initializeGame"]),isMoveAllowed(e){return!!this.shouldPlayerMoveNext&&(!!this.show&&$e(this.board,e,this.color))},pick(e){this.shouldPlayerMoveNext&&(this.color===e?this.show=!this.show:(this.show=!0,this.color=e))},drawPickedColor(e){this.x=e.offsetX,this.y=e.offsetY},setColor(e){this.isMoveAllowed(e)&&(this.board[e]=this.color,this.show=!1,this.endPlayerTurn(qe(this.board)))},resetTurnState(){this.color="",this.show=!1}},created(){this.initializeGame()}},rt=r(1092);const it=()=>{const e=[(0,A.Z)(0,6),(0,A.Z)(0,6),(0,A.Z)(0,6)];return 0!==e[1]||0!==e[2]?e:it()},ot=!0,st=e=>{const t=[0,1,2].filter((t=>e[t]%2===1));return 3!==t.length&&0!==t.length||(e[(0,rt.Z)(e,(e=>e>0))]-=1),2===t.length&&(e[t[1]]-=1,e[t[0]]+=1),1===t.length&&(e[t[0]]-=1),at(e)},at=e=>({board:e,isGameEnd:lt(e)}),lt=e=>0===e[0]&&0===e[1]&&0===e[2];var nt={template:r(3590),components:{GameSidebar:w,GameRule:P},data:()=>({valueOfRemovedCoin:null,hoveredPile:null}),computed:{...(0,y.rn)(["board","shouldPlayerMoveNext"]),wasCoinAlreadyRemovedInTurn(){return null!==this.valueOfRemovedCoin},stepDescription(){return this.wasCoinAlreadyRemovedInTurn?"Kattints egy mezőre, hogy visszatégy egy olyan pénzérmét":"Kattints egy mezőre, hogy elvegyél egy olyan pénzérmét"}},methods:{...(0,y.nv)(["endPlayerTurn","initializeGame"]),isMoveAllowed(e){return!!this.shouldPlayerMoveNext&&!this.isCoinActionInvalid(e)},clickPile(e){this.isMoveAllowed(e)&&(this.wasCoinAlreadyRemovedInTurn?(this.board[e]+=1,this.endTurn()):(this.valueOfRemovedCoin=e,this.board[e]-=1,0===e&&this.endTurn()))},resetTurnState(){this.hoveredPile=null,this.valueOfRemovedCoin=null},endTurn(){this.endPlayerTurn(at(this.board)),this.resetTurnState()},getCoinColor(e){return 0===e?"bg-yellow-700":1===e?"bg-slate-700":"bg-yellow-400"},shouldShowCoinToBeRemoved(e){return!!this.shouldPlayerMoveNext&&(!this.wasCoinAlreadyRemovedInTurn&&(e===this.hoveredPile&&0!==this.board[e]))},shouldShowCoinToBeAdded(e){return!!this.wasCoinAlreadyRemovedInTurn&&(this.valueOfRemovedCoin>e&&e===this.hoveredPile)},isCoinActionInvalid(e){return this.wasCoinAlreadyRemovedInTurn?this.valueOfRemovedCoin<=e:0===this.board[e]}},created(){this.initializeGame()}};const dt=()=>[3,5,7],ct=!0,ut=e=>{const t=[0,1,2].filter((t=>e[t]%2===1));return 3!==t.length&&0!==t.length||(e[(0,rt.Z)(e,(e=>e>0))]-=1),2===t.length&&(e[t[1]]-=1,e[t[0]]+=1),1===t.length&&(e[t[0]]-=1),ht(e)},ht=e=>({board:e,isGameEnd:vt(e)}),vt=e=>0===e[0]&&0===e[1]&&0===e[2];var mt={template:r(5324),components:{GameSidebar:w,GameRule:P},data:()=>({valueOfRemovedCoin:null,hoveredPile:null}),computed:{...(0,y.rn)(["board","shouldPlayerMoveNext"]),wasCoinAlreadyRemovedInTurn(){return null!==this.valueOfRemovedCoin},stepDescription(){return this.wasCoinAlreadyRemovedInTurn?"Kattints egy mezőre, hogy visszatégy egy olyan pénzérmét":"Kattints egy mezőre, hogy elvegyél egy olyan pénzérmét"}},methods:{...(0,y.nv)(["endPlayerTurn","initializeGame"]),isMoveAllowed(e){return!!this.shouldPlayerMoveNext&&!this.isCoinActionInvalid(e)},clickPile(e){this.isMoveAllowed(e)&&(this.wasCoinAlreadyRemovedInTurn?(this.board[e]+=1,this.endTurn()):(this.valueOfRemovedCoin=e,this.board[e]-=1,0===e&&this.endTurn()))},resetTurnState(){this.hoveredPile=null,this.valueOfRemovedCoin=null},endTurn(){this.endPlayerTurn(ht(this.board)),this.resetTurnState()},getCoinColor(e){return 0===e?"bg-yellow-700":1===e?"bg-slate-700":"bg-yellow-400"},shouldShowCoinToBeRemoved(e){return!!this.shouldPlayerMoveNext&&(!this.wasCoinAlreadyRemovedInTurn&&(e===this.hoveredPile&&0!==this.board[e]))},shouldShowCoinToBeAdded(e){return!!this.wasCoinAlreadyRemovedInTurn&&(this.valueOfRemovedCoin>e&&e===this.hoveredPile)},isCoinActionInvalid(e){return this.wasCoinAlreadyRemovedInTurn?this.valueOfRemovedCoin<=e:0===this.board[e]}},created(){this.initializeGame()}},pt=r(4911);const bt=()=>Array(9).fill(null),gt=e=>{const t=[[0,1,2],[3,4,5],[6,7,8],[0,3,6],[1,4,7],[2,5,8],[0,4,8],[2,4,6]],r=t=>0===(0,Ve.Z)(t,e).length;return(0,De.Z)(t,r)},ft=bt,kt=e=>{const t=Tt(e);return e[t]=St(e,!1),wt(e)},yt="blue",zt="red",wt=e=>({board:e,isGameEnd:At(e)}),xt=!0,Pt=e=>void 0!==e.find(Re.Z),Tt=e=>Pt(e)?It(e):Mt(e),It=e=>{const t=Zt(e,!1);if(9===t.length)return(0,Ge.Z)([0,2,4,6,8]);const r=t.find((t=>{const r=(0,E.Z)(e);return r[t]=zt,At(r)}));if(void 0!==r)return r;const i=t.find((t=>{const r=(0,E.Z)(e);return r[t]=yt,At(r)}));if(void 0!==i)return i;const o=t.filter((t=>{const r=(0,E.Z)(e);return r[t]=zt,Gt(r,!1)}));return o.length>0?(0,Ge.Z)(o):(0,Ge.Z)(t)},Mt=e=>{const t=Zt(e,!1),r=t.filter((t=>{const r=(0,E.Z)(e);return r[t]="white",Gt(r,!1)}));return void 0!==r.find((e=>4===e))?4:r.length>0?(0,Ge.Z)(r):(0,Ge.Z)(t)},Gt=(e,t)=>{if(At(e))return!0;const r=Zt(e,!t),i=St(e,!t),o=r.find((r=>{const o=(0,E.Z)(e);return o[r]=i,Gt(o,!t)}));return void 0===o},Zt=(e,t)=>{if(Pt(e))return(0,Me.Z)(0,9).filter((t=>(0,Re.Z)(e[t])));const r=t?zt:yt;return(0,Me.Z)(0,9).filter((t=>e[t]===r))},St=(e,t)=>Pt(e)?t?yt:zt:"white",At=e=>{const t=(0,Me.Z)(0,9).filter((t=>e[t])),r=(0,pt.Z)(t,(t=>e[t]));return(0,De.Z)(r,gt)};var jt={template:r(6546),components:{GameSidebar:w,GameRule:P},computed:{...(0,y.rn)(["board","shouldPlayerMoveNext"]),inPlacingPhase(){return Pt(this.board)}},methods:{...(0,y.nv)(["endPlayerTurn","initializeGame"]),clickField(e){this.isMoveAllowed(e)&&(this.board[e]=this.inPlacingPhase?yt:"white",this.endPlayerTurn(wt(this.board)))},isMoveAllowed(e){return!!this.shouldPlayerMoveNext&&(this.inPlacingPhase?null===this.board[e]:this.board[e]===zt)},pieceColor(e){const t=this.board[e];return"red"===t?"bg-red-600":"white"===t?"bg-white":"bg-blue-600"}},created(){this.initializeGame()}};const Ct=bt,Bt=["red","blue"],Nt=e=>e?Bt[0]:Bt[1],Ft=e=>e?Bt[1]:Bt[0],Rt=(e,t)=>{if(0===e.filter((e=>e)).length){const t=(0,Ge.Z)([[0,2],[2,8],[6,8],[0,6]]);e[t[0]]=Bt[0],e[t[1]]=Bt[0]}else e[Lt(e,t)]=Ft(t);return Ht(e)},Ht=e=>({board:e,isGameEnd:Vt(e),hasFirstPlayerWon:Et(e)}),Dt=null,Et=e=>{if(Vt(e))return Ot(e,0)&&!Ot(e,1)},Vt=e=>9===e.filter((e=>e)).length||Ot(e,1),Ot=(e,t)=>gt((0,Me.Z)(0,9).filter((r=>e[r]===Bt[t]))),Lt=(e,t)=>{const r=(0,Me.Z)(0,9).filter((t=>(0,Re.Z)(e[t]))),i=r.filter((r=>{const i=(0,E.Z)(e);return i[r]=Ft(t),Wt(i,!t)}));if(i.length>0)return(0,Ge.Z)(i);const o=(0,Me.Z)(0,9).filter((r=>e[r]===Nt(t))),s=r.filter((e=>gt([...o,e])));return s.length>0?(0,Ge.Z)(s):(0,Ge.Z)(r)},Wt=(e,t)=>{if(Vt(e))return t===Et(e);const r=(0,Me.Z)(0,9).filter((t=>(0,Re.Z)(e[t]))),i=r.find((r=>{const i=(0,E.Z)(e);return i[r]=Bt[t?1:0],Wt(i,!t)}));return void 0===i};var qt={template:r(4394),components:{GameSidebar:w,GameRule:P},computed:{...(0,y.rn)(["board","shouldPlayerMoveNext","isPlayerTheFirstToMove"]),isDuringFirstMove(){return this.board.filter((e=>e)).length<=1}},methods:{...(0,y.nv)(["endPlayerTurn","initializeGame"]),isMoveAllowed(e){return!!this.shouldPlayerMoveNext&&null===this.board[e]},clickField(e){this.shouldPlayerMoveNext&&(this.board[e]||(this.board[e]=Nt(this.isPlayerTheFirstToMove),this.isDuringFirstMove||this.endPlayerTurn(Ht(this.board))))},pieceColor(e){const t=this.board[e];return"red"===t?"bg-red-600":"bg-blue-600"}},created(){this.initializeGame()}};const Kt=bt,$t=["red","blue"],Yt=e=>e?$t[0]:$t[1],_t=e=>e?$t[1]:$t[0],Jt=(e,t)=>(e[tr(e,t)]=_t(t),Xt(e)),Xt=e=>({board:e,isGameEnd:Ut(e),hasFirstPlayerWon:er(e)}),Qt=null,Ut=e=>{if(9===e.filter((e=>e)).length)return!0;const t=(0,Me.Z)(0,9).filter((t=>e[t])),r=(0,pt.Z)(t,(t=>e[t]));return(0,De.Z)(r,gt)},er=e=>{if(Ut(e))return 9===e.filter((e=>e)).length?!gt((0,Me.Z)(0,9).filter((t=>e[t]===$t[0]))):e.filter((e=>e)).length%2===0},tr=(e,t)=>{const r=(0,Me.Z)(0,9).filter((t=>(0,Re.Z)(e[t])));if(9===r.length)return 4;if(!t){const t=[[0,8],[1,7],[2,6],[3,5],[5,3],[6,2],[7,1][0]];for(const r of t)if(!(0,Re.Z)(e[r[0]])&&(0,Re.Z)(e[r[1]]))return r[1]}const i=r.filter((r=>{const i=(0,E.Z)(e);return i[r]=_t(t),rr(i,!t)}));if(i.length>0)return(0,Ge.Z)(i);const o=(0,Me.Z)(0,9).filter((r=>e[r]===_t(t))),s=r.filter((e=>!gt([...o,e])));return s.length>0?(0,Ge.Z)(s):(0,Ge.Z)(r)},rr=(e,t)=>{if(Ut(e))return t===er(e);const r=(0,Me.Z)(0,9).filter((t=>(0,Re.Z)(e[t]))),i=r.find((r=>{const i=(0,E.Z)(e);return i[r]=$t[t?1:0],rr(i,!t)}));return void 0===i};var ir={template:r(5453),components:{GameSidebar:w,GameRule:P},computed:{...(0,y.rn)(["board","shouldPlayerMoveNext","isPlayerTheFirstToMove"])},methods:{...(0,y.nv)(["endPlayerTurn","initializeGame"]),isMoveAllowed(e){return!!this.shouldPlayerMoveNext&&null===this.board[e]},clickField(e){this.isMoveAllowed(e)&&(this.board[e]=Yt(this.isPlayerTheFirstToMove),this.endPlayerTurn(Xt(this.board)))},pieceColor(e){const t=this.board[e];return"red"===t?"bg-red-600":"bg-blue-600"}},created(){this.initializeGame()}},or={template:r(2176)},sr=r(935);const ar=()=>{const e=(0,Me.Z)(0,8).map((()=>(0,Me.Z)(0,8).map((()=>null))));return e[0][0]="rook",{chessBoard:e,rookPosition:{row:0,col:0}}},lr=!0,nr=e=>{const t=cr(e);return dr(e,t)},dr=(e,{row:t,col:r})=>(hr(e,e.rookPosition,{row:t,col:r}),e.chessBoard[t][r]="rook",e.rookPosition={row:t,col:r},{board:e,isGameEnd:0===ur(e).length}),cr=e=>{const{row:t,col:r}=e.rookPosition,i=[];let o=1;while(r-o>=0&&null===e.chessBoard[t][r-o])i.push({row:t,col:r-o}),o+=1;o=1;while(r+o<=7&&null===e.chessBoard[t][r+o])i.push({row:t,col:r+o}),o+=1;const s=[];o=1;while(t-o>=0&&null===e.chessBoard[t-o][r])s.push({row:t-o,col:r}),o+=1;o=1;while(t+o<=7&&null===e.chessBoard[t+o][r])s.push({row:t+o,col:r}),o+=1;return i.length<s.length?(0,sr.Z)(s):i.length>s.length||1===(0,A.Z)(0,1)?(0,sr.Z)(i):(0,sr.Z)(s)},ur=e=>{const{row:t,col:r}=e.rookPosition,i=[];let o=1;while(t-o>=0&&null===e.chessBoard[t-o][r])i.push({row:t-o,col:r}),o+=1;o=1;while(t+o<=7&&null===e.chessBoard[t+o][r])i.push({row:t+o,col:r}),o+=1;o=1;while(r-o>=0&&null===e.chessBoard[t][r-o])i.push({row:t,col:r-o}),o+=1;o=1;while(r+o<=7&&null===e.chessBoard[t][r+o])i.push({row:t,col:r+o}),o+=1;return i},hr=(e,t,r)=>{t.row===r.row&&(0,Me.Z)(t.col,r.col).forEach((r=>{e.chessBoard[t.row][r]="visited"})),t.col===r.col&&(0,Me.Z)(t.row,r.row).forEach((r=>{e.chessBoard[r][t.col]="visited"}))};var vr={template:r(4967),components:{GameSidebar:w,ChessRookSvg:or,GameRule:P},computed:{...(0,y.rn)(["board","shouldPlayerMoveNext"])},methods:{...(0,y.nv)(["endPlayerTurn","initializeGame"]),clickField(e){this.isMoveAllowed(e)&&this.endPlayerTurn(dr(this.board,e))},isMoveAllowed(e){return!!this.shouldPlayerMoveNext&&(0,De.Z)(ur(this.board),(t=>(0,O.Z)(t,e)))}},created(){this.initializeGame()}},mr={template:r(8062)},pr=r(4711);const br="h",gr="v";let fr=null;const kr=()=>(fr=null,(0,Me.Z)(0,8).map((()=>(0,Me.Z)(0,8).map((()=>null))))),yr=(0,pr.Z)((0,Me.Z)(0,8),(e=>(0,Me.Z)(0,8).map((t=>({row:e,col:t}))))),zr=1,wr=2,xr=!0,Pr=e=>{const t=Ir(e);return Tr(e,t)},Tr=(e,{row:t,col:r})=>(Gr(e,{row:t,col:r}),e[t][r]=zr,{board:e,isGameEnd:0===Mr(e).length}),Ir=e=>{const t=yr.filter((({row:t,col:r})=>null===e[t][r]&&e[t][7-r]===zr)),r=yr.filter((({row:t,col:r})=>null===e[t][r]&&e[7-t][r]===zr)),i=yr.filter((({row:t,col:r})=>e[t][r]===zr)).length;if(1===i&&(fr=(0,A.Z)(0,1)?br:gr),2===i&&(0===t.length&&(fr=br),0===r.length&&(fr=gr)),fr===br&&1===t.length)return t[0];if(fr===gr&&1===r.length)return r[0];const o=Mr(e);if(i>=4){const t=(0,Ee.Z)(o).find((({row:t,col:r})=>{const i=(0,E.Z)(e);return Gr(i,{row:t,col:r}),i[t][r]=zr,Zr(i,!1)}));if(void 0!==t)return t}return(0,Ge.Z)(o)},Mr=e=>yr.filter((({row:t,col:r})=>null===e[t][r])),Gr=(e,{row:t,col:r})=>{(0,Me.Z)(0,8).forEach((i=>{t-i>=0&&r-i>=0&&(e[t-i][r-i]=wr),t+i<=7&&r+i<=7&&(e[t+i][r+i]=wr),t+i<=7&&r-i>=0&&(e[t+i][r-i]=wr),t-i>=0&&r+i<=7&&(e[t-i][r+i]=wr)}))},Zr=(e,t)=>{if(0===Mr(e).length)return!0;const r=Mr(e),i=r.find((({row:r,col:i})=>{const o=(0,E.Z)(e);return Gr(o,{row:r,col:i}),o[r][i]=zr,Zr(o,!t)}));return void 0===i};var Sr={template:r(1451),components:{GameSidebar:w,ChessBishopSvg:mr,GameRule:P},data:()=>({hoveredField:null}),computed:{...(0,y.rn)(["board","shouldPlayerMoveNext"])},methods:{...(0,y.nv)(["endPlayerTurn","initializeGame"]),clickField(e){this.isMoveAllowed(e)&&this.endPlayerTurn(Tr(this.board,e))},isPotentialNextStep(e){return!!this.isMoveAllowed(e)&&(!!this.hoveredField&&(0,O.Z)(this.hoveredField,e))},isMoveAllowed(e){return!!this.shouldPlayerMoveNext&&(0,De.Z)(Mr(this.board),(t=>(0,O.Z)(t,e)))},isForbidden({row:e,col:t}){return this.board[e][t]===wr},isBishop({row:e,col:t}){return this.board[e][t]===zr},wouldBeForbidden({row:e,col:t}){return!!this.shouldPlayerMoveNext&&(!!this.hoveredField&&(!!this.isMoveAllowed(this.hoveredField)&&(!!this.isMoveAllowed({row:e,col:t})&&(!this.isPotentialNextStep({row:e,col:t})&&Math.abs(e-this.hoveredField.row)===Math.abs(t-this.hoveredField.col)))))}},created(){this.initializeGame()}};const Ar={Demonstration:T,HunyadiAndTheJanissaries:D,TwoTimesTwo:Y,FiveSquares:ie,SuperstitiousCounting:ce,PileSplitter:fe,PileSplitter3:Ie,PileSplitter4:Fe,CubeColoring:tt,Coin123:nt,Coin357:mt,TicTacToe:jt,TicTacToeDoubleStart:qt,AntiTicTacToe:ir,ChessRook:vr,ChessBishops:Sr},jr={ChessBishops:{year:1,round:"döntő",category:"B",component:"ChessBishops",name:"Sakktáblán futók",strategy:f},ChessRook:{year:1,round:"döntő",category:"C",component:"ChessRook",name:"Sakktáblán egy bástya",strategy:g},HunyadiAndTheJanissaries:{year:6,round:"döntő",category:"D",component:"HunyadiAndTheJanissaries",name:"Hunyadi és a janicsárok",strategy:o},PileSplitter:{year:8,round:"döntő",category:"A",component:"PileSplitter",name:"Kupac kettéosztó",strategy:n},PileSplitter3:{year:8,round:"döntő",category:"B",name:"Kupac kettéosztó 3 kupaccal",component:"PileSplitter3",strategy:d},Demonstration:{name:"Demonstráló játék",component:"Demonstration",strategy:i,isHiddenFromOverview:!0},TicTacToeDoubleStart:{year:12,round:"döntő",category:"A",name:"Duplán kezdő 3x3 amőba",component:"TicTacToeDoubleStart",strategy:p},AntiTicTacToe:{year:12,round:"döntő",category:"B",name:"3x3 Anti-amőba",component:"AntiTicTacToe",strategy:b},TwoTimesTwo:{year:13,round:"döntő",category:"A",name:"2x2-es játék",component:"TwoTimesTwo",strategy:s},FiveSquares:{year:13,round:"döntő",category:"B",name:"5 mezős játék",component:"FiveSquares",strategy:a},TicTacToe:{year:13,round:"döntő",category:"C",name:"Átszínezős Tic Tac Toe",component:"TicTacToe",strategy:m},SuperstitiousCounting:{year:13,round:"döntő",category:"D",name:"Babonás számoló",component:"SuperstitiousCounting",strategy:l},PileSplitter4:{year:13,round:"döntő",category:"E+",name:"Kupac kettéosztó 4 kupaccal",component:"PileSplitter4",strategy:c},CubeColoring:{year:15,round:"döntő",category:"C",name:"Kockaszínezés",component:"CubeColoring",strategy:u},Coin357:{year:15,round:"döntő",category:"A",name:"3 db 1, 5 db 2 és 7 db 3 pengős",component:"Coin357",strategy:v},Coin123:{year:15,round:"döntő",category:"B",name:"3, 2, 1 érmék",component:"Coin123",strategy:h}};var Cr={template:r(8953)},Br={template:r(487),components:{...Ar,PageNotFound:Cr},props:{gameId:String},computed:{...(0,y.rn)(["gameDefinition"])},methods:{...(0,y.OI)(["setGameDefinition","setGameStatus"]),goBackToOverview(){this.$router.push("/")},setGameBasedOnRoute(){this.setGameDefinition({gameId:this.gameId})}},mounted(){this.setGameBasedOnRoute()},watch:{gameId(){this.setGameBasedOnRoute()}}},Nr=r(1237),Fr=r(981),Rr={template:r(411),components:{Listbox:Nr.Ri,ListboxButton:Nr.Y4,ListboxOptions:Nr.O_,ListboxOption:Nr.wt},data:()=>({allCategories:["A","B","C","C+","D","D+","E","E+"],selectedCategories:[],selectedYears:[]}),computed:{allGames(){return Object.values(jr).filter((e=>!e.isHiddenFromOverview))},allYears(){return(0,Fr.Z)(this.allGames.map((e=>e.year)))},gamesToShow(){return this.allGames.filter((e=>this.selectedCategories.includes(e.category)||0===this.selectedCategories.length)).filter((e=>this.selectedYears.includes(e.year)||0===this.selectedYears.length))}},methods:{...(0,y.OI)(["setGameDefinition","setGameStatus"]),goToGamePage(e){this.$router.push(`/game/${e}`)}},mounted(){this.setGameDefinition({gameId:null}),this.setGameStatus(null)}},Hr={template:r(6203),components:{Game:Br,Overview:Rr},async errorCaptured(){window.alert("An unexpected error happened, it is our fault, not yours! Try refreshing the page.")}},Dr=()=>(0,y.MT)({state:{gameDefinition:null,board:null,gameStatus:null,isPlayerTheFirstToMove:null,shouldPlayerMoveNext:null,isPlayerWinner:null,enemyMoveTimeoutHandle:null,isEnemyMoveInProgress:null},getters:{isGameInProgress:e=>"inProgress"===e.gameStatus,isGameReadyToStart:e=>"readyToStart"===e.gameStatus,isGameFinished:e=>"finished"===e.gameStatus,isEnemyMoveInProgress:e=>e.isEnemyMoveInProgress&&null!==e.enemyMoveTimeoutHandle,ctaText:(e,t)=>t.isGameInProgress?e.shouldPlayerMoveNext?"Te jössz.":"Mi jövünk.":t.isGameFinished?e.isPlayerWinner?"Nyertél. Gratulálunk! :)":"Sajnos, most nem nyertél, de ne add fel.":"A gombra kattintva tudod elindítani a játékot."},mutations:{setGameDefinition(e,{gameId:t}){e.gameDefinition=jr[t]||null},setGameStatus(e,t){e.gameStatus=t},setBoard(e,t){e.board=t}},actions:{initializeGame({state:e,commit:t}){clearTimeout(e.enemyMoveTimeoutHandle),e.isEnemyMoveInProgress=!1,e.shouldPlayerMoveNext=null,e.isPlayerWinner=null,e.isPlayerTheFirstToMove=null,e.board=e.gameDefinition.strategy.generateNewBoard(),t("setGameStatus","readyToStart")},startGameWithRoleSelection:({state:e,dispatch:t},{isFirst:r=!0})=>{e.isPlayerTheFirstToMove=r,e.shouldPlayerMoveNext=r,e.gameStatus="inProgress",r||t("makeAiMove")},endPlayerTurn:({dispatch:e},{board:t,isGameEnd:r,hasFirstPlayerWon:i})=>{e("endTurn",{board:t,isGameEnd:r,hasFirstPlayerWon:i}),r||e("makeAiMove")},makeAiMove:async({state:e,dispatch:t})=>{e.isEnemyMoveInProgress=!0;const r=Math.floor(750*Math.random()+750);e.enemyMoveTimeoutHandle=setTimeout((()=>{t("endTurn",e.gameDefinition.strategy.getGameStateAfterAiMove(e.board,e.isPlayerTheFirstToMove)),e.isEnemyMoveInProgress=!1}),r)},endTurn({state:e,dispatch:t},{board:r,isGameEnd:i,hasFirstPlayerWon:o}){if(e.board=r,e.shouldPlayerMoveNext=!e.shouldPlayerMoveNext,i){const r=null===e.gameDefinition.strategy.isTheLastMoverTheWinner?e.isPlayerTheFirstToMove===o:e.gameDefinition.strategy.isTheLastMoverTheWinner===!e.shouldPlayerMoveNext;t("endGame",{isPlayerWinner:r})}},endGame({state:e},{isPlayerWinner:t}){e.isPlayerWinner=t,clearTimeout(e.enemyMoveTimeoutHandle),e.gameStatus="finished",e.shouldPlayerMoveNext=null}}}),Er=r(2201);const Vr=[{path:"/",component:Rr},{path:"/game/:gameId/",component:Br,props:!0},{path:"/:path(.*)*",component:Cr}];var Or=()=>(0,Er.p7)({history:(0,Er.r5)(),routes:Vr});const Lr=(0,k.ri)(Hr);Lr.use(Dr()),Lr.use(Or()),Lr.mount("#app")}},t={};function r(i){var o=t[i];if(void 0!==o)return o.exports;var s=t[i]={exports:{}};return e[i](s,s.exports,r),s.exports}r.m=e,function(){var e=[];r.O=function(t,i,o,s){if(!i){var a=1/0;for(c=0;c<e.length;c++){i=e[c][0],o=e[c][1],s=e[c][2];for(var l=!0,n=0;n<i.length;n++)(!1&s||a>=s)&&Object.keys(r.O).every((function(e){return r.O[e](i[n])}))?i.splice(n--,1):(l=!1,s<a&&(a=s));if(l){e.splice(c--,1);var d=o();void 0!==d&&(t=d)}}return t}s=s||0;for(var c=e.length;c>0&&e[c-1][2]>s;c--)e[c]=e[c-1];e[c]=[i,o,s]}}(),function(){r.d=function(e,t){for(var i in t)r.o(t,i)&&!r.o(e,i)&&Object.defineProperty(e,i,{enumerable:!0,get:t[i]})}}(),function(){r.g=function(){if("object"===typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(e){if("object"===typeof window)return window}}()}(),function(){r.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)}}(),function(){r.r=function(e){"undefined"!==typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})}}(),function(){var e={143:0};r.O.j=function(t){return 0===e[t]};var t=function(t,i){var o,s,a=i[0],l=i[1],n=i[2],d=0;if(a.some((function(t){return 0!==e[t]}))){for(o in l)r.o(l,o)&&(r.m[o]=l[o]);if(n)var c=n(r)}for(t&&t(i);d<a.length;d++)s=a[d],r.o(e,s)&&e[s]&&e[s][0](),e[s]=0;return r.O(c)},i=self["webpackChunkdurer_jatekok"]=self["webpackChunkdurer_jatekok"]||[];i.forEach(t.bind(null,0)),i.push=t.bind(null,i.push.bind(i))}();var i=r.O(void 0,[998],(function(){return r(1915)}));i=r.O(i)})();
//# sourceMappingURL=app.js.map