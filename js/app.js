(function(){var e={6203:function(e){var t='<div class="p-4"> <router-view></router-view> </div> ';e.exports=t},8773:function(e){var t='<div v-show="isEnemyMoveInProgress" class="animate-spin h-8 w-8 place-self-center border-t-blue-600 rounded-full border-4"></div> ';e.exports=t},9102:function(e){var t='<div class="p-1 flex flex-col grow-0 shrink-0 basis-64"> <p class="text-center font-bold text-lg">{{ ctaText }}</p> <enemy-loader/> <p v-if="shouldPlayerMoveNext" class="italic text-justify">{{ stepDescription }}</p> <button v-if="isGameReadyToStart" class="cta-button js-first-player" @click="startGameWithRoleSelection({ isFirst: true })"> Kezdő leszek </button> <button v-if="isGameReadyToStart" class="cta-button js-second-player" @click="startGameWithRoleSelection({ isFirst: false })"> Második leszek </button> <div class="flex flex-grow items-end"> <button class="cta-button mt-4 js-restart-game" @click="restartGame()"> Új játék </button> </div> </div> ';e.exports=t},9428:function(e){var t='<div> <p class="text-justify"> A 3×3-as antiamőba játékban a kezdő piros, a második kék korongokat rak le. Felváltva lépnek, és az veszít, akinek először lesz a saját színéből három korongja egy sorban, oszlopban vagy átlóban. Ha mind a kilenc mező foglalt és nincs ilyen koronghármas, akkor a kezdő nyer. Te döntheted el, hogy kezdeni szeretnél-e, vagy második játékos lenni. Sok sikert! :) </p> <div class="flex flex-wrap"> <div class="p-1 shrink-0 grow basis-8/12"> <table class="m-2 border-collapse"> <tr v-for="row in [0, 1, 2]" :key="row"> <td v-for="col in [0, 1, 2]" :key="col" @click="clickField({ row, col })" class="text-center h-36 w-36 border-4 text-8xl"> <span v-if="board[row * 3 + col]" class="h-16 w-16 p-1 inline-block rounded-full mr-1" :class="pieceColor({ row, col })"></span> </td> </tr> </table> </div> <game-sidebar :step-description="stepDescription"></game-sidebar> </div> </div> ';e.exports=t},8062:function(e){var t='<svg style="display:none"> <symbol id="game-chess-bishop" viewBox="-96 0 512 512"> <path d="M8 287.88c0 51.64 22.14 73.83 56 84.6V416h192v-43.52c33.86-10.77 56-33 56-84.6 0-30.61-10.73-67.1-26.69-102.56L185 285.65a8 8 0 0 1-11.31 0l-11.31-11.31a8 8 0 0 1 0-11.31L270.27 155.1c-20.8-37.91-46.47-72.1-70.87-92.59C213.4 59.09 224 47.05 224 32a32 32 0 0 0-32-32h-64a32 32 0 0 0-32 32c0 15 10.6 27.09 24.6 30.51C67.81 106.8 8 214.5 8 287.88zM304 448H16a16 16 0 0 0-16 16v32a16 16 0 0 0 16 16h288a16 16 0 0 0 16-16v-32a16 16 0 0 0-16-16z"/> </symbol> </svg> ';e.exports=t},1451:function(e){var t='<div> <chess-bishop-svg></chess-bishop-svg> <p class="text-justify"> Két játékos felváltva tesz le (a kezdetben üres) sakktáblára futókat. Egy új futót mindig csak olyan mezőre tehetünk, amin még nem áll futó, és azt a mezőt nem is támadja futó. Az veszít, aki nem tud lerakni futót. (Futó támad egy mezőt: ha a sakk szabályai szerint a futóval arra a mezőre tudnánk lépni, azaz a futóhoz képest átlósan helyezkedik el.) Te döntheted el, hogy kezdeni szeretnél-e, vagy második játékos lenni. Sok sikert! :) </p> <div class="flex flex-wrap"> <div class="p-1 shrink-0 grow basis-8/12"> <table class="m-2 border-collapse"> <tr v-for="row in [0, 1, 2, 3, 4, 5, 6, 7]" :key="row"> <td v-for="col in [0, 1, 2, 3, 4, 5, 6, 7]" :key="col" @click="clickField({ row, col })" class="text-center h-20 w-20 border-4" :class="{ \'bg-slate-400\': board[row * 8 + col] === \'forbidden\', \'bg-slate-200\': wouldBeForbidden({ row, col }), \'cursor-not-allowed\': board[row * 8 + col] === \'forbidden\' }" @mouseover="hoveredField = { row, col }" @mouseout="hoveredField = null"> <span v-show="board[row * 8 + col] === \'bishop\'"> <svg class="h-16 w-16 p-1 inline-block"> <use xlink:href="#game-chess-bishop"/> </svg> </span> <span v-show="isPotentialNextStep({ row, col })"> <svg class="h-16 w-16 p-1 inline-block opacity-50"> <use xlink:href="#game-chess-bishop"/> </svg> </span> </td> </tr> </table> </div> <game-sidebar :step-description="stepDescription"></game-sidebar> </div> </div>';e.exports=t},2176:function(e){var t='<svg style="display:none"> <symbol id="game-chess-rook" viewBox="0 0 504 504"> <g id="layer1" transform="translate(-523.71 -225.65)"> <path id="path2406" style="fill:#000000" d="m90 422.5v-18.5h12.5 12.5v-21.35-21.36l21-22.36 21-22.36v-74.56-74.56l-24.44-18.47-24.45-18.48-0.05-33.75-0.06-33.75h28.5 28.5v15 15h26 26v-15-15h35 35v15 15h26 26v-15-15h28.5 28.5l-0.05 33.75-0.05 33.75-24.45 18.5-24.45 18.5v74.7 74.69l20.97 22.31 20.97 22.3 0.03 21.25 0.03 21.25h12.5 12.5v18.5 18.5h-162-162v-18.5z" transform="translate(523.71 225.65)"/> <path id="path2392" style="fill:#ffffff" d="m387.55 134.55c1.35-1.35 2.45-3.62 2.45-5.05 0-1.42-1.1-3.7-2.45-5.05l-2.46-2.45h-133.09-133.09l-2.46 2.45c-1.35 1.35-2.45 3.63-2.45 5.05s1.1 3.7 2.45 5.05l2.46 2.45h133.09 133.09l2.46-2.45z" transform="translate(523.71 225.65)"/> <path id="path2390" style="fill:#ffffff" d="m337.55 172.55c1.35-1.35 2.45-3.62 2.45-5.05 0-1.42-1.1-3.7-2.45-5.05l-2.46-2.45h-83.09-83.09l-2.46 2.45c-1.35 1.35-2.45 3.63-2.45 5.05s1.1 3.7 2.45 5.05l2.46 2.45h83.09 83.09l2.46-2.45z" transform="translate(523.71 225.65)"/> <path id="path2388" style="fill:#ffffff" d="m337.55 321.55c1.35-1.35 2.45-3.62 2.45-5.05 0-1.42-1.1-3.7-2.45-5.05l-2.46-2.45h-83.09-83.09l-2.46 2.45c-1.35 1.35-2.45 3.63-2.45 5.05 0 1.43 1.1 3.7 2.45 5.05l2.46 2.45h83.09 83.09l2.46-2.45z" transform="translate(523.71 225.65)"/> <path id="path2386" style="fill:#ffffff" d="m379.09 367.72c4.34-3.34 4.6-8.07 0.64-11.75-2.07-1.94-4.21-1.97-127.73-1.97s-125.66 0.03-127.73 1.97c-3.96 3.68-3.7 8.41 0.64 11.75 2.31 1.77 251.87 1.77 254.18 0z" transform="translate(523.71 225.65)"/> <path id="path2384" style="fill:#ffffff" d="m379.09 409.72c4.34-3.34 4.6-8.07 0.64-11.75-2.07-1.94-4.21-1.97-127.73-1.97s-125.66 0.03-127.73 1.97c-3.96 3.68-3.7 8.41 0.64 11.75 2.31 1.77 251.87 1.77 254.18 0z" transform="translate(523.71 225.65)"/> </g> </symbol> </svg>';e.exports=t},4967:function(e){var t='<div> <chess-rook-svg></chess-rook-svg> <p class="text-justify"> A játékosok felváltva lépnek egy bástyával, amely a sakktábla bal felső sarkából indul. A bástya vízszintesen vagy függőlegesen bármennyit (legalább egyet) léphet, de egyszerre csak az egyik irányba. Azokat a mezőket amikre a bástya lép, illetve a lépés közben áthalad, megjelöljük, ezekre a mezőkre már nem léphetünk (át sem haladhatunk felettük). Az a játékos veszít, aki nem tud lépni. Te döntheted el, hogy kezdeni szeretnél-e, vagy második játékos lenni. Sok sikert! :) </p> <div class="flex flex-wrap"> <div class="p-1 shrink-0 grow basis-8/12"> <table class="m-2 border-collapse"> <tr v-for="row in [0, 1, 2, 3, 4, 5, 6, 7]" :key="row"> <td v-for="col in [0, 1, 2, 3, 4, 5, 6, 7]" :key="col" @click="clickField({ row, col })" class="text-center h-20 w-20 border-4" :class="{ \'bg-slate-300\': board.chessBoard[row * 8 + col] === \'visited\' }"> <span v-if="isAllowedMove({ row, col })" class="h-6 w-6 p-1 inline-block rounded-full opacity-25 bg-black"></span> <span v-if="board.chessBoard[row * 8 + col] === \'rook\'"> <svg class="h-16 w-16 p-1 inline-block"> <use xlink:href="#game-chess-rook"/> </svg> </span> </td> </tr> </table> </div> <game-sidebar :step-description="stepDescription"></game-sidebar> </div> </div>';e.exports=t},3590:function(e){var t='<div> <p class="text-justify"> Van egy kupacban néhány érme, mindegyik 1, 2 vagy 3 pengős. Egy lépésben az éppen soron lévő játékos elvesz egy érmét a kupacból, és helyette berakhat egy darab kisebb értékű érmét, vagy dönthet úgy, hogy nem tesz be semmit. Az nyer, aki elveszi az utolsó érmét a kupacból. Az új játék gombra kattintva generálhatsz egy új kezdőállást. A kezdőállás ismeretében te döntheted el, hogy kezdeni szeretnél-e, vagy második játékos lenni. Sok sikert! :) </p> <div class="flex flex-wrap"> <div class="p-1 shrink-0 grow basis-8/12"> <table class="m-2 border-collapse"> <tr> <th>1-es</th> <th>2-es</th> <th>3-as</th> </tr> <tr> <td v-for="coinValue in [0, 1, 2]" :key="coinValue" @click="clickHeap(coinValue)" class="text-center h-36 w-36 border-4" :class="{ \'bg-gray-300\': isCoinActionInvalid(coinValue), \'cursor-not-allowed\': isCoinActionInvalid(coinValue) }" @mouseover="hoveredHeap=coinValue" @mouseout="hoveredHeap=null"> <span v-for="i in board[coinValue]" :key="i" class="h-16 w-16 p-1 inline-block rounded-full mr-1 text-4xl" :class="{ [getCoinColor(coinValue)]: true, \'opacity-50\': shouldShowCoinToBeRemoved(coinValue) && i === 1 }"></span> <span v-show="shouldShowCoinToBeAdded(coinValue)" class="h-16 w-16 p-1 inline-block rounded-full mr-1 opacity-50" :class="getCoinColor(coinValue)"></span> </td> </tr> </table> <button v-if="valueOfRemovedCoin" class="cta-button" @click="endTurn()"> Semmit se rakok be </button> </div> <game-sidebar :step-description="stepDescription" @restart="resetTurnState()"/> </div> </div> ';e.exports=t},8818:function(e){var t='<div> <p class="text-justify"> Adott egy téglatest rácsa, aminek be van húzva az egyik testátlója. Egy lépésben az éppen soron lévő játékos megszínezi valamelyik még színezetlen csúcsot három szín valamelyikével (azaz piros, sárga vagy kék korongot tesz rá) úgy, hogy ne keletkezzen két szomszédos csúcs, amik azonos színűek. Ha valamelyik játékos nem tud lépni, akkor véget ér a játék. A kezdő játékos nyer, ha minden csúcs meg lett színezve, míg a második akkor nyer, ha van olyan csúcs ami nem lett kiszínezve. Te döntheted el, hogy kezdeni szeretnél-e, vagy második játékos lenni. Sok sikert! :) </p> <div class="flex flex-wrap" id="cube-coloring"> <svg @mousemove="drawPickedColor" height="500" width="700"> <rect x="20" y="140" width="300" height="300" style="fill:transparent;stroke:black;stroke-width:3;fill-opacity:0;stroke-opacity:1"/> <rect x="140" y="20" width="300" height="300" style="fill:transparent;stroke:black;stroke-width:3;fill-opacity:0;stroke-opacity:1"/> <line x1="20" y1="140" x2="140" y2="20" style="stroke:black;stroke-width:3"/> <line x1="320" y1="140" x2="440" y2="20" style="stroke:black;stroke-width:3"/> <line x1="320" y1="440" x2="440" y2="320" style="stroke:black;stroke-width:3"/> <line x1="20" y1="440" x2="140" y2="320" style="stroke:black;stroke-width:3"/> <line x1="320" y1="440" x2="140" y2="20" style="stroke:black;stroke-width:3"/> <circle cx="20" cy="140" r="15" @click="setColor(0)" stroke="black" stroke-width="3" :fill="board.colors[0]"/> <circle cx="320" cy="140" r="15" @click="setColor(1)" stroke="black" stroke-width="3" :fill="board.colors[1]"/> <circle cx="320" cy="440" r="15" @click="setColor(2)" stroke="black" stroke-width="3" :fill="board.colors[2]"/> <circle cx="20" cy="440" r="15" @click="setColor(3)" stroke="black" stroke-width="3" :fill="board.colors[3]"/> <circle cx="140" cy="20" r="15" @click="setColor(4)" stroke="black" stroke-width="3" :fill="board.colors[4]"/> <circle cx="440" cy="20" r="15" @click="setColor(5)" stroke="black" stroke-width="3" :fill="board.colors[5]"/> <circle cx="440" cy="320" r="15" @click="setColor(6)" stroke="black" stroke-width="3" :fill="board.colors[6]"/> <circle cx="140" cy="320" r="15" @click="setColor(7)" stroke="black" stroke-width="3" :fill="board.colors[7]"/> <rect x="550" y="20" rx="5" ry="5" width="80" height="30" @click="clickPicker(board.usedColors[0])" stroke="black" stroke-width="2" :fill="board.usedColors[0]"/> <rect x="550" y="70" rx="5" ry="5" width="80" height="30" @click="clickPicker(board.usedColors[1])" stroke="black" stroke-width="2" :fill="board.usedColors[1]"/> <rect x="550" y="120" rx="5" ry="5" width="80" height="30" @click="clickPicker(board.usedColors[2])" stroke="black" stroke-width="2" :fill="board.usedColors[2]"/> <circle v-if="show" :cx="x" :cy="y" r="15" :fill="color" fill-opacity="0.5" stroke="white" stroke-width="2" pointer-events="none"/> </svg> <game-sidebar :step-description="stepDescription"></game-sidebar> </div> </div> ';e.exports=t},5470:function(e){var t='<div> <p class="text-justify"> Ez egy példa játék. A kezdőállás ismeretében te döntheted el, hogy kezdeni szeretnél-e, vagy második játékos lenni. Sok sikert! :) </p> <div class="flex flex-wrap"> <div class="p-1 shrink-0 grow basis-8/12"> <button v-if="shouldPlayerMoveNext" class="cta-button" @click="makeMove()">Lépek!</button> </div> <game-sidebar :step-description="stepDescription"></game-sidebar> </div> </div> ';e.exports=t},6818:function(e){var t='<div> <p class="text-justify"> A játék során egy öt mezőből álló táblára fogunk elhelyezni tíz korongot. A játék elején a szervező egy korongot felhelyez az egyik mezőre, és ezután kezdődik a játék. Minden körben a kezdőjátékos egy korongot helyez a táblára, majd ezután a második játékos tesz le két korongot. (A két korongot lehet azonos, illetve különböző mezőkre is tenni.) A játék akkor ér véget, amikor a 10. korong felkerül a táblára. A második játékos akkor nyer, ha a játék végén minden mezőn különböző számú korong áll. A kezdő pedig akkor nyer, ha van két olyan mező, amelyen azonos számú korong áll. Te döntheteted el, hogy a kezdő vagy a második játékos bőrébe szeretnél e bújni. Sok sikert! :) </p> <div class="flex flex-wrap"> <div class="p-1 shrink-0 grow basis-8/12"> <table class="m-2 border-collapse"> <tr v-for="row in [0, 1]" :key="row"> <td v-for="col in 3-row" :key="col" @click="placePiece(row * 3 + col - 1)" class="text-center h-36 w-36 border-4 text-8xl"> <span v-for="i in board[row * 3 + col - 1]" :key="i" class="h-16 w-16 p-1 inline-block bg-blue-600 rounded-full mr-1"></span> </td> </tr> </table> </div> <game-sidebar :step-description="stepDescription"></game-sidebar> </div> </div> ';e.exports=t},2944:function(e){var t='<div> <p class="text-justify"> A pályán kezdetben 37 korong van, három kupacban. A soron következő játékos először az egyik kupacot teljes egészében kiveszi a játékból; majd egy másik kupacot kettéoszt két kisebb kupacra (mindkettőbe legalább 1 korongnak kerülnie kell). Egy lépést követően tehát újra három kupac marad. Az a játékos veszít, aki nem tud szabályosan lépni (azaz egyik kupacot se tudja szétosztani). A kezdőállás ismeretében te döntheted el, hogy kezdeni szeretnél-e, vagy második játékos lenni. Sok sikert! :) </p> <div class="flex flex-wrap"> <div class="p-1 shrink-0 grow basis-8/12"> <div v-for="rowIndex in [0, 1, 2]" :key="rowIndex" class="border-t-black border-t-2 h-20 p-1 text-left whitespace-nowrap" :class="{ \'border-b-black border-b-2\': rowIndex === 2 }"> <template v-for="(_, pieceIndex) in board[rowIndex]"> <span v-if="shouldShowDividerToTheLeft({ rowIndex, pieceIndex })" class="inline-block border-r-black border-r-4 h-16 border-dotted -ml-1"></span> <span :class="{ \'bg-red-600\': rowColor({ rowIndex }) === \'red\', \'bg-blue-600\': rowColor({ rowIndex }) === \'blue\', \'opacity-50\': rowIndex === removedRowIndex }" class="h-16 w-16 p-1 inline-block rounded-full mr-1" :style="{ \'pointer-events\': shouldPlayerMoveNext ? \'auto\' : \'none\', \'cursor\': pieceClickNotAllowed({ rowIndex, pieceIndex }) ? \'not-allowed\' : \'pointer\' }" @click="clickPiece({ rowIndex, pieceIndex })" @mouseover="hoveredPiece = { rowIndex, pieceIndex }" @mouseout="hoveredPiece = null"></span> </template> <span class="inline-block h-16 align-middle px-2 text-xl -mt-4"> {{ currentChoiceDescription(rowIndex) }} </span> </div> </div> <game-sidebar :step-description="stepDescription" @restart="resetTurnState()"/> </div> </div> ';e.exports=t},3814:function(e){var t='<div> <p class="text-justify"> A pályán kezdetben négy kupac korong van. A soron következő játékos először az egyik kupacot teljes egészében kiveszi a játékból; majd egy másik kupacot kettéoszt két kisebb kupacra (mindkettőbe legalább 1 korongnak kerülnie kell). Egy lépést követően tehát újra 4 kupac marad. Az a játékos veszít, aki nem tud szabályosan lépni (azaz egyik kupacot se tudja szétosztani). A kezdőállás ismeretében te döntheted el, hogy kezdeni szeretnél-e, vagy második játékos lenni. Sok sikert! :) </p> <div class="flex flex-wrap"> <div class="p-1 shrink-0 grow basis-8/12"> <div v-for="rowIndex in [0, 1, 2, 3]" :key="rowIndex" class="border-t-black border-t-2 h-20 p-1 text-left whitespace-nowrap" :class="{ \'border-b-black border-b-2\': rowIndex === 3 }"> <template v-for="(_, pieceIndex) in board[rowIndex]"> <span v-if="shouldShowDividerToTheLeft({ rowIndex, pieceIndex })" class="inline-block border-r-black border-r-4 h-16 border-dotted -ml-1"></span> <span :class="{ \'bg-red-600\': rowColor({ rowIndex }) === \'red\', \'bg-blue-600\': rowColor({ rowIndex }) === \'blue\', \'opacity-50\': rowIndex === removedRowIndex }" class="h-16 w-16 p-1 inline-block rounded-full mr-1" :style="{ \'pointer-events\': shouldPlayerMoveNext ? \'auto\' : \'none\', \'cursor\': pieceClickNotAllowed({ rowIndex, pieceIndex }) ? \'not-allowed\' : \'pointer\' }" @click="clickPiece({ rowIndex, pieceIndex })" @mouseover="hoveredPiece = { rowIndex, pieceIndex }" @mouseout="hoveredPiece = null"></span> </template> <span class="inline-block h-16 align-middle px-2 text-xl -mt-4"> {{ currentChoiceDescription(rowIndex) }} </span> </div> </div> <game-sidebar :step-description="stepDescription" @restart="resetTurnState()"/> </div> </div> ';e.exports=t},464:function(e){var t='<div> <p class="text-justify"> A pályán mindig két kupac korong található. A soron következő játékos választ egy kupacot, és azt szétosztja két kisebb kupacra (mindkettőbe legalább 1 korongnak kerülnie kell), a másik kupacot pedig kidobjuk. Az a játékos veszít, aki nem tud szabályosan lépni (azaz egyik kupacot se tudja szétosztani). A kezdőállás ismeretében te döntheted el, hogy kezdeni szeretnél-e, vagy második játékos lenni. Sok sikert! :) </p> <div class="flex flex-wrap js-heap-splitter"> <div class="p-1 shrink-0 grow basis-8/12"> <div v-for="rowIndex in [0, 1]" :key="rowIndex" class="border-t-black border-t-2 h-20 p-1 text-left whitespace-nowrap js-pile" :class="{ \'border-b-black border-b-2\': rowIndex === 1 }"> <template v-for="(_, pieceIndex) in board[rowIndex]"> <span v-if="shouldShowDividerToTheLeft({ rowIndex, pieceIndex })" class="inline-block border-r-black border-r-4 h-16 border-dotted -ml-1"></span> <span class="js-pebble h-16 w-16 p-1 inline-block bg-blue-600 rounded-full mr-1" :style="{ \'pointer-events\': shouldPlayerMoveNext ? \'auto\' : \'none\', \'cursor\': pieceIndex === 0 ? \'not-allowed\' : \'pointer\' }" @click="clickPiece({ rowIndex, pieceIndex })" @mouseover="hoveredPiece = { rowIndex, pieceIndex }" @mouseout="hoveredPiece = null"></span> </template> <span class="inline-block h-16 align-middle px-2 text-xl -mt-4"> {{ currentChoiceDescription(rowIndex) }} </span> </div> </div> <game-sidebar :step-description="stepDescription"></game-sidebar> </div> </div> ';e.exports=t},2428:function(e,t,r){var o=r(7091),n=r(9259),i=o(n),s='<div> <soldier-svg/> <p class="text-justify"> A török szultán serege megtámadta Hunyadi várát. A várlépcső egyes fokain néhány janicsár áll. Minden reggel a szultán kettéosztja a hadseregét egy piros és egy kék hadtestre. Hunyadi a nap folyamán vagy a piros, vagy a kék sereget megsemmisíti, választása szerint. Éjszaka minden megmaradt janicsár egy lépcsőfokot fellép. Hunyadi nyer, ha a szultán egész seregét megsemmisítette. A szultán nyer, ha lesz olyan janicsár, aki felér a várhoz. A kezdőállás ismeretében te döntheted e, hogy Hunyadiként vagy a török szultánként szeretnél-e játszani. Sok sikert! :) </p> <div class="flex flex-wrap js-hunyadi-and-the-janissaries"> <div class="p-1 shrink-0 grow basis-8/12"> <img src="'+i+'" style="display:block;margin:auto"> <div v-for="rowIndex in [0, 1, 2, 3, 4]" :key="rowIndex" class="border-t-black border-t-2 h-20 p-1 text-center whitespace-nowrap" :class="{ \'border-b-black border-b-2\': rowIndex === 4 }"> <span v-for="(group, pieceIndex) in board[rowIndex]" class="h-16 w-16 p-1 inline-block mx-1 js-clickable-soldier" @click="clickOnSoldier(rowIndex, pieceIndex)" @mouseover="hoveredPiece = { rowIndex, pieceIndex }" @mouseout="hoveredPiece = null"> <svg class="h-16 w-16 p-1 inline-block border-dashed border-black" :class="{ \'border-2\': showToBeKilled(group), \'opacity-50\': showToBeKilled(group), \'fill-blue-600\': group === \'blue\', \'fill-red-600\': group === \'red\' }"> <use xlink:href="#game-soldier-icon"/> </svg> </span> </div> </div> <div class="p-1 flex flex-col grow-0 shrink-0 basis-64"> <p class="text-center font-bold text-lg">{{ ctaText }}</p> <enemy-loader/> <p class="italic text-justify">{{ stepDescription }}</p> <template v-if="isGameReadyToStart"> <button class="cta-button js-second-player" @click="startGameWithRoleSelection({ isFirst: false })"> Hunyadi leszek </button> <button class="cta-button js-first-player" @click="startGameWithRoleSelection({ isFirst: true })"> Szultán leszek </button> </template> <template v-if="isGameInProgress"> <button v-if="isPlayerSultan" :class="{ \'opacity-50\': isEnemyMoveInProgress }" class="cta-button js-finalize-groups" @click="finalizeSoldierGrouping()"> Befejezem a kettéosztást </button> <button v-if="!isPlayerSultan" :class="{ \'opacity-50\': isEnemyMoveInProgress }" class="cta-button bg-red-400 hover:bg-red-600 js-kill-red" @click="killGroup(\'red\')"> Legyőzöm a pirosakat </button> <button v-if="!isPlayerSultan" :class="{ \'opacity-50\': isEnemyMoveInProgress }" class="cta-button bg-blue-400 hover:bg-blue-600" @click="killGroup(\'blue\')"> Legyőzöm a kékeket </button> </template> <div class="flex flex-grow items-end"> <button class="cta-button mt-4 js-restart-game" @click="restartGame()"> Új játék </button> </div> </div> </div> </div> ';e.exports=s},379:function(e){var t='<svg style="display:none"> <symbol id="game-soldier-icon" viewBox="0 0 298.167 298.167"> <g> <polygon points="87.226,49.664 87.226,103.334 141.228,103.334 \t"/> <path d="M57.737,224.637c4.569-0.903,9.541-2.088,14.62-3.407c-1.152-5.343-1.774-10.881-1.774-16.564\n        c0-19.615,7.248-37.558,19.186-51.332h118.631c11.937,13.774,19.185,31.717,19.185,51.332c0,5.683-0.622,11.221-1.774,16.564\n        c5.079,1.319,10.051,2.503,14.62,3.407c1.406-6.438,2.154-13.118,2.154-19.971c0-20.161-6.415-38.852-17.31-54.14\n        c3.8-2.721,6.285-7.162,6.285-12.192c0-8.284-6.716-15-15-15h-5h-124h-6c-8.284,0-15,6.716-15,15c0,5.045,2.498,9.496,6.316,12.216\n        c-10.885,15.284-17.293,33.966-17.293,54.116C55.582,211.519,56.33,218.199,57.737,224.637z"/> <path d="M149.083,283.167c-11.725,0-22.848-2.602-32.849-7.23c-10.838-0.202-20.728-0.808-29.685-1.821\n        c16.578,14.942,38.511,24.052,62.533,24.052c24.023,0,45.955-9.109,62.533-24.051c-8.958,1.013-18.847,1.618-29.685,1.82\n        C171.931,280.565,160.808,283.167,149.083,283.167z"/> <circle cx="183.987" cy="184.168" r="12.465"/> <circle cx="114.18" cy="184.168" r="12.465"/> <path d="M168.083,221.334c-4.304,0-8.276,1.383-11.524,3.712v-25.397c0-4.107-3.165-7.688-7.271-7.811\n        c-4.247-0.127-7.729,3.277-7.729,7.496c0,9.756,0,15.835,0,25.678c-3.239-2.309-7.193-3.678-11.476-3.678\n        c-7.958,0-56.993,11.918-79.534,17.277c-5.048,1.2-5.868,7.975-1.294,10.425c20.996,11.245,59.479,11.982,75.34,11.982\n        c2.388,0,4.263-0.017,5.488-0.017c8.982,0,16.56-5.975,19-14.163c2.44,8.188,10.019,14.163,19,14.163\n        c1.225,0,3.103,0.017,5.488,0.017c15.858,0,54.344-0.735,75.34-11.982c4.574-2.45,3.755-9.225-1.294-10.426\n        C225.078,233.251,176.042,221.334,168.083,221.334z"/> <path d="M210.4,27.163c-2.574-6.903-9.207-11.829-17.008-11.829h-27.1C165.3,6.704,157.98,0,149.083,0s-16.217,6.704-17.209,15.334\n        h-26.148c-8.076,0-14.912,5.273-17.276,12.561l60.609,60.61L210.4,27.163z"/> <polygon points="211.226,103.334 211.226,48.664 156.89,103.334 \t"/> </g> </symbol> </svg> ';e.exports=t},975:function(e){var t='<div> <p class="text-justify"> Károly és Dezső <pre class="inline">m</pre>-ig szeretnének elszámolni, és közben a következő játékot játsszák: 0-ról kezdenek, a két játékos felváltva adhat hozzá egy 13-nál kisebb pozitív egészet a korábbi számhoz, azonban a babonájuk miatt ha egyikük x-et adott hozzá, akkor másikuk a következő lépésben nem adhat hozzá <pre class="inline">13-x</pre>-et. Az veszít, aki eléri (vagy átlépi) <pre class="inline">m</pre>-et. Az <pre class="inline">m</pre> szám ismeretében te döntheteted el, hogy a kezdő vagy a második játékos bőrébe szeretnél e bújni. Sok sikert! :) </p> <div class="flex flex-wrap"> <div class="p-1 shrink-0 grow basis-8/12"> <table class="m-2 border-collapse"> <tr> <th>Szám</th> <th>Cél</th> <th>Tiltott lépés</th> </tr> <tr> <td class="text-center h-36 w-36 border-4 text-8xl">{{ board.current }}</td> <td class="text-center h-36 w-36 border-4 text-8xl">{{ board.target }}</td> <td class="text-center h-36 w-36 border-4 text-8xl">{{ board.restricted || \'-\' }}</td> </tr> </table> <template v-if="shouldPlayerMoveNext"> <label for="step"> Következő lépés: </label> <input id="step" type="number" min="1" max="12" v-model="step" class="border-2" v-on:keyup.enter="attemptStep()"> </template> </div> <game-sidebar :step-description="stepDescription" @restart="resetTurnState()"/> </div> </div> ';e.exports=t},9570:function(e){var t='<div> <p class="text-justify"> A 3 × 3-as duplánkezdő amőba játékban először a kezdő tesz le két piros korongot, majd a második egy kék korongot és innentől felváltva egy-egy korongot tesznek le a saját színükből, amíg be nem telik a tábla. A kezdő nyer, ha a játék végén van valahol három piros egy sorban, oszlopban vagy átlóban, de sehol sincs három kék egy sorban, oszlopban vagy átlóban; egyébként a második nyer. Te döntheted el, hogy kezdeni szeretnél-e, vagy második játékos lenni. Sok sikert! :) </p> <div class="flex flex-wrap"> <div class="p-1 shrink-0 grow basis-8/12"> <table class="m-2 border-collapse"> <tr v-for="row in [0, 1, 2]" :key="row"> <td v-for="col in [0, 1, 2]" :key="col" @click="clickField({ row, col })" class="text-center h-36 w-36 border-4 text-8xl"> <span v-if="board[row * 3 + col]" class="h-16 w-16 p-1 inline-block rounded-full mr-1" :class="pieceColor({ row, col })"></span> </td> </tr> </table> </div> <game-sidebar :step-description="stepDescription"></game-sidebar> </div> </div> ';e.exports=t},6306:function(e){var t='<div> <p class="text-justify"> Két játékos játszik egy 3 × 3-as táblán kék és piros korongokkal a szokásos amőba szabályai szerint, tehát felváltva tesznek le korongokat, és ha egy sorban, oszlopban vagy átlóban összegyűlik három azonos színű korong, az adott játékos nyer. Ha az első 9 korong lehelyezése után döntetlen az állás (azaz egyik játékos sem nyert), akkor tovább folytatják a játékot, a soron következő játékos az ellenfél egy már lehelyezett korongját fehérre színezheti. Ezek után az nyer, aki először hoz létre három fehér korongot egy sorban, oszlopban vagy átlóban. Te döntheted el, hogy kezdeni szeretnél-e, vagy második játékos lenni. Sok sikert! :) </p> <div class="flex flex-wrap"> <div class="p-1 shrink-0 grow basis-8/12"> <table class="m-2 border-collapse"> <tr v-for="row in [0, 1, 2]" :key="row"> <td v-for="col in [0, 1, 2]" :key="col" @click="clickField({ row, col })" class="text-center h-36 w-36 border-4 text-8xl" :class="{ \'cursor-not-allowed\': !isMoveAllowed({ row, col }) && shouldPlayerMoveNext, \'bg-green-100\': !inPlacingPhase && isMoveAllowed({ row, col }) }"> <span v-if="board[row * 3 + col]" class="h-16 w-16 p-1 inline-block rounded-full mr-1" :class="{ [pieceColor({ row, col })]: true, \'border-4\': pieceColor({ row, col }) === \'bg-white\', \'border-slate-600\': pieceColor({ row, col }) === \'bg-white\' }"></span> </td> </tr> </table> </div> <game-sidebar :step-description="stepDescription"></game-sidebar> </div> </div> ';e.exports=t},4433:function(e){var t='<div> <p class="text-justify"> Adott egy 2 × 2-es táblázat, és hozzá mindkét játékosnak van 3 db korongja. A játék során felváltva tesznek le ezekből egyet-egyet a táblázat tetszőleges mezőjére. A második játékos akkor nyer, ha a játék végén minden mezőben különböző számú korong található. (Azaz 0, 1, 2, 3 a kiosztás a végén valamilyen sorrendben). Minden egyéb esetben pedig a kezdő játékos nyer. Te döntheteted el, hogy a kezdő vagy a második játékos bőrébe szeretnél e bújni. Sok sikert! :) </p> <div class="flex flex-wrap"> <div class="p-1 shrink-0 grow basis-8/12"> <table class="m-2 border-collapse"> <tr v-for="row in [0, 1]" :key="row"> <td v-for="col in [0, 1]" :key="col" @click="placePiece(row * 2 + col)" class="text-center h-36 w-36 border-4 text-8xl"> <span v-for="i in board[row * 2 + col]" :key="i" class="h-16 w-16 p-1 inline-block bg-blue-600 rounded-full mr-1"></span> </td> </tr> </table> </div> <game-sidebar :step-description="stepDescription"></game-sidebar> </div> </div> ';e.exports=t},411:function(e){var t='<div> <h1 class="text-blue-600 text-2xl font-bold pb-4">Dürer játékok</h1> <table class="w-full border-collapse"> <thead> <tr> <th v-for="header in [\'Év\', \'Forduló\', \'Kategória\', \'Játék\', \'\']" class="bg-gray-500 border-2 border-gray-300 text-center text-white font-bold p-1">{{ header }}</th> </tr> </thead> <tr v-for="game in gamesToShow" class="odd:bg-gray-200"> <td v-for="gameProp in [game.year, game.round, game.category, game.name]" class="border-2 border-gray-300 text-center p-1">{{ gameProp }}</td> <td class="border-2 border-gray-300 text-center p-1"> <button @click="goToGamePage(game.component)" :class="`rounded-lg px-4 bg-blue-400 hover:bg-blue-600 js-select-${game.component}`">Kipróbálom!</button> </td> </tr> </table> </div> ';e.exports=t},8953:function(e){var t='<div> Sajnáljuk, a keresett oldal nem található. Az alábbi gombra kattintva válassz egy játékot. <button class="rounded-lg px-4 bg-blue-400 hover:bg-blue-600 js-back-to-overview" @click="$router.push(\'/\')">A játékok listájához</button> </div> ';e.exports=t},487:function(e){var t='<div> <template v-if="gameDefinition"> <button class="rounded-lg px-4 bg-blue-400 hover:bg-blue-600 js-back-to-overview" @click="goBackToOverview()">← Vissza a listához</button> <h1 class="text-blue-600 text-2xl font-bold pb-4">{{ gameDefinition.name }}</h1> <hr/> <component :is="gameId"></component> </template> <page-not-found v-if="!gameDefinition"></page-not-found> </div> ';e.exports=t},623:function(e,t,r){"use strict";var o={};r.r(o),r.d(o,{generateNewBoard:function(){return M},getGameStateAfterAiMove:function(){return j},getGameStateAfterMove:function(){return G},isTheLastMoverTheWinner:function(){return S}});var n={};r.r(n),r.d(n,{generateNewBoard:function(){return E},getGameStateAfterAiMove:function(){return F},getGameStateAfterKillingGroup:function(){return H},isTheLastMoverTheWinner:function(){return B}});var i={};r.r(i),r.d(i,{generateNewBoard:function(){return L},getGameStateAfterAiMove:function(){return K},isTheLastMoverTheWinner:function(){return $}});var s={};r.r(s),r.d(s,{generateNewBoard:function(){return q},getGameStateAfterAiMove:function(){return X},getGameStateAfterMove:function(){return Y},isTheLastMoverTheWinner:function(){return Q}});var a={};r.r(a),r.d(a,{generateNewBoard:function(){return ne},getGameStateAfterAiMove:function(){return ie},getGameStateAfterMove:function(){return se},isTheLastMoverTheWinner:function(){return ae}});var l={};r.r(l),r.d(l,{generateNewBoard:function(){return he},getGameStateAfterAiMove:function(){return ue},getGameStateAfterMove:function(){return pe},isTheLastMoverTheWinner:function(){return ve}});var d={};r.r(d),r.d(d,{generateNewBoard:function(){return ye},getGameStateAfterAiMove:function(){return Pe},getGameStateAfterMove:function(){return we},isTheLastMoverTheWinner:function(){return xe}});var c={};r.r(c),r.d(c,{generateNewBoard:function(){return Se},getGameStateAfterAiMove:function(){return Ae},getGameStateAfterMove:function(){return je},isTheLastMoverTheWinner:function(){return Ge}});var u={};r.r(u),r.d(u,{generateNewBoard:function(){return He},getGameStateAfterAiMove:function(){return We},getGameStateAfterMove:function(){return Oe},getOptimalAiFlippingPosition:function(){return Je},getOptimalAiPlacingPosition:function(){return _e},inPlacingPhase:function(){return Ke},isTheLastMoverTheWinner:function(){return Le}});var h={};r.r(h),r.d(h,{existsAllowedStep:function(){return rt},generateNewBoard:function(){return Xe},getGameStateAfterAiMove:function(){return Ye},getGameStateAfterMove:function(){return Qe},hasNeighbourWithSameColor:function(){return et},isAllowedStep:function(){return tt},isTheLastMoverTheWinner:function(){return Ue}});var v={};r.r(v),r.d(v,{generateNewBoard:function(){return ut},getGameStateAfterAiMove:function(){return vt},getGameStateAfterMove:function(){return pt},isTheLastMoverTheWinner:function(){return ht}});var p={};r.r(p),r.d(p,{generateNewBoard:function(){return bt},getGameStateAfterAiMove:function(){return gt},getGameStateAfterMove:function(){return ft},getOptimalAiPlacingPosition:function(){return Tt},isTheLastMoverTheWinner:function(){return yt}});var m={};r.r(m),r.d(m,{generateNewBoard:function(){return Mt},getGameStateAfterAiMove:function(){return St},getGameStateAfterMove:function(){return jt},getOptimalAiPlacingPosition:function(){return Nt},isTheLastMoverTheWinner:function(){return Gt}});var k={};r.r(k),r.d(k,{generateNewBoard:function(){return Bt},getAllowedMoves:function(){return Lt},getGameStateAfterAiMove:function(){return Ht},getGameStateAfterMove:function(){return Wt},isTheLastMoverTheWinner:function(){return Et}});var b={};r.r(b),r.d(b,{generateNewBoard:function(){return Jt},getAllowedMoves:function(){return Ut},getGameStateAfterAiMove:function(){return Xt},getGameStateAfterMove:function(){return Yt},isTheLastMoverTheWinner:function(){return qt}});var g=r(821),f=r(8637),y=r(576),w={template:r(8773),computed:{...(0,f.Se)(["isEnemyMoveInProgress"])}},x={name:"game-sidebar",template:r(9102),props:{stepDescription:String},components:{EnemyLoader:w},computed:{...(0,f.rn)(["shouldPlayerMoveNext"]),...(0,f.Se)(["ctaText","isGameReadyToStart"])},methods:{...(0,f.nv)(["startGameWithRoleSelection","initializeGame"]),restartGame(){this.$emit("restart"),this.initializeGame()}},created(){this.initializeGame()}},z=r(676);const P=(e,t)=>2*(0,z.Z)(Math.ceil(e/2),Math.floor(t/2)),T=e=>{const t=(0,z.Z)(0,1),r=e[t]%2===0||1===e[1-t]?t:1-t,o=I(e[r]);return{rowIndex:r,pieceIndex:o}},I=e=>2===e?1:1+P(0,e-2),M=()=>[(0,z.Z)(3,10),(0,z.Z)(3,10)],S=!0,j=e=>G(e,T(e)),G=(e,{rowIndex:t,pieceIndex:r})=>{const o=[r,e[t]-r];return{board:o,isGameEnd:A(o)}},A=e=>1===e[0]&&1===e[1];var Z={template:r(464),components:{GameSidebar:x},data:()=>({hoveredPiece:null}),computed:{...(0,f.rn)(["board","shouldPlayerMoveNext"]),...(0,f.Se)(["isGameReadyToStart","isGameFinished"]),stepDescription(){return"Kattints egy korongra, hogy azzal kettéosztd azt a kupacot. Amelyik korongra kattintasz, az és a tőle jobbra lévők kerülnek az új kupacba."}},methods:{...(0,f.nv)(["endPlayerTurn","initializeGame"]),clickPiece({rowIndex:e,pieceIndex:t}){this.shouldPlayerMoveNext&&0!==t&&(this.endPlayerTurn(G(this.board,{rowIndex:e,pieceIndex:t})),this.hoveredPiece=null)},shouldShowDividerToTheLeft(e){return(0,y.Z)(this.hoveredPiece,e)&&0!==e.pieceIndex},currentChoiceDescription(e){if(this.isGameFinished)return"";const t=this.board[e];return!this.isGameReadyToStart&&this.shouldPlayerMoveNext&&this.hoveredPiece?this.hoveredPiece.rowIndex!==e||0===this.hoveredPiece.pieceIndex?t:`${t} → ${this.hoveredPiece.pieceIndex}, ${t-this.hoveredPiece.pieceIndex}`:t}},created(){this.initializeGame()}},C={template:r(379)},N=r(7961);const R=e=>{const t={blue:0,red:0},r=1===(0,z.Z)(0,1)?"red":"blue",o="blue"===r?"red":"blue";for(let n=0;n<e.length;n++)for(let i=0;i<e[n].length;i++){const s=t[r]<t[o]?r:o;e[n][i]=s,t[s]+=.5**n}return e},D=e=>{if(e[0].length>0)return e[0][0];const t={blue:0,red:0};for(let r=0;r<e.length;r++)for(const o of e[r])t[o]+=.5**r;return t["blue"]>t["red"]?"blue":"red"},F=(e,t)=>{if(t){const t=D(e);return H(e,t)}return{board:R(e),isGameEnd:!1}},B=null,E=()=>{const e=5;let t=[];for(let r=0;r<e-1;r++){const e=[];0===r&&e.push("blue"),1===(0,z.Z)(0,1)&&e.push("blue"),t.push(e)}t.push([]);for(let r=0;r<e-1;r++)for(let e of t[r])1===(0,z.Z)(0,1)&&(t[r].splice(e,1),t[r+1].push("blue","blue"));return t},H=(e,t)=>{let r,o=!1;for(let n=0;n<e.length;n++){const i=e[n].filter((e=>e!==t));i.length>0&&(0===n?(o=!0,r=!0):e[n-1].push(...i)),e[n]=[]}return 0!==(0,N.Z)(e).length||o||(o=!0,r=!1),{board:e,isGameEnd:o,hasFirstPlayerWon:r}};var W={template:r(2428),components:{EnemyLoader:w,SoldierSvg:C},data:()=>({hoveredPiece:null}),computed:{...(0,f.rn)({isPlayerSultan:e=>e.isPlayerTheFirstToMove}),...(0,f.rn)(["board","shouldPlayerMoveNext"]),...(0,f.Se)(["ctaText","isEnemyMoveInProgress","isGameInProgress","isGameReadyToStart"]),stepDescription(){return this.shouldPlayerMoveNext?this.isPlayerSultan?"Kattints a katonákra és válaszd két részre a seregedet.":"Kattints egy katonára vagy az alábbi gombok valamelyikére, hogy megsemmisítsd a vele azonos színű sereget.":""},groupOfHoveredPiece(){return this.hoveredPiece?this.board[this.hoveredPiece.rowIndex][this.hoveredPiece.pieceIndex]:null}},methods:{...(0,f.nv)(["endPlayerTurn","startGameWithRoleSelection","initializeGame"]),clickOnSoldier(e,t){this.shouldPlayerMoveNext&&(this.isPlayerSultan?this.toggleGroup(e,t):this.killGroup(this.board[e][t]))},showToBeKilled(e){return!(!this.shouldPlayerMoveNext||this.isPlayerSultan)&&(!!this.hoveredPiece&&e===this.groupOfHoveredPiece)},toggleGroup(e,t){this.shouldPlayerMoveNext&&this.isPlayerSultan&&(this.board[e][t]="blue"===this.board[e][t]?"red":"blue")},finalizeSoldierGrouping(){this.endPlayerTurn({board:this.board,isGameEnd:!1})},killGroup(e){this.endPlayerTurn(H(this.board,e))},resetTurnState(){this.hoveredPiece=null},restartGame(){this.resetTurnState(),this.initializeGame()}},created(){this.initializeGame()}},O={template:r(5470),components:{GameSidebar:x},computed:{...(0,f.rn)(["shouldPlayerMoveNext"]),stepDescription(){return'Kattints a "Lépek" gombra, hogy lépj.'}},methods:{...(0,f.nv)(["endPlayerTurn","initializeGame"]),makeMove(){this.endPlayerTurn({board:[],isGameEnd:!0})}},created(){this.initializeGame()}};const L=()=>[],K=e=>({board:e,isGameEnd:!0}),$=!0;var V=r(9373),_=r(9012);const J=e=>{const t=(0,_.Z)(e);if(t%2===0){if(0===t)return(0,z.Z)(0,3);if(2===t){let t=!1;for(let r=0;r<4;r++)2===e[r]&&(t=!0);if(t){let t=0;while(2!==e[t])t++;return t}{let t=(0,z.Z)(0,3);while(1===e[t])t=(0,z.Z)(0,3);return t}}if(4===t){let t=(0,V.Z)(e);if(t.sort(),t[3]>=3){let t=0;while(e[t]<3)t++;return t}if(0===t[0]){let t=0;while(0!==e[t]&&t<4)t++;return t}return(0,z.Z)(0,3)}}else{if(1===t)return(0,z.Z)(0,3);if(3===t){let t=!1;for(let r=0;r<4;r++)3===e[r]&&(t=!0);if(t){let t=(0,z.Z)(0,3);while(0!==e[t])t=(0,z.Z)(0,3);return t}{let t=(0,z.Z)(0,3);while(1!==e[t])t=(0,z.Z)(0,3);return t}}if(5===t){let t=(0,V.Z)(e);if(t.sort(),3===t[3]){if(2===t[2]){let t=(0,z.Z)(0,3);while(0!==e[t])t=(0,z.Z)(0,3);return t}{let t=(0,z.Z)(0,3);while(1!==e[t])t=(0,z.Z)(0,3);return t}}if(2===t[3]&&2===t[2]){let t=(0,z.Z)(0,3);while(2!==e[t])t=(0,z.Z)(0,3);return t}return(0,z.Z)(0,3)}}},q=()=>Array(4).fill(0),X=e=>{const t=J(e);return Y(e,t)},Y=(e,t)=>{const r=(0,V.Z)(e);return r[t]=r[t]+1,{board:r,isGameEnd:(0,_.Z)(r)>=6,hasFirstPlayerWon:!(0,y.Z)([...r].sort(),[0,1,2,3])}},Q=null;var U={template:r(4433),components:{GameSidebar:x},computed:{...(0,f.rn)(["board","shouldPlayerMoveNext"]),stepDescription(){return"Kattints arra a mezőre, ahova korongot szeretnél lerakni."}},methods:{...(0,f.nv)(["endPlayerTurn","initializeGame"]),placePiece(e){this.shouldPlayerMoveNext&&this.endPlayerTurn(Y(this.board,e))}},created(){this.initializeGame()}};const ee=e=>{const t=(0,_.Z)(e);let r=(0,V.Z)(e);if(r.sort(),2===t){if(2===r[4]){const t=re(e,0);return[t,t]}return oe(e,1,1)}if(5===t){if(0===(0,z.Z)(1))return 2===r[4]?oe(e,2,2):[re(e,0),re(e,2)];if(2===r[4])return[re(e,1),re(e,2)];{const t=re(e,0);return[t,t]}}if(8===t){if(4===r[4]){if(3===r[3]){const t=re(e,0);return[t,t]}return[re(e,0),re(e,2)]}if(3===r[3])return 2===r[2]?[re(e,0),re(e,3)]:[re(e,1),re(e,3)];{const t=re(e,2);return[t,t]}}alert("illegal state")},te=e=>{const t=(0,_.Z)(e);let r=(0,V.Z)(e);return r.sort(),1===t?(0,z.Z)(4):4===t?3===r[4]?re(e,3):2===r[4]&&1===r[3]?re(e,0):(0,z.Z)(4):7===t?4===r[4]?re(e,4):0===r[0]&&0!==r[1]?re(e,0):(0,z.Z)(4):void alert("illegal state")},re=(e,t)=>{let r=(0,z.Z)(4);while(e[r]!==t)r=(0,z.Z)(4);return r},oe=(e,t,r)=>{let o=0;while(e[o]!==t||e[o]!==r)o++;let n=o+1;while(e[n]!==t||e[n]!==r)n++;return[o,n]},ne=()=>{const e=Array(5).fill(0),t=(0,z.Z)(4);return e[t]+=1,e},ie=(e,t)=>{if(t){const t=ee(e);return e[t[0]]+=1,se(e,t[1])}{const t=te(e);return se(e,t)}},se=(e,t)=>{const r=(0,V.Z)(e);return r[t]=r[t]+1,{board:r,isGameEnd:(0,_.Z)(r)>=10,hasFirstPlayerWon:!(0,y.Z)([...r].sort(),[0,1,2,3,4])}},ae=null;var le={template:r(6818),components:{GameSidebar:x},data:()=>({oneMoveDone:!1}),computed:{...(0,f.rn)(["board","shouldPlayerMoveNext","isPlayerTheFirstToMove"]),stepDescription(){return"Kattints arra a mezőre, ahova korongot szeretnél lerakni."}},methods:{...(0,f.nv)(["endPlayerTurn","initializeGame"]),placePiece(e){this.shouldPlayerMoveNext&&(this.isPlayerTheFirstToMove||this.oneMoveDone?(this.oneMoveDone=!1,this.endPlayerTurn(se(this.board,e))):(this.oneMoveDone=!0,this.board[e]+=1))}},created(){this.initializeGame()}};const de=({current:e,target:t,restricted:r})=>(t-e)%14===0||(t-e)%14===1||(t-e)%14-1===r?ce(r):(t-e)%14-1,ce=e=>{let t=e;while(t===e)t=(0,z.Z)(1,12);return t},ue=e=>pe(e,de(e)),he=()=>({current:0,target:(0,z.Z)(20,100),restricted:null}),ve=!1,pe=(e,t)=>{const r=e.current+t,o=r>=e.target;return{board:{current:r,target:e.target,restricted:13-t},isGameEnd:o}};var me={template:r(975),components:{GameSidebar:x},data:()=>({step:1}),computed:{...(0,f.rn)(["board","shouldPlayerMoveNext"]),...(0,f.Se)(["isEnemyMoveInProgress"]),stepDescription(){return"Írj be egy számot, majd nyomj Enter-t."}},methods:{...(0,f.nv)(["endPlayerTurn","initializeGame"]),attemptStep(){this.shouldPlayerMoveNext&&(this.step===this.board.restricted||this.step<=0||this.step>=13?alert("Ez a lépés nem megengedett"):this.endPlayerTurn(pe(this.board,this.step)))},resetTurnState(){this.step=1}},created(){this.initializeGame()}},ke=r(5030),be=r(7462);const ge=e=>{const t=(0,z.Z)(0,3);let r=0;if(e[0]%2===1&&(r+=1),e[1]%2===1&&(r+=1),e[2]%2===1&&(r+=1),e[3]%2===1&&(r+=1),4===r){let r=t;while(1===e[r])r+=1,r%=4;return fe(e,r,(r+1)%4)}if(3===r){let r=t;while(e[r]%2===1)r+=1,r%=4;return fe(e,r,(r+1)%4)}if(2===r){let r=t;while(e[r]%2===1)r+=1,r%=4;let o=(r+1)%4;while(e[o]%2===1)o+=1,o%=4;return fe(e,r,o)}if(1===r){let t=0;while(e[t]%2===0)t+=1,t%=4;if(1===e[t]&&2===e[(t+1)%4]&&2===e[(t+2)%4]&&2===e[(t+3)%4])return fe(e,(t+1)%4,(t+2)%4);{let r=e;return r[t]+=1,r=ge(r),r[t]-=1,r}}if(0===r)return 2===e[0]&&2===e[1]&&2===e[2]&&2===e[3]?fe(e,t,(t+1)%4):ge(e.map((e=>e/2))).map((e=>2*e))},fe=function(e,t,r){const o=e[t];let n=e;if(2===o)return n[t]=1,n[r]=1,n;const i=1+2*Math.ceil(Math.random()*Math.floor((o-2)/2));return n[t]=i,n[r]=o-i,n},ye=()=>[(0,z.Z)(4,18),(0,z.Z)(4,18),(0,z.Z)(4,18),(0,z.Z)(4,18)],we=(e,{removedRowIndex:t,splitRowIndex:r,pieceIndex:o})=>{const n=(0,ke.Z)([0,1,2,3],[t,r]),i=[e[n[0]],e[n[1]],o,e[r]-o];return{board:i,isGameEnd:ze(i)}},xe=!0,ze=e=>(0,be.Z)(e,(e=>1===e)),Pe=e=>{const t=ge(e);return{board:t,isGameEnd:ze(t)}};var Te={template:r(3814),components:{GameSidebar:x},data:()=>({removedRowIndex:null,hoveredPiece:null}),computed:{...(0,f.rn)(["board","shouldPlayerMoveNext"]),...(0,f.Se)(["isGameInProgress","isGameReadyToStart","isGameFinished"]),stepDescription(){return"Először kattints az eltávolítandó kupacra, majd arra a korongra, ahol ketté akarod vágni a kupacot."}},methods:{...(0,f.nv)(["endPlayerTurn","initializeGame"]),rowColor({rowIndex:e}){return this.isGameInProgress?e===this.removedRowIndex?null===this.hoveredPiece?"red":this.hoveredPiece.rowIndex===e?"blue":"red":null===this.hoveredPiece?"blue":null===this.removedRowIndex&&this.hoveredPiece.rowIndex===e?"red":"blue":"blue"},pieceClickNotAllowed({rowIndex:e,pieceIndex:t}){return null!==this.removedRowIndex&&(this.removedRowIndex!==e&&0===t)},clickPiece({rowIndex:e,pieceIndex:t}){this.shouldPlayerMoveNext&&(this.removedRowIndex!==e?null!==this.removedRowIndex?0!==t&&(this.endPlayerTurn(we(this.board,{removedRowIndex:this.removedRowIndex,splitRowIndex:e,pieceIndex:t})),this.resetTurnState()):this.removedRowIndex=e:this.removedRowIndex=null)},shouldShowDividerToTheLeft(e){return null!==this.removedRowIndex&&(this.removedRowIndex!==e.rowIndex&&((0,y.Z)(this.hoveredPiece,e)&&0!==e.pieceIndex))},currentChoiceDescription(e){if(this.isGameFinished)return"";const t=this.board[e];return this.isGameReadyToStart||!this.shouldPlayerMoveNext?t:e===this.removedRowIndex?this.hoveredPiece&&this.hoveredPiece.rowIndex===e?"Eldobás visszavonása?":`${t} → 🗑️`:this.hoveredPiece?null===this.removedRowIndex&&this.hoveredPiece.rowIndex===e?`${t} → 🗑️`:this.hoveredPiece.rowIndex!==e||0===this.hoveredPiece.pieceIndex?t:`${t} → ${this.hoveredPiece.pieceIndex}, ${t-this.hoveredPiece.pieceIndex}`:t},resetTurnState(){this.hoveredPiece=null,this.removedRowIndex=null}},created(){this.initializeGame()}};const Ie=function(e){const t=(0,z.Z)(0,2);return e[0]%2===1||e[1]%2===1||e[2]%2===1?e[t]%2===0?e[(t+1)%3]%2===0?Me(e,t,(t+1)%3):Me(e,t,(t+2)%3):e[(t+1)%3]%2===0?Me(e,(t+1)%3,(t+2)%3):e[(t+2)%3]%2===0?Me(e,(t+2)%3,(t+1)%3):1!==e[t]?Me(e,t,(t+1)%3):1!==e[(t+1)%3]?Me(e,(t+1)%3,(t+2)%3):Me(e,(t+2)%3,t):2===e[0]&&2===e[1]&&2===e[2]?Me(e,t,(t+1)%3):Ie(e.map((e=>e/2))).map((e=>2*e))},Me=function(e,t,r){const o=e[t];let n=e;if(2===o)return n[t]=1,n[r]=1,n;const i=1+2*Math.ceil(Math.random()*Math.floor((o-2)/2));return n[t]=i,n[r]=o-i,n},Se=()=>{const e=(0,z.Z)(4,20),t=(0,z.Z)(Math.max(4,17-e),Math.min(20,33-e));return[e,t,37-e-t]},je=(e,{removedRowIndex:t,splitRowIndex:r,pieceIndex:o})=>{const n=(0,ke.Z)([0,1,2],[t,r]),i=[e[n[0]],o,e[r]-o];return{board:i,isGameEnd:Ze(i)}},Ge=!0,Ae=e=>{const t=Ie(e);return{board:t,isGameEnd:Ze(t)}},Ze=e=>1===e[0]&&1===e[1]&&1===e[2];var Ce={template:r(2944),components:{GameSidebar:x},data:()=>({removedRowIndex:null,hoveredPiece:null}),computed:{...(0,f.rn)(["board","shouldPlayerMoveNext"]),...(0,f.Se)(["isGameInProgress","isGameReadyToStart","isGameFinished"]),stepDescription(){return"Először kattints az eltávolítandó kupacra, majd arra a korongra, ahol ketté akarod vágni a kupacot."}},methods:{...(0,f.nv)(["endPlayerTurn","initializeGame"]),rowColor({rowIndex:e}){return this.isGameInProgress?e===this.removedRowIndex?null===this.hoveredPiece?"red":this.hoveredPiece.rowIndex===e?"blue":"red":null===this.hoveredPiece?"blue":null===this.removedRowIndex&&this.hoveredPiece.rowIndex===e?"red":"blue":"blue"},pieceClickNotAllowed({rowIndex:e,pieceIndex:t}){return null!==this.removedRowIndex&&(this.removedRowIndex!==e&&0===t)},clickPiece({rowIndex:e,pieceIndex:t}){this.shouldPlayerMoveNext&&(this.removedRowIndex!==e?null!==this.removedRowIndex?0!==t&&(this.endPlayerTurn(je(this.board,{removedRowIndex:this.removedRowIndex,splitRowIndex:e,pieceIndex:t})),this.resetTurnState()):this.removedRowIndex=e:this.removedRowIndex=null)},shouldShowDividerToTheLeft(e){return null!==this.removedRowIndex&&(this.removedRowIndex!==e.rowIndex&&((0,y.Z)(this.hoveredPiece,e)&&0!==e.pieceIndex))},currentChoiceDescription(e){if(this.isGameFinished)return"";const t=this.board[e];return this.shouldPlayerMoveNext?e===this.removedRowIndex?this.hoveredPiece&&this.hoveredPiece.rowIndex===e?"Eldobás visszavonása?":`${t} → 🗑️`:this.hoveredPiece?null===this.removedRowIndex&&this.hoveredPiece.rowIndex===e?`${t} → 🗑️`:this.hoveredPiece.rowIndex!==e||0===this.hoveredPiece.pieceIndex?t:`${t} → ${this.hoveredPiece.pieceIndex}, ${t-this.hoveredPiece.pieceIndex}`:t:t},resetTurnState(){this.hoveredPiece=null,this.removedRowIndex=null}},created(){this.initializeGame()}},Ne=r(8146),Re=r(4379),De=r(4911),Fe=r(4081),Be=r(1092),Ee=r(9567);const He=()=>Array(9).fill(null),We=e=>(Ke(e)?e[_e(e)]="red":e[Je(e)]="white",Oe(e)),Oe=e=>({board:e,isGameEnd:$e(e)}),Le=!0,Ke=e=>void 0!==e.find(Ne.Z),$e=e=>{const t=(0,Re.Z)(0,9).filter((t=>e[t])),r=(0,De.Z)(t,(t=>e[t]));return(0,Fe.Z)(r,Ve)},Ve=e=>{const t=[[0,1,2],[3,4,5],[6,7,8],[0,3,6],[1,4,7],[2,5,8],[0,4,8],[2,4,6]];return(0,Fe.Z)(t.map((t=>0===(0,ke.Z)(t,e).length)))},_e=e=>{const t=(0,Re.Z)(0,9).filter((t=>(0,Ne.Z)(e[t]))),r=t.find((t=>{const r=(0,V.Z)(e);return r[t]="red",$e(r)}));if(void 0!==r)return r;const o=t.find((t=>{const r=(0,V.Z)(e);return r[t]="blue",$e(r)}));return o||(9!==t.length&&(0,Ne.Z)(e[4])?4:(0,Ne.Z)(e[0])?0:(0,Ne.Z)(e[2])?2:(0,Be.Z)(e,Ne.Z))},Je=e=>{const t=(0,Re.Z)(0,9).filter((t=>"blue"===e[t])),r=t.find((t=>{const r=(0,V.Z)(e);return r[t]="white",$e(r)}));return r||("blue"===e[4]?4:(0,y.Z)(t,[1,3,5,6,8])?3:(0,y.Z)(t,[0,1,5,6,7])?1:(0,y.Z)(t,[0,2,3,5,7])?5:(0,y.Z)(t,[1,2,3,7,8])?7:(0,y.Z)(t,[1,5,6,8])?8:(0,y.Z)(t,[0,5,6,7])?6:(0,y.Z)(t,[0,2,3,7])?0:(0,y.Z)(t,[1,2,3,8])||(0,y.Z)(t,[1,2,3,6,8])?2:(0,y.Z)(t,[0,1,5,6,8])?8:(0,y.Z)(t,[0,2,5,6,7])?6:(0,y.Z)(t,[0,2,3,7,8])?0:(0,y.Z)(t,[1,3,6,8])?3:(0,y.Z)(t,[0,1,5,6])?1:(0,y.Z)(t,[0,2,5,7])?5:(0,y.Z)(t,[2,3,7,8])?7:(0,Ee.Z)(t))};var qe={template:r(6306),components:{GameSidebar:x},computed:{...(0,f.rn)(["board","shouldPlayerMoveNext"]),inPlacingPhase(){return Ke(this.board)},stepDescription(){return this.inPlacingPhase?"Kattints egy üres mezőre.":"Kattints egy piros korongra."}},methods:{...(0,f.nv)(["endPlayerTurn","initializeGame"]),clickField({row:e,col:t}){this.isMoveAllowed({row:e,col:t})&&(this.board[3*e+t]=this.inPlacingPhase?"blue":"white",this.endPlayerTurn(Oe(this.board)))},isMoveAllowed({row:e,col:t}){return!!this.shouldPlayerMoveNext&&(this.inPlacingPhase?null===this.board[3*e+t]:"red"===this.board[3*e+t])},pieceColor({row:e,col:t}){const r=this.board[3*e+t];return"red"===r?"bg-red-600":"white"===r?"bg-white":"bg-blue-600"}},created(){this.initializeGame()}};const Xe=()=>({usedColors:["red","green","blue"],colors:Array(8).fill("white"),neighbours:{0:[1,3,4],1:[0,2,5],2:[1,3,4,6],3:[0,2,7],4:[0,2,5,7],5:[1,4,6],6:[2,5,7],7:[3,4,6]}}),Ye=(e,t)=>(e=t?nt(e):ot(e),Qe(e)),Qe=e=>{let t=!lt(e);return{board:e,isGameEnd:dt(e),hasFirstPlayerWon:t}},Ue=null,et=(e,t,r)=>{for(let o of e.neighbours[t])if(e.colors[o]===r)return!0;return!1},tt=(e,t,r)=>!et(e,t,r)&&at(e,t),rt=e=>{for(let t of e.usedColors)for(let r in e.colors)if(tt(e,r,t))return!0;return!1},ot=e=>{let t=[2,4,0,1,3,5,6,7];for(let r of t)for(let t of e.usedColors)if(tt(e,r,t))return e.colors[r]=t,e;return!1},nt=e=>{let t=[0,1,3,5,6,7,2,4];for(let r of t){let t=it(e,r);if(at(e,r)&&1===t.size)for(let o of st(e,r))for(let r of t)if(tt(e,o,r))return e.colors[o]=r,e}for(let r of t){let t=it(e,r);if(at(e,r)&&2===t.size)for(let o of st(e,r))for(let r of t)if(tt(e,o,r))return e.colors[o]=r,e}for(let r of t)for(let t of e.usedColors)if(tt(e,r,t))return e.colors[r]=t,e;return!1},it=(e,t)=>{let r=new Set;for(let n of e.neighbours[t])r.add(e.colors[n]);let o=new Set;for(let n of e.usedColors)r.has(n)||o.add(n);return o},st=(e,t)=>{let r=new Set;for(let o of e.neighbours[t])at(e,o)&&r.add(o);return r},at=(e,t)=>"white"===e.colors[t],lt=e=>{for(let t in e.colors)if(at(e,t))return!0;return!1},dt=e=>!rt(e);var ct={name:"cube-coloring",template:r(8818),components:{GameSidebar:x},computed:{...(0,f.rn)(["game","board","shouldPlayerMoveNext"]),stepDescription(){return"Válassz színt, majd színezz meg egy csúcsot!"}},data(){return{color:"",show:!1,x:0,y:0}},methods:{...(0,f.nv)(["endPlayerTurn","initializeGame"]),clickPicker(e){this.shouldPlayerMoveNext&&(this.color===e?this.show=!this.show:(this.show=!0,this.color=e))},drawPickedColor(e){this.x=e.offsetX,this.y=e.offsetY},setColor(e){this.shouldPlayerMoveNext&&this.show&&tt(this.board,e,this.color)&&(this.board.colors[e]=this.color,this.show=!1,this.endPlayerTurn(Qe(this.board)))}},created(){this.initializeGame()}};const ut=()=>{const e=[(0,z.Z)(0,6),(0,z.Z)(0,6),(0,z.Z)(0,6)];return 0!==e[1]||0!==e[2]?e:ut()},ht=!0,vt=e=>{const t=[0,1,2].filter((t=>e[t]%2===1));return 3!==t.length&&0!==t.length||(e[(0,Be.Z)(e,(e=>e>0))]-=1),2===t.length&&(e[t[1]]-=1,e[t[0]]+=1),1===t.length&&(e[t[0]]-=1),pt(e)},pt=e=>({board:e,isGameEnd:mt(e)}),mt=e=>0===e[0]&&0===e[1]&&0===e[2];var kt={template:r(3590),components:{GameSidebar:x},data:()=>({valueOfRemovedCoin:null,hoveredHeap:null}),computed:{...(0,f.rn)(["board","shouldPlayerMoveNext"]),wasCoinAlreadyRemovedInTurn(){return null!==this.valueOfRemovedCoin},stepDescription(){return this.wasCoinAlreadyRemovedInTurn?"Kattints egy mezőre, hogy visszatégy egy olyan pénzérmét":"Kattints egy mezőre, hogy elvegyél egy olyan pénzérmét"}},methods:{...(0,f.nv)(["endPlayerTurn","initializeGame"]),clickHeap(e){this.shouldPlayerMoveNext&&(this.isCoinActionInvalid(e)||(this.wasCoinAlreadyRemovedInTurn?(this.board[e]+=1,this.endTurn()):(this.valueOfRemovedCoin=e,this.board[e]-=1,0===e&&this.endTurn())))},resetTurnState(){this.hoveredHeap=null,this.valueOfRemovedCoin=null},endTurn(){this.endPlayerTurn(pt(this.board)),this.resetTurnState()},getCoinColor(e){return 0===e?"bg-yellow-700":1===e?"bg-slate-700":"bg-yellow-400"},shouldShowCoinToBeRemoved(e){return!!this.shouldPlayerMoveNext&&(!this.wasCoinAlreadyRemovedInTurn&&(e===this.hoveredHeap&&0!==this.board[e]))},shouldShowCoinToBeAdded(e){return!!this.wasCoinAlreadyRemovedInTurn&&(this.valueOfRemovedCoin>e&&e===this.hoveredHeap)},isCoinActionInvalid(e){return this.wasCoinAlreadyRemovedInTurn?this.valueOfRemovedCoin<=e:0===this.board[e]}},created(){this.initializeGame()}};const bt=()=>Array(9).fill(null),gt=(e,t)=>(0===e.filter((e=>e)).length?(e[0]="red",e[2]="red"):e[Tt(e,t)]=t?"blue":"red",ft(e)),ft=e=>({board:e,isGameEnd:xt(e),hasFirstPlayerWon:wt(e)}),yt=null,wt=e=>{if(!xt(e))return;const t=Pt((0,Re.Z)(0,9).filter((t=>"red"===e[t]))),r=Pt((0,Re.Z)(0,9).filter((t=>"blue"===e[t])));return t&&!r},xt=e=>9===e.filter((e=>e)).length||zt(e),zt=e=>Pt((0,Re.Z)(0,9).filter((t=>"blue"===e[t]))),Pt=e=>{const t=[[0,1,2],[3,4,5],[6,7,8],[0,3,6],[1,4,7],[2,5,8],[0,4,8],[2,4,6]];return(0,Fe.Z)(t.map((t=>0===(0,ke.Z)(t,e).length)))},Tt=(e,t)=>{const r=(0,Re.Z)(0,9).filter((t=>(0,Ne.Z)(e[t]))),o=t?"blue":"red",n=(0,Re.Z)(0,9).filter((t=>e[t]===o)),i=(0,Re.Z)(0,9).filter((t=>e[t]!==o&&!(0,Ne.Z)(e[t]))),s=r.find((e=>Pt([...i,e]))),a=r.find((e=>Pt([...n,e])));return void 0!==s&&void 0!==a?t?a:s:void 0!==s?s:void 0!==a?a:(0,Ne.Z)(e[4])?4:(0,Be.Z)(e,Ne.Z)};var It={template:r(9570),components:{GameSidebar:x},computed:{...(0,f.rn)(["board","shouldPlayerMoveNext","isPlayerTheFirstToMove"]),isDuringFirstMove(){return this.board.filter((e=>e)).length<=1},stepDescription(){return this.isDuringFirstMove?"Helyezz le két korongot (kattints a mezőkre)":"Helyezz le egy korongot egy üres mezőre kattintással."}},methods:{...(0,f.nv)(["endPlayerTurn","initializeGame"]),clickField({row:e,col:t}){this.shouldPlayerMoveNext&&(this.board[3*e+t]||(this.board[3*e+t]=this.isPlayerTheFirstToMove?"red":"blue",this.isDuringFirstMove||this.endPlayerTurn(ft(this.board))))},pieceColor({row:e,col:t}){const r=this.board[3*e+t];return"red"===r?"bg-red-600":"bg-blue-600"}},created(){this.initializeGame()}};const Mt=()=>Array(9).fill(null),St=(e,t)=>(e[Nt(e,t)]=t?"blue":"red",jt(e)),jt=e=>({board:e,isGameEnd:At(e),hasFirstPlayerWon:Zt(e)}),Gt=null,At=e=>{if(9===e.filter((e=>e)).length)return!0;const t=(0,Re.Z)(0,9).filter((t=>e[t])),r=(0,De.Z)(t,(t=>e[t]));return(0,Fe.Z)(r,Ct)},Zt=e=>{if(At(e))return 9===e.filter((e=>e)).length||e.filter((e=>e)).length%2===0},Ct=e=>{const t=[[0,1,2],[3,4,5],[6,7,8],[0,3,6],[1,4,7],[2,5,8],[0,4,8],[2,4,6]];return(0,Fe.Z)(t.map((t=>0===(0,ke.Z)(t,e).length)))},Nt=(e,t)=>{const r=(0,Re.Z)(0,9).filter((t=>(0,Ne.Z)(e[t]))),o=(0,Re.Z)(0,9).filter((t=>e[t]));if(9===r.length)return 4;const n=[[0,8],[1,7],[2,6],[3,5]],i=n.find((e=>1===(0,ke.Z)(e,o).length));if(i)return(0,ke.Z)(i,o)[0];const s=t?"blue":"red",a=(0,Re.Z)(0,9).filter((t=>e[t]===s)),l=r.filter((e=>!Ct([...a,e])));return l.length>0?(0,Ee.Z)(l):(0,Ee.Z)(r)};var Rt={template:r(9428),components:{GameSidebar:x},computed:{...(0,f.rn)(["board","shouldPlayerMoveNext","isPlayerTheFirstToMove"]),stepDescription(){return"Helyezz le egy korongot egy üres mezőre kattintással."}},methods:{...(0,f.nv)(["endPlayerTurn","initializeGame"]),clickField({row:e,col:t}){this.shouldPlayerMoveNext&&(this.board[3*e+t]||(this.board[3*e+t]=this.isPlayerTheFirstToMove?"red":"blue",this.endPlayerTurn(jt(this.board))))},pieceColor({row:e,col:t}){const r=this.board[3*e+t];return"red"===r?"bg-red-600":"bg-blue-600"}},created(){this.initializeGame()}},Dt=(r(6699),{template:r(2176)}),Ft=r(935);const Bt=()=>({chessBoard:["rook",...Array(63).fill(null)],rookPosition:{row:0,col:0}}),Et=!0,Ht=e=>{const t=Ot(e);return Wt(e,t)},Wt=(e,{row:t,col:r})=>(Kt(e,e.rookPosition,{row:t,col:r}),e.chessBoard[8*t+r]="rook",e.rookPosition={row:t,col:r},{board:e,isGameEnd:0===Lt(e).length}),Ot=e=>{const{row:t,col:r}=e.rookPosition,o=[];let n=1;while(r-n>=0&&null===e.chessBoard[8*t+r-n])o.push({row:t,col:r-n}),n+=1;n=1;while(r+n<=7&&null===e.chessBoard[8*t+r+n])o.push({row:t,col:r+n}),n+=1;if(o.length>=1)return(0,Ft.Z)(o);n=1;while(t-n>=0&&null===e.chessBoard[8*(t-n)+r])o.push({row:t-n,col:r}),n+=1;n=1;while(t+n<=7&&null===e.chessBoard[8*(t+n)+r])o.push({row:t+n,col:r}),n+=1;return(0,Ee.Z)(o)},Lt=e=>{const{row:t,col:r}=e.rookPosition,o=[];let n=1;while(t-n>=0&&null===e.chessBoard[8*(t-n)+r])o.push({row:t-n,col:r}),n+=1;n=1;while(t+n<=7&&null===e.chessBoard[8*(t+n)+r])o.push({row:t+n,col:r}),n+=1;n=1;while(r-n>=0&&null===e.chessBoard[8*t+r-n])o.push({row:t,col:r-n}),n+=1;n=1;while(r+n<=7&&null===e.chessBoard[8*t+r+n])o.push({row:t,col:r+n}),n+=1;return o},Kt=(e,t,r)=>{t.row===r.row&&(0,Re.Z)(t.col,r.col).forEach((r=>{e.chessBoard[8*t.row+r]="visited"})),t.col===r.col&&(0,Re.Z)(t.row,r.row).forEach((r=>{e.chessBoard[8*r+t.col]="visited"}))};var $t={template:r(4967),components:{GameSidebar:x,ChessRookSvg:Dt},computed:{...(0,f.rn)(["board","shouldPlayerMoveNext"]),stepDescription(){return"Kattints egy szabad mezőre a bástyával egy sorban vagy oszlopban, ahova a bástyával mozogni szeretnél."}},methods:{...(0,f.nv)(["endPlayerTurn","initializeGame"]),clickField({row:e,col:t}){this.isAllowedMove({row:e,col:t})&&this.endPlayerTurn(Wt(this.board,{row:e,col:t}))},isAllowedMove({row:e,col:t}){return!!this.shouldPlayerMoveNext&&Lt(this.board).map((({row:e,col:t})=>8*e+t)).includes(8*e+t)}},created(){this.initializeGame()}},Vt={template:r(8062)},_t=r(4711);const Jt=()=>Array(64).fill(null),qt=!0,Xt=e=>{const t=Qt(e);return Yt(e,t)},Yt=(e,{row:t,col:r})=>(er(e,{row:t,col:r}),e[8*t+r]="bishop",{board:e,isGameEnd:0===Ut(e).length}),Qt=e=>{const t=(0,_t.Z)((0,Re.Z)(0,8),(e=>(0,Re.Z)(0,8).map((t=>({row:e,col:t}))))).filter((({row:t,col:r})=>null===e[8*t+r]&&"bishop"===e[8*t+7-r]));if(t.length>0)return(0,Ee.Z)(t);const r=Ut(e);return(0,Ee.Z)(r)},Ut=e=>(0,_t.Z)((0,Re.Z)(0,8),(e=>(0,Re.Z)(0,8).map((t=>({row:e,col:t}))))).filter((({row:t,col:r})=>null===e[8*t+r])),er=(e,{row:t,col:r})=>{(0,Re.Z)(0,8).forEach((o=>{t-o>=0&&r-o>=0&&(e[8*(t-o)+r-o]="forbidden"),t+o<=7&&r+o<=7&&(e[8*(t+o)+r+o]="forbidden"),t+o<=7&&r-o>=0&&(e[8*(t+o)+r-o]="forbidden"),t-o>=0&&r+o<=7&&(e[8*(t-o)+r+o]="forbidden")}))};var tr={template:r(1451),components:{GameSidebar:x,ChessBishopSvg:Vt},data:()=>({hoveredField:null}),computed:{...(0,f.rn)(["board","shouldPlayerMoveNext"]),stepDescription(){return"Kattints egy mezőre, amit nem üt egyik futó sem."}},methods:{...(0,f.nv)(["endPlayerTurn","initializeGame"]),clickField({row:e,col:t}){this.isMoveAllowed({row:e,col:t})&&this.endPlayerTurn(Yt(this.board,{row:e,col:t}))},isPotentialNextStep(e){return!!this.isMoveAllowed(e)&&(!!this.hoveredField&&(0,y.Z)(this.hoveredField,e))},isMoveAllowed({row:e,col:t}){return!!this.shouldPlayerMoveNext&&Ut(this.board).map((({row:e,col:t})=>8*e+t)).includes(8*e+t)},wouldBeForbidden({row:e,col:t}){return!!this.shouldPlayerMoveNext&&(!!this.hoveredField&&(!!this.isMoveAllowed(this.hoveredField)&&(!!this.isMoveAllowed({row:e,col:t})&&(!this.isPotentialNextStep({row:e,col:t})&&Math.abs(e-this.hoveredField.row)===Math.abs(t-this.hoveredField.col)))))}},created(){this.initializeGame()}};const rr={HeapSplitter:Z,HunyadiAndTheJanissaries:W,Demonstration:O,TwoTimesTwo:U,FiveSquares:le,SuperstitiousCounting:me,HeapSplitter4:Te,HeapSplitter3:Ce,TicTacToe:qe,CubeColoring:ct,Coin123:kt,TicTacToeDoubleStart:It,AntiTicTacToe:Rt,ChessRook:$t,ChessBishops:tr},or={ChessBishops:{year:1,round:"döntő",category:"B",component:"ChessBishops",name:"Sakktáblán futók",strategy:b},ChessRook:{year:1,round:"döntő",category:"C",component:"ChessRook",name:"Sakktáblán egy bástya",strategy:k},HunyadiAndTheJanissaries:{year:6,round:"döntő",category:"D",component:"HunyadiAndTheJanissaries",name:"Hunyadi és a janicsárok",strategy:n},HeapSplitter:{year:8,round:"döntő",category:"A",component:"HeapSplitter",name:"Kupac kettéosztó",strategy:o},HeapSplitter3:{year:8,round:"döntő",category:"B",name:"Kupac kettéosztó 3 kupaccal",component:"HeapSplitter3",strategy:c},Demonstration:{name:"Demonstráló játék",component:"Demonstration",strategy:i,isHiddenFromOverview:!0},TicTacToeDoubleStart:{year:12,round:"döntő",category:"A",name:"Duplán kezdő 3x3 amőba",component:"TicTacToeDoubleStart",strategy:p},AntiTicTacToe:{year:12,round:"döntő",category:"B",name:"3x3 Anti-amőba",component:"AntiTicTacToe",strategy:m},TwoTimesTwo:{year:13,round:"döntő",category:"A",name:"2x2-es játék",component:"TwoTimesTwo",strategy:s},FiveSquares:{year:13,round:"döntő",category:"B",name:"5 mezős játék",component:"FiveSquares",strategy:a},TicTacToe:{year:13,round:"döntő",category:"C",name:"Átszínezős Tic Tac Toe",component:"TicTacToe",strategy:u},SuperstitiousCounting:{year:13,round:"döntő",category:"D,E",name:"Babonás számoló",component:"SuperstitiousCounting",strategy:l},HeapSplitter4:{year:13,round:"döntő",category:"E+",name:"Kupac kettéosztó 4 kupaccal",component:"HeapSplitter4",strategy:d},CubeColoring:{year:15,round:"döntő",category:"C",name:"Kockaszínezés",component:"CubeColoring",strategy:h},Coin123:{year:15,round:"döntő",category:"B",name:"3, 2, 1 érmék",component:"Coin123",strategy:v}};var nr={template:r(8953)},ir={template:r(487),components:{...rr,PageNotFound:nr},props:{gameId:String},computed:{...(0,f.rn)(["gameDefinition"])},methods:{...(0,f.OI)(["setGameDefinition","setGameStatus"]),goBackToOverview(){this.$router.push("/")},setGameBasedOnRoute(){this.setGameDefinition({gameId:this.gameId})}},mounted(){this.setGameBasedOnRoute()},watch:{gameId(){this.setGameBasedOnRoute()}}},sr={template:r(411),data:()=>({gamesToShow:Object.values(or).filter((e=>!e.isHiddenFromOverview))}),methods:{...(0,f.OI)(["setGameDefinition","setGameStatus"]),goToGamePage(e){this.$router.push(`/game/${e}`)}},mounted(){this.setGameDefinition({gameId:null}),this.setGameStatus(null)}},ar={template:r(6203),components:{Game:ir,Overview:sr},async errorCaptured(){window.alert("An unexpected error happened, it is our fault, not yours! Try refreshing the page.")}},lr=()=>(0,f.MT)({state:{gameDefinition:null,board:null,gameStatus:null,isPlayerTheFirstToMove:null,shouldPlayerMoveNext:null,isPlayerWinner:null,enemyMoveTimeoutHandle:null,isEnemyMoveInProgress:null},getters:{isGameInProgress:e=>"inProgress"===e.gameStatus,isGameReadyToStart:e=>"readyToStart"===e.gameStatus,isGameFinished:e=>"finished"===e.gameStatus,isEnemyMoveInProgress:e=>e.isEnemyMoveInProgress&&null!==e.enemyMoveTimeoutHandle,ctaText:(e,t)=>t.isGameInProgress?e.shouldPlayerMoveNext?"Te jössz.":"Mi jövünk.":t.isGameFinished?e.isPlayerWinner?"Nyertél. Gratulálunk! :)":"Sajnos, most nem nyertél, de ne add fel.":"A gombra kattintva tudod elindítani a játékot."},mutations:{setGameDefinition(e,{gameId:t}){e.gameDefinition=or[t]||null},setGameStatus(e,t){e.gameStatus=t},setBoard(e,t){e.board=t}},actions:{initializeGame({state:e,commit:t}){clearTimeout(e.enemyMoveTimeoutHandle),e.isEnemyMoveInProgress=!1,e.shouldPlayerMoveNext=null,e.isPlayerWinner=null,e.isPlayerTheFirstToMove=null,e.board=e.gameDefinition.strategy.generateNewBoard(),t("setGameStatus","readyToStart")},startGameWithRoleSelection:({state:e,dispatch:t},{isFirst:r=!0})=>{e.isPlayerTheFirstToMove=r,e.shouldPlayerMoveNext=r,e.gameStatus="inProgress",r||t("makeAiMove")},endPlayerTurn:({dispatch:e},{board:t,isGameEnd:r,hasFirstPlayerWon:o})=>{e("endTurn",{board:t,isGameEnd:r,hasFirstPlayerWon:o}),r||e("makeAiMove")},makeAiMove:async({state:e,dispatch:t})=>{e.isEnemyMoveInProgress=!0;const r=Math.floor(750*Math.random()+750);e.enemyMoveTimeoutHandle=setTimeout((()=>{t("endTurn",e.gameDefinition.strategy.getGameStateAfterAiMove(e.board,e.isPlayerTheFirstToMove)),e.isEnemyMoveInProgress=!1}),r)},endTurn({state:e,dispatch:t},{board:r,isGameEnd:o,hasFirstPlayerWon:n}){if(e.board=r,e.shouldPlayerMoveNext=!e.shouldPlayerMoveNext,o){const r=null===e.gameDefinition.strategy.isTheLastMoverTheWinner?e.isPlayerTheFirstToMove===n:e.gameDefinition.strategy.isTheLastMoverTheWinner===!e.shouldPlayerMoveNext;t("endGame",{isPlayerWinner:r})}},endGame({state:e},{isPlayerWinner:t}){e.isPlayerWinner=t,clearTimeout(e.enemyMoveTimeoutHandle),e.gameStatus="finished",e.shouldPlayerMoveNext=null}}}),dr=r(2119);const cr=[{path:"/",component:sr},{path:"/game/:gameId/",component:ir,props:!0},{path:"/:path(.*)*",component:nr}];var ur=()=>(0,dr.p7)({history:(0,dr.r5)(),routes:cr});const hr=(0,g.ri)(ar);hr.use(lr()),hr.use(ur()),hr.mount("#app")},9259:function(e,t,r){"use strict";e.exports=r.p+"img/hunyadi-and-the-janissaries-castle.jpg"}},t={};function r(o){var n=t[o];if(void 0!==n)return n.exports;var i=t[o]={exports:{}};return e[o](i,i.exports,r),i.exports}r.m=e,function(){var e=[];r.O=function(t,o,n,i){if(!o){var s=1/0;for(c=0;c<e.length;c++){o=e[c][0],n=e[c][1],i=e[c][2];for(var a=!0,l=0;l<o.length;l++)(!1&i||s>=i)&&Object.keys(r.O).every((function(e){return r.O[e](o[l])}))?o.splice(l--,1):(a=!1,i<s&&(s=i));if(a){e.splice(c--,1);var d=n();void 0!==d&&(t=d)}}return t}i=i||0;for(var c=e.length;c>0&&e[c-1][2]>i;c--)e[c]=e[c-1];e[c]=[o,n,i]}}(),function(){r.d=function(e,t){for(var o in t)r.o(t,o)&&!r.o(e,o)&&Object.defineProperty(e,o,{enumerable:!0,get:t[o]})}}(),function(){r.g=function(){if("object"===typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(e){if("object"===typeof window)return window}}()}(),function(){r.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)}}(),function(){r.r=function(e){"undefined"!==typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})}}(),function(){r.p="/durer-jatekok/"}(),function(){var e={143:0};r.O.j=function(t){return 0===e[t]};var t=function(t,o){var n,i,s=o[0],a=o[1],l=o[2],d=0;if(s.some((function(t){return 0!==e[t]}))){for(n in a)r.o(a,n)&&(r.m[n]=a[n]);if(l)var c=l(r)}for(t&&t(o);d<s.length;d++)i=s[d],r.o(e,i)&&e[i]&&e[i][0](),e[i]=0;return r.O(c)},o=self["webpackChunkdurer_jatekok"]=self["webpackChunkdurer_jatekok"]||[];o.forEach(t.bind(null,0)),o.push=t.bind(null,o.push.bind(o))}();var o=r.O(void 0,[998],(function(){return r(623)}));o=r.O(o)})();
//# sourceMappingURL=app.js.map